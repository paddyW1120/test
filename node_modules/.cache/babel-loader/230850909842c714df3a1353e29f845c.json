{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js!D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\product-package-definition\\pp-framework-def\\pp-program-def\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\product-package-definition\\pp-framework-def\\pp-program-def\\index.vue","mtime":1609847107005},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1706753193796},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <cus-wraper>\r\n    <cus-page-title :label=\"$t('pdPpScheme.titlt')\"/>\r\n    <el-form :disabled=\"showPageFlag=='1'\" label-width=\"auto\" :model=\"pdPpInfo\" :rules=\"rules\" ref=\"pdPpInfo\">\r\n      <el-row :gutter=\"20\">\r\n        <el-col :span=\"7\">\r\n          <el-form-item style=\"white-space: nowrap;\" :label=\"$t('pdPpScheme.pdppInfo')\" prop=\"ppCode\">\r\n            <el-tag type=\"info\">{{pdPpInfo.ppCode+\":\"+pdPpInfo.ppName}}</el-tag>\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"7\">\r\n          <el-form-item style=\"white-space: nowrap;\" :label=\"$t('pdPpScheme.ppSchemeCode')\" prop=\"ppPlanCode\">\r\n            <el-tag type=\"info\" v-show=\"!ButtonFlag\">{{pdPpInfo.ppPlanCode}}</el-tag>\r\n            <el-input clearable  v-model=\"pdPpInfo.ppPlanCode\" v-show=\"ButtonFlag\"></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"7\">\r\n          <el-form-item style=\"white-space: nowrap;\" :label=\"$t('pdPpScheme.ppSchemeName')\" prop=\"ppPlanName\">\r\n            <el-input clearable  v-model=\"pdPpInfo.ppPlanName\"></el-input>\r\n          </el-form-item>\r\n        </el-col>\r\n      </el-row>\r\n    <cus-table-title :label=\"$t('pdPpScheme.tableTitle')\"/>\r\n    <el-table :data=\"pdPpSchemerela\" size=\"mini\" fit element-loading-text=\"Loading\" border\r\n              align=\"center\" ref=\"pdPpSchemerela\" :span-method=\"objectSpanMethod2\"\r\n               @selection-change=\"selectedProgSchemeChanged\"\r\n              class=\"wraper-table\">\r\n      <el-table-column :label=\"$t('table.select')\" align=\"center\" width=\"50px\" type=\"selection\">\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('table.id')\" align=\"center\" width=\"50\" type=\"index\">\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('i18nView.pdCode')\" prop=\"pdCode\" align=\"center\"></el-table-column>\r\n      <el-table-column :label=\"$t('i18nView.pdName')\" prop=\"pdName\" align=\"center\"></el-table-column>\r\n      <el-table-column :label=\"$t('customComponents.pdEdition')\" prop=\"pdEdition\" align=\"center\"></el-table-column>\r\n      <el-table-column :label=\"$t('pdPpScheme.opCode')\" prop=\"pdProgCode\" align=\"center\"></el-table-column>\r\n      <el-table-column :label=\"$t('pdPpScheme.opName')\" prop=\"pdProgName\" align=\"center\"></el-table-column>\r\n    </el-table>\r\n\r\n\r\n    <cus-form-title :label=\"$t('pdPpScheme.formTitle')\"></cus-form-title>\r\n    <div style=\"width: 80%; margin-left: 40px\">\r\n      <el-tree\r\n        highlight-current\r\n        :data=\"ListPdInfos\"\r\n        show-checkbox\r\n        ref=\"treeProg\"\r\n        default-expand-all\r\n        :render-content=\"renderContent\"\r\n        :default-checked-keys=\"ListdefaultexpandedKeys\"\r\n        node-key=\"id\" @node-click=\"nodeClick\"\r\n        :props=\"defaultProps\">\r\n      </el-tree>\r\n    </div>\r\n    <el-form :disabled=\"showPageFlag=='1'\" style=\"margin: 20px 0 0 0\">\r\n      <el-row >\r\n        <el-col :offset=\"18\" :span=\"24\">\r\n          <el-button  size=\"small\" @click=\"getCheckedNodes\" type=\"primary\" icon=\"el-icon-success\" v-show=\"ButtonFlag\" dialog-disable=\"disable\">\r\n            {{ $t('pdPpScheme.button.save') }}\r\n          </el-button>\r\n          <el-button  size=\"small\" @click=\"getCheckedNodes\" type=\"primary\" icon=\"el-icon-success\" v-show=\"!ButtonFlag\" dialog-disable=\"disable\">\r\n            {{ $t('pdPpScheme.button.savechange') }}\r\n          </el-button>\r\n          <el-button  size=\"small\" @click=\"deleteCheckedNodes\" type=\"danger\" icon=\"el-icon-delete\" v-show=\"!ButtonFlag\" dialog-disable=\"disable\">\r\n            {{ $t('table.delete') }}\r\n          </el-button>\r\n          <el-button  size=\"small\" @click=\"handleClear\" type=\"primary\" icon=\"el-icon-refresh\" dialog-disable=\"disable\">\r\n            {{ $t('pdPpScheme.button.refresh') }}\r\n          </el-button>\r\n\r\n        </el-col>\r\n      </el-row>\r\n    </el-form>\r\n\r\n<!--    <el-dialog :visible.sync=\"ProgInfoShow\" v-dialog-drag-->\r\n<!--               v-if=\"ProgInfoShow\" width=\"70%\">-->\r\n<!--      <progBnft :product=\"selectedProg\"></progBnft>-->\r\n<!--    </el-dialog>-->\r\n      <el-dialog  :visible.sync=\"ProgInfoShow\" v-dialog-drag\r\n                  v-if=\"ProgInfoShow\" width=\"70%\">\r\n        <ProgrammeDefinition :reaadOnlyPpProg=\"false\"></ProgrammeDefinition>\r\n      </el-dialog>\r\n    </el-form>\r\n  </cus-wraper>\r\n</template>\r\n<script>\r\n  import progBnft from \"@/views/product-package-definition/pp-framework-def/pp-info-def/pdpppdprogsInfo/index\"\r\n  import ProgrammeDefinition from \"@/views/product-definition/pd-framework-def/pd-structure-def/program-def\"\r\n  import {\r\n    searchPpProgsAll,\r\n    saveCheckedNodes,\r\n    findAllProgRelaByProductId,\r\n    findAttributrEntity,\r\n    deleteCheckedNodes,\r\n    lookProgInfo,\r\n    findAllProgrammeVoByProductIdPp\r\n  } from '@/api/basicinfo/pdppscheme'\r\n  export default {\r\n    name: 'pdPpScheme',\r\n    data() {\r\n      return {\r\n        selectedProg: '',\r\n        ProgInfoShow: false,\r\n        showPageFlag:'',\r\n        spanArr: [],\r\n        pos: 0,\r\n        ButtonFlag: true,\r\n        dataFlag: true,\r\n        defaultProps: {\r\n          children: 'children',\r\n          label: 'label'\r\n        },\r\n        chooseRowId: [],\r\n        pdPpInfo: {\r\n          id: '',\r\n          ppCode: '',\r\n          ppName: '',\r\n          ppType: '',//类型\r\n          ppPlanName: '',\r\n          ppPlanCode: '',\r\n          ppPersonNum: '',\r\n        },\r\n        pdPpInfo2: {\r\n          id: '',\r\n          ppCode: '',\r\n          ppName: '',\r\n          ppType: '',//类型\r\n          ppPlanName: '',\r\n          ppPlanCode: '',\r\n          ppPersonNum: '',\r\n        },\r\n        pdPpSchemerela: [],\r\n        ListPdInfos: [],\r\n        ListPdInfosResult: [],\r\n        ListdefaultexpandedKeys: [],\r\n        params: {},\r\n        form: {  //表单数据与后端实体类对应\r\n        },\r\n        //检验规则\r\n        rules: {\r\n          ppPlanCode: [{required: true, message: this.$t('pdPpScheme.waring.ppschemeCodeIdea'), trigger: 'blur'}],\r\n          ppPlanName: [{required: true, message: this.$t('pdPpScheme.waring.ppschemeNameIdea'), trigger: 'blur'}]\r\n        },\r\n\r\n      }\r\n    },\r\n    computed: {},\r\n    components: {progBnft,ProgrammeDefinition},\r\n    created() {\r\n      this.showPageFlag = this.$route.query.showPageFlag\r\n      this.init();\r\n    },\r\n    methods: {\r\n      renderContent(h,{node,data,store}){\r\n        if (node.childNodes.length==0){\r\n          return (<span><i class={data.className}></i><span>{node.label}</span><i style=\"color:#1890ff\"> >></i></span>);\r\n        }else {\r\n          return (<span><i class={data.className}></i><span>{node.label}</span></span>);\r\n        }\r\n      },\r\n      nodeClick(val){\r\n        let _flag=true;\r\n        for (const item in this.ListPdInfosResult){\r\n          if (val.code==this.ListPdInfosResult[item].pdCode){\r\n            _flag=false;\r\n            break;\r\n          }\r\n        }\r\n        if (_flag) {\r\n          let map = {\r\n            \"progCode\": val.code,\r\n            \"progName\": val.label\r\n          }\r\n\r\n\r\n          lookProgInfo(this.buildRequestData(map)).then(res => {\r\n            this.cacheJsonData(\"form_programme\", res.data.pdProgS)\r\n            this.cacheCurrPagePdData(res.data.pdInfoS)\r\n            this.cacheJsonData(\"tableData_programme\", res.data.progOneInfoS)\r\n            this.cacheJsonData(\"ReadPpProgInfo\",true);\r\n            let maps = {\r\n              \"productId\": res.data.pdInfoS.id,\r\n              \"like_pdProgName\":val.label,\r\n              \"eq_pdProgCode\":val.code\r\n            }\r\n            findAllProgrammeVoByProductIdPp(this.buildRequestData(maps)).then(res =>{\r\n              this.cacheJsonData(\"premiumList\", res.data.prem);\r\n              this.cacheJsonData(\"survivalList\", res.data.survivalList);\r\n              this.cacheJsonData(\"claimList\",res.data.claimList);\r\n            });\r\n            this.$nextTick(() => {\r\n              this.ProgInfoShow = true;\r\n            })\r\n          })\r\n        } else {\r\n          return;\r\n        }\r\n      },\r\n      init() {\r\n        this.ProgInfoShow = false;\r\n        this.getPpInfo();\r\n        this.getPpInfoRelaProg();\r\n        this.handleClear();\r\n        this.createdpdinfos();\r\n      },\r\n      getPpInfo() {\r\n        //套餐信息\r\n        this.pdPpInfo = this.getPdData()\r\n        findAttributrEntity(this.buildRequestData({'ppInfoAttr': this.pdPpInfo})).then(res => {\r\n          this.pdPpInfo = res.data.pdPpInfoA;\r\n          if (this.pdPpInfo.ppPlanCode) {\r\n            this.ButtonFlag = false;\r\n          } else {\r\n            this.ButtonFlag = true;\r\n          }\r\n        })\r\n      },\r\n      getPpInfoRelaProg() {\r\n        //套餐方案关联关系\r\n        findAllProgRelaByProductId(this.buildRequestData({'pdppInfoR': this.pdPpInfo})).then(res => {\r\n            this.pdPpSchemerela = res.data.ppschemes;\r\n            // this.getSpanArr(this.pdPpSchemerela);\r\n            this.getOrderNumber();\r\n          }\r\n        )\r\n      },\r\n      createdpdinfos() {\r\n        //套餐组合内容树\r\n        searchPpProgsAll(this.buildRequestData({'pdppInfoR': this.pdPpInfo})).then(res => {\r\n          this.ListPdInfosResult = res.data.ppProgsR;\r\n          this.append();\r\n        })\r\n      },\r\n      append() {\r\n        this.ListPdInfos = [];\r\n        let arrayInfo = this.ListPdInfosResult;\r\n        let arrayInfoNum = 0;\r\n        let arrayInfoNum2 = 0;\r\n        for (arrayInfoNum = 0; arrayInfoNum < arrayInfo.length; arrayInfoNum++) {\r\n          let arrayItemprog = {\r\n            id: '',\r\n            code: '',\r\n            label: '',\r\n            children: [{\r\n              id: '',\r\n              code: '',\r\n              label: ''\r\n            }]\r\n          };\r\n          arrayItemprog.id = '';\r\n          arrayItemprog.code = '';\r\n          arrayItemprog.label = '';\r\n          if (arrayItemprog.children) {\r\n            arrayItemprog.children.splice(0, arrayItemprog.children.length);\r\n          }\r\n          for (arrayInfoNum2 = 0; arrayInfoNum2 < arrayInfo[arrayInfoNum].parameters.length; arrayInfoNum2++) {\r\n            arrayItemprog.id = arrayInfo[arrayInfoNum].pdVerId;\r\n            arrayItemprog.code = arrayInfo[arrayInfoNum].pdCode;\r\n            arrayItemprog.label = arrayInfo[arrayInfoNum].pdName;\r\n            let num1 = arrayInfo[arrayInfoNum].pdCode;\r\n            let num2 = arrayInfo[arrayInfoNum].parameters[arrayInfoNum2].pdCode;\r\n            if (num1 === num2) {\r\n              const newChild = {\r\n                id: '',\r\n                code: '',\r\n                label: ''\r\n              };\r\n              newChild.id = arrayInfo[arrayInfoNum].parameters[arrayInfoNum2].id;\r\n              newChild.label = arrayInfo[arrayInfoNum].parameters[arrayInfoNum2].pdProgName;\r\n              newChild.code = arrayInfo[arrayInfoNum].parameters[arrayInfoNum2].pdProgCode;\r\n              if (!arrayItemprog.children) {\r\n                this.$set(arrayItemprog, 'children', []);\r\n              }\r\n              arrayItemprog.children.push(newChild);\r\n            }\r\n          }\r\n          if (arrayItemprog) {\r\n            this.ListPdInfos.push(arrayItemprog);\r\n          }\r\n        }\r\n      },\r\n      selectedProgSchemeChanged(val) {\r\n        this.dataFlag = false;\r\n        this.chooseRowId = val;\r\n        if (this.chooseRowId.length == 0) {\r\n          this.$refs.treeProg.setCheckedNodes([]);\r\n          this.dataFlag = true;\r\n        } else {\r\n          this.setProgsShow();\r\n          this.$refs.treeProg.setCheckedNodes(this.ListdefaultexpandedKeys);\r\n        }\r\n\r\n      },\r\n      setProgsShow() {\r\n        this.ListdefaultexpandedKeys = [];\r\n        let arrayInfo = this.ListPdInfosResult;\r\n        let arrayInfoNum = 0;\r\n        let arrayInfoNum2 = 0;\r\n        let _arrChooseNum = 0;\r\n        let _arrppSchemeNum = 0;\r\n        let _arrChoose = this.chooseRowId;\r\n        let _arrppScheme = this.pdPpSchemerela;\r\n        let _numArr =[];\r\n        for (_arrppSchemeNum=0;_arrppSchemeNum<_arrppScheme.length;_arrppSchemeNum++){\r\n          for (_arrChooseNum = 0; _arrChooseNum < _arrChoose.length; _arrChooseNum++){\r\n            let num1 = _arrppScheme[_arrppSchemeNum].pdCode;\r\n            let num4 = _arrChoose[_arrChooseNum].pdCode;\r\n            if (num1===num4){\r\n              _numArr.push(_arrppScheme[_arrppSchemeNum]);\r\n            }\r\n\r\n          }\r\n        }\r\n        _arrChoose = _numArr;\r\n        for (_arrChooseNum = 0; _arrChooseNum < _arrChoose.length; _arrChooseNum++) {\r\n          for (arrayInfoNum = 0; arrayInfoNum < arrayInfo.length; arrayInfoNum++) {\r\n            if (arrayInfo[arrayInfoNum].pdCode === _arrChoose[_arrChooseNum].pdCode) {\r\n              let arrayItemprog = {\r\n                id: '',\r\n                code: '',\r\n                label: ''\r\n              };\r\n              arrayItemprog.id = '';\r\n              arrayItemprog.code = '';\r\n              arrayItemprog.label = '';\r\n              for (arrayInfoNum2 = 0; arrayInfoNum2 < arrayInfo[arrayInfoNum].parameters.length; arrayInfoNum2++) {\r\n                let num1 = arrayInfo[arrayInfoNum].pdCode;\r\n                let num2 = arrayInfo[arrayInfoNum].parameters[arrayInfoNum2].pdCode;\r\n                let num3 = arrayInfo[arrayInfoNum].parameters[arrayInfoNum2].pdProgCode;\r\n                let num4 = _arrChoose[_arrChooseNum].pdProgCode;\r\n                if (num1 === num2 && num3 === num4) {\r\n                  arrayItemprog.id = arrayInfo[arrayInfoNum].parameters[arrayInfoNum2].id;\r\n                  arrayItemprog.code = arrayInfo[arrayInfoNum].parameters[arrayInfoNum2].pdProgCode;\r\n                  arrayItemprog.label = arrayInfo[arrayInfoNum].parameters[arrayInfoNum2].pdProgName;\r\n                }\r\n              }\r\n              if (arrayItemprog) {\r\n                this.ListdefaultexpandedKeys.push(arrayItemprog);\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n      },\r\n      getCheckedNodes() {\r\n        this.$refs.pdPpInfo.validate(valid => {\r\n          if (valid) {\r\n            let map = {\r\n              'ppInfo': this.pdPpInfo,\r\n              'ppSchemeInfoName': this.pdPpInfo.ppPlanName,\r\n              'ppSchemeInfoCode': this.pdPpInfo.ppPlanCode,\r\n              \"pdInfoAndProg\": this.$refs.treeProg.getCheckedNodes()\r\n            }\r\n            saveCheckedNodes(this.buildRequestData(map)).then(res => {\r\n              this.notifySuccess(res.success);\r\n              this.init();\r\n            })\r\n          }\r\n        })\r\n      },\r\n      handleClear() {\r\n         this.chooseRowId=[];\r\n\r\n        this.$nextTick(() => {\r\n          this.$refs.treeProg.setCheckedKeys([]);\r\n          this.$refs.pdPpSchemerela.clearSelection();\r\n        });\r\n\r\n      },\r\n\r\n      // 获取相同编号的数组\r\n      getOrderNumber() {\r\n        let tableData = this.pdPpSchemerela\r\n        let orderIndexArr = []\r\n        // 按照 paymentId 排序，将 paymentId 相同的数据连在一起\r\n        tableData = this._.orderBy(tableData, 'pdCode', 'asc')\r\n        this.pdPpSchemerela = tableData\r\n        let orderObj = {}\r\n        tableData.forEach((element, index) => {\r\n          element.rowIndex = index\r\n          if (orderObj[element.pdCode]) {\r\n            orderObj[element.pdCode].push(index)\r\n          } else {\r\n            orderObj[element.pdCode] = []\r\n            orderObj[element.pdCode].push(index)\r\n          }\r\n        })\r\n        // 需要合并的行的index已经存在了同一个数组里，把这些数组存储到 this.orderIndexArr\r\n        for (let k in orderObj) {\r\n          orderIndexArr.push(orderObj[k])\r\n        }\r\n        this.spanArr = orderIndexArr\r\n      },\r\n      objectSpanMethod2({row, column, rowIndex, columnIndex}) {\r\n        if (columnIndex === 0 || columnIndex === 2 || columnIndex === 4 || columnIndex === 3) {\r\n          for (let i = 0; i < this.spanArr.length; i++) {\r\n            let element = this.spanArr[i]\r\n            for (let j = 0; j < element.length; j++) {\r\n              let item = element[j]\r\n              if (rowIndex === item) {\r\n                if (j === 0) {\r\n                  return {\r\n                    rowspan: element.length,\r\n                    colspan: 1\r\n                  }\r\n                } else {\r\n                  return {\r\n                    rowspan: 0,\r\n                    colspan: 0\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      },\r\n      deleteCheckedNodes() {\r\n        let map = {\r\n          'ppInfo': this.pdPpInfo,\r\n          \"pdInfoAndProg\": this.chooseRowId\r\n        }\r\n        deleteCheckedNodes(this.buildRequestData(map)).then(res => {\r\n          this.notifySuccess(res.message);\r\n          this.init();\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>\r\n"],"sourceRoot":"src/views/product-package-definition/pp-framework-def/pp-program-def"}]}