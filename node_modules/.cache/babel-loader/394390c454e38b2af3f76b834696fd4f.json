{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js!D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\customComponents\\CodeCascader\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\customComponents\\CodeCascader\\index.vue","mtime":1609847106329},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1706753193796},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJEOi84NjE4MS9EZXNrdG9wL3Byb2R1Y3QvcGNzLXByb2R1Y3Qtdmlldy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIik7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7CiAgdmFsdWU6IHRydWUKfSk7CmV4cG9ydHMuZGVmYXVsdCA9IHZvaWQgMDsKCnZhciBfb2JqZWN0U3ByZWFkMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiRDovODYxODEvRGVza3RvcC9wcm9kdWN0L3Bjcy1wcm9kdWN0LXZpZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvb2JqZWN0U3ByZWFkMiIpKTsKCnZhciBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkQ6Lzg2MTgxL0Rlc2t0b3AvcHJvZHVjdC9wY3MtcHJvZHVjdC12aWV3L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIiKSk7Cgp2YXIgX3Z1ZXggPSByZXF1aXJlKCJ2dWV4Iik7CgovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwp2YXIgX2RlZmF1bHQyID0gewogIG5hbWU6ICdDYXNjYWRlcicsCiAgcHJvcHM6IHsKICAgIHNob3dBbGxMZXZlbHM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGNvZGV0eXBlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBpc19tdWx0aXBsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICByZXF1aXJlZDogZmFsc2UsCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgZmlsdGVyOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IGZhbHNlCiAgICB9LAogICAgZGlzYWJsZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgcmVxdWlyZWQ6IGZhbHNlCiAgICB9LAogICAgdmFsdWU6IHsKICAgICAgdHlwZTogQXJyYXkKICAgIH0sCiAgICBkaXNhYmxlZENvZGVBcnJheV9maXJzdDogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgcmVxdWlyZWQ6IGZhbHNlLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICBkaXNhYmxlZENvZGVBcnJheV9zZWNvbmQ6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIGZpcnN0T3B0aW9ucyA9IHRoaXMubGRjb2Rlc1t0aGlzLmNvZGV0eXBlXTsKICAgIHRoaXMuYnVpbGRDYXNDYWRlck9wdGlvbnMoZmlyc3RPcHRpb25zKTsKCiAgICBpZiAodGhpcy5pc19tdWx0aXBsZSkgewogICAgICB0aGlzLnNldHRpbmdzID0gewogICAgICAgICdtdWx0aXBsZSc6IHRydWUKICAgICAgfTsKICAgIH0KCiAgICB0aGlzLnNlbGVjdFZhbHVlID0gdGhpcy52YWx1ZTsKCiAgICBpZiAodGhpcy5kaXNhYmxlZCkgewogICAgICB0aGlzLmlzRGlzYWJsZWQgPSB0aGlzLmRpc2FibGVkOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZG9DaGFuZ2U6IGZ1bmN0aW9uIGRvQ2hhbmdlKHZhbCkgewogICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB2YWwpOwogICAgfSwKICAgIGJ1aWxkQ2FzQ2FkZXJPcHRpb25zOiBmdW5jdGlvbiBidWlsZENhc0NhZGVyT3B0aW9ucyhmaXJzdE9wdGlvbnMpIHsKICAgICAgdmFyIHNlY29uZEtleUFycmF5X2Rpc2FibGVkID0gW107CgogICAgICB2YXIgX2l0ZXJhdG9yID0gKDAsIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyMi5kZWZhdWx0KSh0aGlzLmRpc2FibGVkQ29kZUFycmF5X3NlY29uZCksCiAgICAgICAgICBfc3RlcDsKCiAgICAgIHRyeSB7CiAgICAgICAgZm9yIChfaXRlcmF0b3IucygpOyAhKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZTspIHsKICAgICAgICAgIHZhciBpdGVtID0gX3N0ZXAudmFsdWU7CgogICAgICAgICAgaWYgKGl0ZW0uc3BsaXQoJy0nKS5sZW5ndGggPCAyKSB7CiAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgfQoKICAgICAgICAgIHZhciBmaXJzdERhdGFEaXNhYmxlZEtleSA9IHRoaXMuY29kZXR5cGUgKyAnLicgKyBpdGVtLnNwbGl0KCctJylbMF0gKyAnLicgKyBpdGVtLnNwbGl0KCctJylbMV07CgogICAgICAgICAgaWYgKCF0aGlzLl8uaW5jbHVkZXMoc2Vjb25kS2V5QXJyYXlfZGlzYWJsZWQsIGZpcnN0RGF0YURpc2FibGVkS2V5KSkgewogICAgICAgICAgICBzZWNvbmRLZXlBcnJheV9kaXNhYmxlZC5wdXNoKGZpcnN0RGF0YURpc2FibGVkS2V5KTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yLmYoKTsKICAgICAgfQoKICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmaXJzdE9wdGlvbnMubGVuZ3RoOyBpKyspIHsKICAgICAgICB2YXIgZmlyc3REYXRhID0gZmlyc3RPcHRpb25zW2ldOwogICAgICAgIHZhciBmaXJzdExldmVsID0gewogICAgICAgICAgJ3ZhbHVlJzogZmlyc3REYXRhLmNvZGUsCiAgICAgICAgICAnbGFiZWwnOiBmaXJzdERhdGEuY29kZSArICc6JyArIGZpcnN0RGF0YS5jb2RlbmFtZSwKICAgICAgICAgICdjaGlsZHJlbic6IFtdLAogICAgICAgICAgJ2Rpc2FibGVkJzogdGhpcy5fLmluY2x1ZGVzKHRoaXMuZGlzYWJsZWRDb2RlQXJyYXlfZmlyc3QsIGZpcnN0RGF0YS5jb2RlKQogICAgICAgIH07CiAgICAgICAgdmFyIHNlY29uZEtleSA9IHRoaXMuY29kZXR5cGUgKyAnLicgKyBmaXJzdERhdGEuY29kZTsKICAgICAgICB2YXIgc2Vjb25kT3B0aW9ucyA9IHRoaXMubGRjb2Rlc1tzZWNvbmRLZXldOwoKICAgICAgICBmb3IgKHZhciBqID0gMDsgaiA8IHNlY29uZE9wdGlvbnMubGVuZ3RoOyBqKyspIHsKICAgICAgICAgIHZhciBzZWNvbmREYXRhID0gc2Vjb25kT3B0aW9uc1tqXTsKICAgICAgICAgIHZhciBzZWNvbmRMZXZlbCA9IHsKICAgICAgICAgICAgJ3ZhbHVlJzogc2Vjb25kRGF0YS5jb2RlLAogICAgICAgICAgICAnbGFiZWwnOiBzZWNvbmREYXRhLmNvZGUgKyAiOiIgKyBzZWNvbmREYXRhLmNvZGVuYW1lLAogICAgICAgICAgICAnZGlzYWJsZWQnOiB0aGlzLl8uaW5jbHVkZXMoc2Vjb25kS2V5QXJyYXlfZGlzYWJsZWQsIHNlY29uZEtleSArICcuJyArIHNlY29uZERhdGEuY29kZSkKICAgICAgICAgIH07CiAgICAgICAgICBmaXJzdExldmVsLmNoaWxkcmVuLnB1c2goc2Vjb25kTGV2ZWwpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5vcHRpb25zLnB1c2goZmlyc3RMZXZlbCk7CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBvcHRpb25zOiBbXSwKICAgICAgc2VsZWN0VmFsdWU6IFtdLAogICAgICBzZXR0aW5nczoge30sCiAgICAgIGlzRGlzYWJsZWQ6IGZhbHNlCiAgICB9OwogIH0sCiAgd2F0Y2g6IHsKICAgIHZhbHVlOiBmdW5jdGlvbiB2YWx1ZSh2YWwsIG9sZFZhbCkgewogICAgICB0aGlzLnNlbGVjdFZhbHVlID0gdmFsOwogICAgfSwKICAgIHNlbGVjdFZhbHVlOiBmdW5jdGlvbiBzZWxlY3RWYWx1ZSh2YWwsIG9sZFZhbCkgewogICAgICBpZiAodmFsICE9IG9sZFZhbCkgewogICAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy5zZWxlY3RWYWx1ZSk7CiAgICAgIH0KICAgIH0sCiAgICBkaXNhYmxlZDogZnVuY3Rpb24gZGlzYWJsZWQodmFsLCBvbGRWYWwpIHsKICAgICAgaWYgKHZhbCAhPSBvbGRWYWwpIHsKICAgICAgICB0aGlzLmlzRGlzYWJsZWQgPSB2YWw7CiAgICAgIH0KICAgIH0sCiAgICBmaWx0ZXI6IGZ1bmN0aW9uIGZpbHRlcih2YWwsIG9sZFZhbCkgewogICAgICBpZiAodmFsICE9IG9sZFZhbCkgewogICAgICAgIHRoaXMuc2VsZWN0VmFsdWUgPSAnJzsKICAgICAgICB0aGlzLm9wdGlvbnMgPSB0aGlzLmxkY29kZXNbdGhpcy5jb2RldHlwZV07CiAgICAgICAgdmFyIGZpbHRlck9wdGlvbnMgPSB0aGlzLmZpbHRlck9wdGlvbnModmFsLCB0aGlzLm9wdGlvbnMpOwogICAgICAgIHRoaXMuYnVpbGRDYXNDYWRlck9wdGlvbnMoZmlsdGVyT3B0aW9ucyk7CiAgICAgIH0KICAgIH0KICB9LAogIGNvbXB1dGVkOiAoMCwgX29iamVjdFNwcmVhZDIuZGVmYXVsdCkoe30sICgwLCBfdnVleC5tYXBHZXR0ZXJzKShbJ2xkY29kZXMnXSkpCn07CmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0Mjs="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-cascader\r\n    v-model=\"selectValue\"\r\n    :disabled=\"isDisabled\"\r\n    :options=\"options\"\r\n    :placeholder=\"$t('i18nView.selectPlaceholder')\"\r\n    :props=\"settings\"\r\n    :show-all-levels=\"showAllLevels\"\r\n    class=\"filter-item\"\r\n    clearable\r\n    @change=\"doChange\"></el-cascader>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {mapGetters} from 'vuex'\r\n\r\nexport default {\r\n  name: 'Cascader',\r\n  props: {\r\n    showAllLevels: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    codetype: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    is_multiple: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    filter: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      required: false\r\n    },\r\n    value: {\r\n      type: Array\r\n    },\r\n    disabledCodeArray_first: {\r\n      type: Array,\r\n      required: false,\r\n      default: () => {\r\n        return []\r\n      }\r\n    },\r\n    disabledCodeArray_second: {\r\n      type: Array,\r\n      required: false,\r\n      default: () => {\r\n        return []\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    let firstOptions = this.ldcodes[this.codetype]\r\n    this.buildCasCaderOptions(firstOptions)\r\n    if (this.is_multiple) {\r\n      this.settings = {'multiple': true}\r\n    }\r\n    this.selectValue = this.value\r\n    if (this.disabled) {\r\n      this.isDisabled = this.disabled\r\n    }\r\n  },\r\n  methods: {\r\n    doChange(val) {\r\n      this.$emit('change', val)\r\n    },\r\n    buildCasCaderOptions(firstOptions) {\r\n      let secondKeyArray_disabled = []\r\n      for (const item of this.disabledCodeArray_second) {\r\n        if (item.split('-').length < 2) {\r\n          continue\r\n        }\r\n        let firstDataDisabledKey = this.codetype + '.' + item.split('-')[0] + '.' + item.split('-')[1]\r\n        if (!this._.includes(secondKeyArray_disabled, firstDataDisabledKey)) {\r\n          secondKeyArray_disabled.push(firstDataDisabledKey)\r\n        }\r\n      }\r\n      for (let i = 0; i < firstOptions.length; i++) {\r\n        let firstData = firstOptions[i]\r\n        let firstLevel = {\r\n          'value': firstData.code,\r\n          'label': firstData.code + ':' + firstData.codename,\r\n          'children': [],\r\n          'disabled': this._.includes(this.disabledCodeArray_first, firstData.code)\r\n        }\r\n        let secondKey = this.codetype + '.' + firstData.code\r\n        let secondOptions = this.ldcodes[secondKey]\r\n        for (let j = 0; j < secondOptions.length; j++) {\r\n          let secondData = secondOptions[j]\r\n          let secondLevel = {\r\n            'value': secondData.code,\r\n            'label': secondData.code + \":\" + secondData.codename,\r\n            'disabled': this._.includes(secondKeyArray_disabled, secondKey + '.' + secondData.code)\r\n          }\r\n          firstLevel.children.push(secondLevel)\r\n        }\r\n        this.options.push(firstLevel)\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      options: [],\r\n      selectValue: [],\r\n      settings: {},\r\n      isDisabled: false\r\n    }\r\n  },\r\n  watch: {\r\n    value(val, oldVal) {\r\n      this.selectValue = val\r\n    },\r\n    selectValue(val, oldVal) {\r\n      if (val != oldVal) {\r\n        this.$emit('input', this.selectValue)\r\n      }\r\n    },\r\n    disabled(val, oldVal) {\r\n      if (val != oldVal) {\r\n        this.isDisabled = val\r\n      }\r\n    },\r\n    filter(val, oldVal) {\r\n      if (val != oldVal) {\r\n        this.selectValue = ''\r\n        this.options = this.ldcodes[this.codetype]\r\n        let filterOptions = this.filterOptions(val, this.options)\r\n        this.buildCasCaderOptions(filterOptions)\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'ldcodes'\r\n    ])\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"],"sourceRoot":"src/customComponents/CodeCascader"}]}