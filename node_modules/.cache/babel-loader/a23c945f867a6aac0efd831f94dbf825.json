{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js!D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\components\\render\\slots\\el-checkbox-group.js","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\components\\render\\slots\\el-checkbox-group.js","mtime":1609847106323},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1706753193796},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\eslint-loader\\index.js","mtime":1706753187898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoLmpzIik7CgpyZXF1aXJlKCJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyIpOwoKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgewogIHZhbHVlOiB0cnVlCn0pOwpleHBvcnRzLmRlZmF1bHQgPSB2b2lkIDA7CnZhciBfZGVmYXVsdCA9IHsKICBvcHRpb25zOiBmdW5jdGlvbiBvcHRpb25zKGgsIGNvbmYsIGtleSkgewogICAgdmFyIGxpc3QgPSBbXTsKICAgIGNvbmYuc2xvdC5vcHRpb25zLmZvckVhY2goZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgaWYgKGNvbmYuY29uZmlnLm9wdGlvblR5cGUgPT09ICdidXR0b24nKSB7CiAgICAgICAgbGlzdC5wdXNoKGgoImVsLWNoZWNrYm94LWJ1dHRvbiIsIHsKICAgICAgICAgICJhdHRycyI6IHsKICAgICAgICAgICAgImxhYmVsIjogaXRlbS52YWx1ZQogICAgICAgICAgfQogICAgICAgIH0sIFtpdGVtLmxhYmVsXSkpOwogICAgICB9IGVsc2UgewogICAgICAgIGxpc3QucHVzaChoKCJlbC1jaGVja2JveCIsIHsKICAgICAgICAgICJhdHRycyI6IHsKICAgICAgICAgICAgImxhYmVsIjogaXRlbS52YWx1ZSwKICAgICAgICAgICAgImJvcmRlciI6IGNvbmYuYm9yZGVyCiAgICAgICAgICB9CiAgICAgICAgfSwgW2l0ZW0ubGFiZWxdKSk7CiAgICAgIH0KICAgIH0pOwogICAgcmV0dXJuIGxpc3Q7CiAgfQp9OwpleHBvcnRzLmRlZmF1bHQgPSBfZGVmYXVsdDs="},{"version":3,"sources":["D:/86181/Desktop/product/pcs-product-view/src/components/render/slots/el-checkbox-group.js"],"names":["options","h","conf","key","list","slot","forEach","item","config","optionType","push","value","label","border"],"mappings":";;;;;;;;;;eAAe;AACbA,EAAAA,OADa,mBACLC,CADK,EACFC,IADE,EACIC,GADJ,EACS;AACpB,QAAMC,IAAI,GAAG,EAAb;AACAF,IAAAA,IAAI,CAACG,IAAL,CAAUL,OAAV,CAAkBM,OAAlB,CAA0B,UAAAC,IAAI,EAAI;AAChC,UAAIL,IAAI,CAACM,MAAL,CAAYC,UAAZ,KAA2B,QAA/B,EAAyC;AACvCL,QAAAA,IAAI,CAACM,IAAL;AAAA;AAAA,qBAAqCH,IAAI,CAACI;AAA1C;AAAA,YAAkDJ,IAAI,CAACK,KAAvD;AACD,OAFD,MAEO;AACLR,QAAAA,IAAI,CAACM,IAAL;AAAA;AAAA,qBAA8BH,IAAI,CAACI,KAAnC;AAAA,sBAAkDT,IAAI,CAACW;AAAvD;AAAA,YAAgEN,IAAI,CAACK,KAArE;AACD;AACF,KAND;AAOA,WAAOR,IAAP;AACD;AAXY,C","sourcesContent":["export default {\r\n  options(h, conf, key) {\r\n    const list = []\r\n    conf.slot.options.forEach(item => {\r\n      if (conf.config.optionType === 'button') {\r\n        list.push(<el-checkbox-button label={item.value}>{item.label}</el-checkbox-button>)\r\n      } else {\r\n        list.push(<el-checkbox label={item.value} border={conf.border}>{item.label}</el-checkbox>)\r\n      }\r\n    })\r\n    return list\r\n  }\r\n}\r\n"]}]}