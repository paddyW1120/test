{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js!D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\product-testing\\underwriting-test\\main\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\product-testing\\underwriting-test\\main\\index.vue","mtime":1610950057781},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1706753193796},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJEOi84NjE4MS9EZXNrdG9wL3Byb2R1Y3QvcGNzLXByb2R1Y3Qtdmlldy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQiKTsKCnJlcXVpcmUoImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaC5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiKTsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwOwoKdmFyIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiRDovODYxODEvRGVza3RvcC9wcm9kdWN0L3Bjcy1wcm9kdWN0LXZpZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciIpKTsKCnZhciBfb2JqZWN0U3ByZWFkMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZSgiRDovODYxODEvRGVza3RvcC9wcm9kdWN0L3Bjcy1wcm9kdWN0LXZpZXcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvb2JqZWN0U3ByZWFkMiIpKTsKCnZhciBfcHJvZHVjdFVuZGVyd3JpdGluZ1Rlc3QgPSByZXF1aXJlKCJAL2FwaS9iYXNpY2luZm8vcHJvZHVjdFVuZGVyd3JpdGluZ1Rlc3QiKTsKCnZhciBfdnVleCA9IHJlcXVpcmUoInZ1ZXgiKTsKCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCnZhciBfdGhpczsKCnZhciBfZGVmYXVsdCA9IHsKICBuYW1lOiAndW5kZXJ3cml0aW5nVGVzdGluZ05ldycsCiAgZmlsdGVyczogewogICAgZmlsdGVyX3BkQXVkaXRUeXBlOiBmdW5jdGlvbiBmaWx0ZXJfcGRBdWRpdFR5cGUoY29kZSkgewogICAgICByZXR1cm4gX3RoaXMuZ2V0Q29kZU5hbWUoJ3BkQXVkaXRUeXBlJywgY29kZSwgdHJ1ZSk7CiAgICB9LAogICAgZmlsdGVyX3BkQ2xzMjogZnVuY3Rpb24gZmlsdGVyX3BkQ2xzMihjb2RlKSB7CiAgICAgIHJldHVybiAn5Lqn5ZOB5aWX6aSQJyA9PT0gY29kZSA/IGNvZGUgOiBfdGhpcy5nZXRDb2RlTmFtZSgnUHJvZHVjdENhdGVnb3J5JywgY29kZSwgdHJ1ZSk7CiAgICB9LAogICAgZmlsdGVyX2NvbW1vZGl0eVR5cGU6IGZ1bmN0aW9uIGZpbHRlcl9jb21tb2RpdHlUeXBlKGNvZGUpIHsKICAgICAgcmV0dXJuIF90aGlzLmNvbW1vZGl0eVR5cGVzW2NvZGVdOwogICAgfSwKICAgIGZpbHRlcl9TdGF0dXM6IGZ1bmN0aW9uIGZpbHRlcl9TdGF0dXMoY29kZSkgewogICAgICByZXR1cm4gX3RoaXMudGVzdFN0YXR1c1tjb2RlXTsKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICBfdGhpcyA9IHRoaXM7CiAgICByZXR1cm4gewogICAgICBjb21tb2RpdHlUeXBlczogewogICAgICAgICdSJzogJ+S6p+WTgScsCiAgICAgICAgJ1AnOiAn5Lqn5ZOB5aWX6aSQJwogICAgICB9LAogICAgICB0ZXN0U3RhdHVzOiB7CiAgICAgICAgJzAnOiAn5pyq5rWL6K+VJywKICAgICAgICAnMSc6ICfmtYvor5XkuK0nCiAgICAgIH0sCiAgICAgIGZpbHRlckNvbW1vZGl0eUJyZWFrZG93bjogW10sCiAgICAgIGZpbHRlckNvbW1vZGl0eUJyZWFrZG93bjI6IFtdLAogICAgICBjb21tb2RpdHlCcmVha2Rvd246IFtdLAogICAgICBwcm9wczoge30sCiAgICAgIGNvbmZpZ3MxOiBbXSwKICAgICAgY29uZmlnczI6IFtdLAogICAgICBwYXJhbXM6IHsKICAgICAgICBwZEVkaXRpb246ICcnLAogICAgICAgIHRpbWVzOiAnJywKICAgICAgICBwZENvZGU6ICcnLAogICAgICAgIHBkRGV0YWlsVHlwZTogJycsCiAgICAgICAgc3RhcnREYXRlOiAnJywKICAgICAgICBlbmREYXRlOiAnJwogICAgICB9LAogICAgICBwYXJhbXMxOiB7CiAgICAgICAgcGRFZGl0aW9uOiAnJywKICAgICAgICB0aW1lczogJycsCiAgICAgICAgcGRDb2RlOiAnJywKICAgICAgICBwZERldGFpbFR5cGU6ICcnLAogICAgICAgIHN0YXJ0RGF0ZTogJycsCiAgICAgICAgZW5kRGF0ZTogJycKICAgICAgfSwKICAgICAgc2VsZWN0ZUNvbmZpZ3MyOiB7fSwKICAgICAgcGRpbmZvUGVuZGluZ1Rhc2s6IFtdLAogICAgICAvLyDmn6Xor6IgIOS6p+WTgSDkuIvmi4npgIkKICAgICAgcGRFZGl0aW9uSW5mb1BlbmRpbmdUYXNrOiBbXSwKICAgICAgLy/niYjliKsKICAgICAgcGRFZGl0aW9uRmlsdGVyOiBbXSwKICAgICAgLy/niYjliKsKICAgICAgcGRpbmZvVGVzdFRhc2s6IFtdLAogICAgICAvLyDmn6Xor6IgIOS6p+WTgSDkuIvmi4npgIkKICAgICAgcGRFZGl0aW9uSW5mb1Rlc3RUYXNrOiBbXSwKICAgICAgLy/niYjliKsKICAgICAgcGRFZGl0aW9uRmlsdGVyVGVzdFRhc2s6IFtdLAogICAgICAvL+eJiOWIqwogICAgICAvL+ajgOmqjOinhOWImQogICAgICBydWxlczoge30KICAgIH07CiAgfSwKICBjb21wdXRlZDogKDAsIF9vYmplY3RTcHJlYWQyLmRlZmF1bHQpKHt9LCAoMCwgX3Z1ZXgubWFwR2V0dGVycykoWydsZGNvZGVzJ10pKSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgdmFyIGNvbW1vZGl0eUJyZWFrZG93blRlbXAgPSB0aGlzLmxkY29kZXNbJ1Byb2R1Y3RDYXRlZ29yeSddOwogICAgY29tbW9kaXR5QnJlYWtkb3duVGVtcC5mb3JFYWNoKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIF90aGlzMi5jb21tb2RpdHlCcmVha2Rvd24ucHVzaCh7CiAgICAgICAgJ3RleHQnOiBkYXRhLmNvZGVuYW1lLAogICAgICAgICd2YWx1ZSc6IGRhdGEuY29kZQogICAgICB9KTsKICAgIH0pOyAvLyB0aGlzLmluaXRTZWxlY3RQZW5kaW5nVGFzaygpCiAgICAvLyB0aGlzLmluaXRTZWxlY1Rlc3RUYXNrKCkKICB9LAogIG1ldGhvZHM6IHsKICAgIGZpbHRlclRhYmxlQ2hhbmdlOiBmdW5jdGlvbiBmaWx0ZXJUYWJsZUNoYW5nZShmaWx0ZXJzKSB7CiAgICAgIGlmIChmaWx0ZXJzWydjb21tb2RpdHlUeXBlJ10pIHsKICAgICAgICB0aGlzLmZpbHRlckNvbW1vZGl0eUJyZWFrZG93biA9IFtdOwoKICAgICAgICBpZiAoZmlsdGVyc1snY29tbW9kaXR5VHlwZSddLmxlbmd0aCA9PT0gMCkgewogICAgICAgICAgdGhpcy5maWx0ZXJDb21tb2RpdHlCcmVha2Rvd24gPSBbXTsKICAgICAgICB9IGVsc2UgaWYgKGZpbHRlcnNbJ2NvbW1vZGl0eVR5cGUnXVswXSA9PT0gJ1AnKSB7CiAgICAgICAgICB0aGlzLmZpbHRlckNvbW1vZGl0eUJyZWFrZG93bi5wdXNoKHsKICAgICAgICAgICAgJ3RleHQnOiAn5Lqn5ZOB5aWX6aSQJywKICAgICAgICAgICAgJ3ZhbHVlJzogJ+S6p+WTgeWll+mkkCcKICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSBpZiAoZmlsdGVyc1snY29tbW9kaXR5VHlwZSddWzBdID09PSAnUicpIHsKICAgICAgICAgIHRoaXMuZmlsdGVyQ29tbW9kaXR5QnJlYWtkb3duID0gdGhpcy5jb21tb2RpdHlCcmVha2Rvd247CiAgICAgICAgfQogICAgICB9CgogICAgICBpZiAoZmlsdGVyc1snY29tbW9kaXR5VHlwZTInXSkgewogICAgICAgIHRoaXMuZmlsdGVyQ29tbW9kaXR5QnJlYWtkb3duMiA9IFtdOwoKICAgICAgICBpZiAoZmlsdGVyc1snY29tbW9kaXR5VHlwZTInXS5sZW5ndGggPT09IDApIHsKICAgICAgICAgIHRoaXMuZmlsdGVyQ29tbW9kaXR5QnJlYWtkb3duMiA9IFtdOwogICAgICAgIH0gZWxzZSBpZiAoZmlsdGVyc1snY29tbW9kaXR5VHlwZTInXVswXSA9PT0gJ1AnKSB7CiAgICAgICAgICB0aGlzLmZpbHRlckNvbW1vZGl0eUJyZWFrZG93bjIucHVzaCh7CiAgICAgICAgICAgICd0ZXh0JzogJ+S6p+WTgeWll+mkkCcsCiAgICAgICAgICAgICd2YWx1ZSc6ICfkuqflk4HlpZfppJAnCiAgICAgICAgICB9KTsKICAgICAgICB9IGVsc2UgaWYgKGZpbHRlcnNbJ2NvbW1vZGl0eVR5cGUyJ11bMF0gPT09ICdSJykgewogICAgICAgICAgdGhpcy5maWx0ZXJDb21tb2RpdHlCcmVha2Rvd24yID0gdGhpcy5jb21tb2RpdHlCcmVha2Rvd247CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgZmlsdGVyQ29tbW9kaXR5VHlwZUhhbmRsZXI6IGZ1bmN0aW9uIGZpbHRlckNvbW1vZGl0eVR5cGVIYW5kbGVyKHZhbHVlLCByb3csIGNvbHVtbikgewogICAgICB2YXIgcHJvcGVydHkgPSBjb2x1bW5bJ3Byb3BlcnR5J107CiAgICAgIHJldHVybiByb3dbcHJvcGVydHldID09PSB2YWx1ZTsKICAgIH0sCiAgICBmaWx0ZXJDb21tb2RpdHlCcmVha2Rvd25IYW5kbGVyOiBmdW5jdGlvbiBmaWx0ZXJDb21tb2RpdHlCcmVha2Rvd25IYW5kbGVyKHZhbHVlLCByb3csIGNvbHVtbikgewogICAgICB2YXIgcHJvcGVydHkgPSBjb2x1bW5bJ3Byb3BlcnR5J107CiAgICAgIHJldHVybiByb3dbcHJvcGVydHldID09PSB2YWx1ZTsKICAgIH0sCiAgICBhc3NpZ25UYXNrOiBmdW5jdGlvbiBhc3NpZ25UYXNrKHJvdykgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHRoaXMuY29uZmlybVdhcm5pbmcoJ+aYr+WQpuimgeiupOmihuW9k+WJjeS7u+WKoT8nKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgcGFyYW1zID0gewogICAgICAgICAgJ3Rhc2tJZCc6IHJvdy50YXNrSWQKICAgICAgICB9OwogICAgICAgICgwLCBfcHJvZHVjdFVuZGVyd3JpdGluZ1Rlc3QuYXNzaWduVGVzdFRhc2spKF90aGlzMy5idWlsZFJlcXVlc3REYXRhKHBhcmFtcykpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgX3RoaXMzLm5vdGlmeVN1Y2Nlc3MoJ+iupOmihuaIkOWKnycpOwoKICAgICAgICAgIF90aGlzMy4kcmVmcy5wYWdlLnJlbG9hZCgpOwoKICAgICAgICAgIF90aGlzMy4kcmVmcy5wYWdlMS5yZWxvYWQoKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgc2VhcmNocGVuZGluZ1Rhc2s6IGZ1bmN0aW9uIHNlYXJjaHBlbmRpbmdUYXNrKCkgewogICAgICBpZiAodGhpcy5wYXJhbXMudGltZXMpIHsKICAgICAgICB0aGlzLnBhcmFtcy5zdGFydERhdGUgPSB0aGlzLnBhcmFtcy50aW1lc1swXTsKICAgICAgICB0aGlzLnBhcmFtcy5lbmREYXRlID0gdGhpcy5wYXJhbXMudGltZXNbMV07CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5wYXJhbXMuc3RhcnREYXRlID0gJyc7CiAgICAgICAgdGhpcy5wYXJhbXMuZW5kRGF0ZSA9ICcnOwogICAgICB9CgogICAgICB0aGlzLiRyZWZzLnBhZ2UucmVsb2FkKCk7CiAgICB9LAogICAgc2VhcmNoVGVzdFRhc2s6IGZ1bmN0aW9uIHNlYXJjaFRlc3RUYXNrKCkgewogICAgICBpZiAodGhpcy5wYXJhbXMxLnRpbWVzKSB7CiAgICAgICAgdGhpcy5wYXJhbXMxLmFzc2lnblN0YXJ0RGF0ZSA9IHRoaXMucGFyYW1zMS50aW1lc1swXTsKICAgICAgICB0aGlzLnBhcmFtczEuYXNzaWduRW5kRGF0ZSA9IHRoaXMucGFyYW1zMS50aW1lc1sxXTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnBhcmFtczEuYXNzaWduU3RhcnREYXRlID0gJyc7CiAgICAgICAgdGhpcy5wYXJhbXMxLmFzc2lnbkVuZERhdGUgPSAnJzsKICAgICAgfQoKICAgICAgdGhpcy4kcmVmcy5wYWdlMS5yZWxvYWQoKTsKICAgIH0sCiAgICBoYW5kbGVEZXRhaWw6IGZ1bmN0aW9uIGhhbmRsZURldGFpbChyb3cpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICB0aGlzLmNhY2hlSnNvbkRhdGEoInBkVGVzdEluZm8iLCByb3cpOwogICAgICAoMCwgX3Byb2R1Y3RVbmRlcndyaXRpbmdUZXN0LmFwcGx5VGVzdEJhdGNoKSh0aGlzLmJ1aWxkUmVxdWVzdERhdGEoewogICAgICAgICJ0ZXN0TW9kdWxlIjogInVuZGVyd3JpdGluZ3Rlc3QiLAogICAgICAgICJwcm9kdWN0VGVzdFZvIjogcm93CiAgICAgIH0pKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICB2YXIgcGRUZXN0SW5mb0lkID0gcmVzLmRhdGE7CgogICAgICAgIF90aGlzNC4kcm91dGVyLnB1c2goewogICAgICAgICAgcGF0aDogIi9wcm9kdWN0LXRlc3RpbmcvdW5kZXJ3cml0aW5nLXRlc3QvdW5kZXJ3cml0aW5nLXRlc3QtZGV0YWlsIiwKICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICBwZFRlc3RJZDogcGRUZXN0SW5mb0lkCiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKCiAgICAvKuWkhOS6jua1i+ivleiKgueCueS4lOacquWIhumFjeeahOS7u+WKoSDpu5jorqTkuIvmi4npgIkqLwogICAgaW5pdFNlbGVjdFBlbmRpbmdUYXNrOiBmdW5jdGlvbiBpbml0U2VsZWN0UGVuZGluZ1Rhc2soKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgKDAsIF9wcm9kdWN0VW5kZXJ3cml0aW5nVGVzdC5pbml0U2VsZWN0UGVuZGluZ1Rhc2spKHRoaXMuYnVpbGRSZXF1ZXN0RGF0YSh7fSkpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIF90aGlzNS5wZGluZm9QZW5kaW5nVGFzayA9IFtdOwogICAgICAgIF90aGlzNS5wZEVkaXRpb25JbmZvUGVuZGluZ1Rhc2sgPSBbXTsKCiAgICAgICAgdmFyIF9pdGVyYXRvciA9ICgwLCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcjIuZGVmYXVsdCkocmVzLmRhdGEpLAogICAgICAgICAgICBfc3RlcDsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciBsaXMgPSBfc3RlcC52YWx1ZTsKICAgICAgICAgICAgdmFyIGluZm8gPSB7CiAgICAgICAgICAgICAgY29kZTogJycsCiAgICAgICAgICAgICAgbmFtZTogJycKICAgICAgICAgICAgfTsKICAgICAgICAgICAgaW5mby5jb2RlID0gbGlzLnBkQ29kZTsKICAgICAgICAgICAgaW5mby5uYW1lID0gbGlzLnBkTmFtZTsKCiAgICAgICAgICAgIF90aGlzNS5wZGluZm9QZW5kaW5nVGFzay5wdXNoKGluZm8pOwoKICAgICAgICAgICAgdmFyIGVkaXRpb24gPSB7CiAgICAgICAgICAgICAgY29kZTogJycsCiAgICAgICAgICAgICAgZWRpdGlvbjogJycKICAgICAgICAgICAgfTsKICAgICAgICAgICAgZWRpdGlvbi5jb2RlID0gbGlzLnBkQ29kZTsKICAgICAgICAgICAgZWRpdGlvbi5lZGl0aW9uID0gbGlzLnBkRWRpdGlvbjsKCiAgICAgICAgICAgIF90aGlzNS5wZEVkaXRpb25JbmZvUGVuZGluZ1Rhc2sucHVzaChlZGl0aW9uKTsKICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvci5lKGVycik7CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIF9pdGVyYXRvci5mKCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCgogICAgLyrpgInmi6nkuqflk4HvvIzmjqfliLbniYjliKsqLwogICAgdHlwZVBkU2VsZWN0OiBmdW5jdGlvbiB0eXBlUGRTZWxlY3QodmFsKSB7CiAgICAgIHRoaXMucGRFZGl0aW9uRmlsdGVyID0gW107CgogICAgICBpZiAodmFsKSB7CiAgICAgICAgdmFyIF9pdGVyYXRvcjIgPSAoMCwgX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIyLmRlZmF1bHQpKHRoaXMucGRFZGl0aW9uSW5mb1BlbmRpbmdUYXNrKSwKICAgICAgICAgICAgX3N0ZXAyOwoKICAgICAgICB0cnkgewogICAgICAgICAgZm9yIChfaXRlcmF0b3IyLnMoKTsgIShfc3RlcDIgPSBfaXRlcmF0b3IyLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgdmFyIHZhbEtleSA9IF9zdGVwMi52YWx1ZTsKCiAgICAgICAgICAgIGlmICh2YWwgPT0gdmFsS2V5LmNvZGUpIHsKICAgICAgICAgICAgICB2YXIgZWRpdGlvbiA9IHsKICAgICAgICAgICAgICAgIHBkQ29kZTogJycsCiAgICAgICAgICAgICAgICBwZEVkaXRpb246ICcnCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBlZGl0aW9uLnBkQ29kZSA9IHZhbEtleS5jb2RlOwogICAgICAgICAgICAgIGVkaXRpb24ucGRFZGl0aW9uID0gdmFsS2V5LmVkaXRpb247CiAgICAgICAgICAgICAgdGhpcy5wZEVkaXRpb25GaWx0ZXIucHVzaChlZGl0aW9uKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgICAgX2l0ZXJhdG9yMi5lKGVycik7CiAgICAgICAgfSBmaW5hbGx5IHsKICAgICAgICAgIF9pdGVyYXRvcjIuZigpOwogICAgICAgIH0KCiAgICAgICAgdGhpcy5wYXJhbXMucGRFZGl0aW9uID0gdGhpcy5wZEVkaXRpb25GaWx0ZXJbMF0ucGRFZGl0aW9uOwogICAgICB9CiAgICB9LAoKICAgIC8q5pS55Y+Y57uG57G7IOaOp+WItuS6p+WTgSovCiAgICBwZERldGFpbFR5cGU6IGZ1bmN0aW9uIHBkRGV0YWlsVHlwZSh2YWwpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICB0aGlzLnBhcmFtcy5wZENvZGUgPSAnJzsKICAgICAgdGhpcy5wYXJhbXMucGRFZGl0aW9uID0gJyc7CiAgICAgIHRoaXMucGRpbmZvUGVuZGluZ1Rhc2sgPSBbXTsKICAgICAgdGhpcy5wZEVkaXRpb25JbmZvUGVuZGluZ1Rhc2sgPSBbXTsKICAgICAgKDAsIF9wcm9kdWN0VW5kZXJ3cml0aW5nVGVzdC5pbml0U2VsZWN0UGVuZGluZ1Rhc2spKHRoaXMuYnVpbGRSZXF1ZXN0RGF0YSh7CiAgICAgICAgJ3BkRGV0YWlsVHlwZSc6IHZhbAogICAgICB9KSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgdmFyIF9pdGVyYXRvcjMgPSAoMCwgX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIyLmRlZmF1bHQpKHJlcy5kYXRhKSwKICAgICAgICAgICAgX3N0ZXAzOwoKICAgICAgICB0cnkgewogICAgICAgICAgZm9yIChfaXRlcmF0b3IzLnMoKTsgIShfc3RlcDMgPSBfaXRlcmF0b3IzLm4oKSkuZG9uZTspIHsKICAgICAgICAgICAgdmFyIGxpcyA9IF9zdGVwMy52YWx1ZTsKICAgICAgICAgICAgdmFyIGluZm8gPSB7CiAgICAgICAgICAgICAgY29kZTogJycsCiAgICAgICAgICAgICAgbmFtZTogJycKICAgICAgICAgICAgfTsKICAgICAgICAgICAgaW5mby5jb2RlID0gbGlzLnBkQ29kZTsKICAgICAgICAgICAgaW5mby5uYW1lID0gbGlzLnBkTmFtZTsKCiAgICAgICAgICAgIF90aGlzNi5wZGluZm9QZW5kaW5nVGFzay5wdXNoKGluZm8pOwoKICAgICAgICAgICAgdmFyIGVkaXRpb24gPSB7CiAgICAgICAgICAgICAgY29kZTogJycsCiAgICAgICAgICAgICAgZWRpdGlvbjogJycKICAgICAgICAgICAgfTsKICAgICAgICAgICAgZWRpdGlvbi5jb2RlID0gbGlzLnBkQ29kZTsKICAgICAgICAgICAgZWRpdGlvbi5lZGl0aW9uID0gbGlzLnBkRWRpdGlvbjsKCiAgICAgICAgICAgIF90aGlzNi5wZEVkaXRpb25JbmZvUGVuZGluZ1Rhc2sucHVzaChlZGl0aW9uKTsKICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvcjMuZShlcnIpOwogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBfaXRlcmF0b3IzLmYoKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKCiAgICAvKuWkhOS6jua1i+ivleiKgueCueS4lOW3sumFjeeahOS7u+WKoSDpu5jorqTkuIvmi4npgIkqLwogICAgaW5pdFNlbGVjVGVzdFRhc2s6IGZ1bmN0aW9uIGluaXRTZWxlY1Rlc3RUYXNrKCkgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKCiAgICAgICgwLCBfcHJvZHVjdFVuZGVyd3JpdGluZ1Rlc3QuaW5pdFNlbGVjdFRlc3RUYXNrKSh0aGlzLmJ1aWxkUmVxdWVzdERhdGEoe30pKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBfdGhpczcucGRpbmZvVGVzdFRhc2sgPSBbXTsKICAgICAgICBfdGhpczcucGRFZGl0aW9uSW5mb1Rlc3RUYXNrID0gW107CgogICAgICAgIHZhciBfaXRlcmF0b3I0ID0gKDAsIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyMi5kZWZhdWx0KShyZXMuZGF0YSksCiAgICAgICAgICAgIF9zdGVwNDsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yNC5zKCk7ICEoX3N0ZXA0ID0gX2l0ZXJhdG9yNC5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciBsaXMgPSBfc3RlcDQudmFsdWU7CiAgICAgICAgICAgIHZhciBpbmZvID0gewogICAgICAgICAgICAgIGNvZGU6ICcnLAogICAgICAgICAgICAgIG5hbWU6ICcnCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIGluZm8uY29kZSA9IGxpcy5wZENvZGU7CiAgICAgICAgICAgIGluZm8ubmFtZSA9IGxpcy5wZE5hbWU7CgogICAgICAgICAgICBfdGhpczcucGRpbmZvVGVzdFRhc2sucHVzaChpbmZvKTsKCiAgICAgICAgICAgIHZhciBlZGl0aW9uID0gewogICAgICAgICAgICAgIGNvZGU6ICcnLAogICAgICAgICAgICAgIGVkaXRpb246ICcnCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIGVkaXRpb24uY29kZSA9IGxpcy5wZENvZGU7CiAgICAgICAgICAgIGVkaXRpb24uZWRpdGlvbiA9IGxpcy5wZEVkaXRpb247CgogICAgICAgICAgICBfdGhpczcucGRFZGl0aW9uSW5mb1Rlc3RUYXNrLnB1c2goZWRpdGlvbik7CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBfaXRlcmF0b3I0LmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yNC5mKCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCgogICAgLyrpgInmi6nkuqflk4HvvIzmjqfliLbniYjliKsqLwogICAgdHlwZVRlc3RUYXNrOiBmdW5jdGlvbiB0eXBlVGVzdFRhc2sodmFsKSB7CiAgICAgIHRoaXMucGRFZGl0aW9uRmlsdGVyVGVzdFRhc2sgPSBbXTsKCiAgICAgIGlmICh2YWwpIHsKICAgICAgICB2YXIgX2l0ZXJhdG9yNSA9ICgwLCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcjIuZGVmYXVsdCkodGhpcy5wZEVkaXRpb25JbmZvVGVzdFRhc2spLAogICAgICAgICAgICBfc3RlcDU7CgogICAgICAgIHRyeSB7CiAgICAgICAgICBmb3IgKF9pdGVyYXRvcjUucygpOyAhKF9zdGVwNSA9IF9pdGVyYXRvcjUubigpKS5kb25lOykgewogICAgICAgICAgICB2YXIgdmFsS2V5ID0gX3N0ZXA1LnZhbHVlOwoKICAgICAgICAgICAgaWYgKHZhbCA9PSB2YWxLZXkuY29kZSkgewogICAgICAgICAgICAgIHZhciBlZGl0aW9uID0gewogICAgICAgICAgICAgICAgcGRDb2RlOiAnJywKICAgICAgICAgICAgICAgIHBkRWRpdGlvbjogJycKICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIGVkaXRpb24ucGRDb2RlID0gdmFsS2V5LmNvZGU7CiAgICAgICAgICAgICAgZWRpdGlvbi5wZEVkaXRpb24gPSB2YWxLZXkuZWRpdGlvbjsKICAgICAgICAgICAgICB0aGlzLnBkRWRpdGlvbkZpbHRlclRlc3RUYXNrLnB1c2goZWRpdGlvbik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9IGNhdGNoIChlcnIpIHsKICAgICAgICAgIF9pdGVyYXRvcjUuZShlcnIpOwogICAgICAgIH0gZmluYWxseSB7CiAgICAgICAgICBfaXRlcmF0b3I1LmYoKTsKICAgICAgICB9CgogICAgICAgIHRoaXMucGFyYW1zMS5wZEVkaXRpb24gPSB0aGlzLnBkRWRpdGlvbkZpbHRlclRlc3RUYXNrWzBdLnBkRWRpdGlvbjsKICAgICAgfQogICAgfSwKCiAgICAvKuaUueWPmOe7huexuyDmjqfliLbkuqflk4EqLwogICAgcGREZXRhaWxUeXBlVGVzdFRhc2s6IGZ1bmN0aW9uIHBkRGV0YWlsVHlwZVRlc3RUYXNrKHZhbCkgewogICAgICB2YXIgX3RoaXM4ID0gdGhpczsKCiAgICAgIHRoaXMucGFyYW1zMS5wZENvZGUgPSAnJzsKICAgICAgdGhpcy5wYXJhbXMxLnBkRWRpdGlvbiA9ICcnOwogICAgICB0aGlzLnBkaW5mb1Rlc3RUYXNrID0gW107CiAgICAgIHRoaXMucGRFZGl0aW9uSW5mb1Rlc3RUYXNrID0gW107CiAgICAgICgwLCBfcHJvZHVjdFVuZGVyd3JpdGluZ1Rlc3QuaW5pdFNlbGVjdFRlc3RUYXNrKSh0aGlzLmJ1aWxkUmVxdWVzdERhdGEoewogICAgICAgICdwZERldGFpbFR5cGUnOiB2YWwKICAgICAgfSkpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgIHZhciBfaXRlcmF0b3I2ID0gKDAsIF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyMi5kZWZhdWx0KShyZXMuZGF0YSksCiAgICAgICAgICAgIF9zdGVwNjsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yNi5zKCk7ICEoX3N0ZXA2ID0gX2l0ZXJhdG9yNi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciBsaXMgPSBfc3RlcDYudmFsdWU7CiAgICAgICAgICAgIHZhciBpbmZvID0gewogICAgICAgICAgICAgIGNvZGU6ICcnLAogICAgICAgICAgICAgIG5hbWU6ICcnCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIGluZm8uY29kZSA9IGxpcy5wZENvZGU7CiAgICAgICAgICAgIGluZm8ubmFtZSA9IGxpcy5wZE5hbWU7CgogICAgICAgICAgICBfdGhpczgucGRpbmZvVGVzdFRhc2sucHVzaChpbmZvKTsKCiAgICAgICAgICAgIHZhciBlZGl0aW9uID0gewogICAgICAgICAgICAgIGNvZGU6ICcnLAogICAgICAgICAgICAgIGVkaXRpb246ICcnCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIGVkaXRpb24uY29kZSA9IGxpcy5wZENvZGU7CiAgICAgICAgICAgIGVkaXRpb24uZWRpdGlvbiA9IGxpcy5wZEVkaXRpb247CgogICAgICAgICAgICBfdGhpczgucGRFZGl0aW9uSW5mb1Rlc3RUYXNrLnB1c2goZWRpdGlvbik7CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBfaXRlcmF0b3I2LmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yNi5mKCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0KICB9Cn07CmV4cG9ydHMuZGVmYXVsdCA9IF9kZWZhdWx0Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <cus-wraper>\r\n    <cus-form-title :label=\"$t('productTestingUnderwriting.formTitle')\" :first=\"true\"></cus-form-title>\r\n    <el-form  :model=\"params\" label-width=\"120px\">\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item :label=\"$t('productTestingUnderwriting.DefineEndDate')\">\r\n            <el-date-picker\r\n              v-model=\"params.times\"\r\n              value-format=\"yyyy-MM-dd\"\r\n              type=\"daterange\"\r\n              :range-separator=\"$t('productSelect.to')\"\r\n              :start-placeholder=\"$t('productSelect.productApplyStartDate')\"\r\n              :end-placeholder=\"$t('productSelect.productApplyEndDate')\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n        </el-col>\r\n        <cus-btn-wrapper>\r\n            <el-button  size=\"small\" @click=\"searchpendingTask\" icon=\"el-icon-search\" type=\"primary\">\r\n              {{ $t('productTestingUnderwriting.search') }}\r\n            </el-button>\r\n        </cus-btn-wrapper>\r\n      </el-row>\r\n    </el-form>\r\n    <cus-table-title :label=\"$t('productTestingUnderwriting.pendingTask')\"/>\r\n    <el-table :data=\"configs1\" align=\"center\" border class=\"wraper-table\" element-loading-text=\"Loading\" fit\r\n              highlight-current-row @filter-change=\"filterTableChange\"\r\n              size=\"mini\">\r\n      <el-table-column :label=\"$t('table.id')\" align=\"center\" width=\"50\">\r\n        <template v-slot=\"scope\">{{ initTableIndex('page', scope.$index) }}</template>\r\n      </el-table-column>\r\n      <el-table-column style=\"width: 50%\" :label=\"$t('productTestingUnderwriting.details')\" align=\"center\"\r\n                       type=\"expand\">\r\n        <template slot-scope=\"props\">\r\n          <el-form label-position=\"left\" inline class=\"demo-table-expand\">\r\n            <el-form-item style=\"width: 50%\"\r\n                          :label=\"props.row.commodityType ==='R'? $t('productTestingUnderwriting.pdCode') : $t('productTestingUnderwriting.pdSetMealCode')\">\r\n              <span>{{props.row.pdCode}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\"\r\n                          :label=\"props.row.commodityType ==='R'? $t('productTestingUnderwriting.pdName'): $t('productTestingUnderwriting.pdSetMealName')\">\r\n              <span>{{props.row.pdName}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\"\r\n                          :label=\"props.row.commodityType ==='R'? $t('productTestingUnderwriting.pdEdition') : $t('productTestingUnderwriting.pdSetMealEdition')\">\r\n              <span>{{props.row.pdEdition}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\"\r\n                          :label=\"props.row.commodityType ==='R'? $t('productTestingUnderwriting.pdType') : $t('productTestingUnderwriting.pdSetMealType')\">\r\n              {{props.row.defType | filter_pdAuditType}}{{props.row.commodityType ==='P'? '套餐' :''}}\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\" :label=\"$t('productTestingUnderwriting.defineApplicationDate')\">\r\n              <span>{{props.row.pdApplDate}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\" :label=\"$t('productTestingUnderwriting.defineEndDate')\">\r\n              <span>{{props.row.pdStopDate}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\" :label=\"$t('productTestingUnderwriting.testReturn')\">\r\n              <span>{{props.row.pdIsPostReturn}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\" :label=\"$t('productTestingUnderwriting.testTimes')\">\r\n              <span>{{props.row.pdAuditTimes}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\" :label=\"$t('productTestingUnderwriting.auditRetuen')\">\r\n              <span>{{props.row.pdIsPostReturn}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\" :label=\"$t('productTestingUnderwriting.auditTimes')\">\r\n              <span>{{props.row.pdAuditTimes}}</span>\r\n            </el-form-item>\r\n          </el-form>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingUnderwriting.commodityType')\" align=\"center\"\r\n                       prop=\"commodityType\" :filters=\"[{text: '产品', value: 'R'}, {text: '产品套餐', value: 'P'}]\"\r\n                       :filter-method=\"filterCommodityTypeHandler\" column-key=\"commodityType\" :filter-multiple=\"false\">\r\n        <template v-slot=\"scope\">{{scope.row.commodityType | filter_commodityType}}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingUnderwriting.pdSubdivision')\" align=\"center\"\r\n                       prop=\"pdCls2\" :filters=\"filterCommodityBreakdown\"\r\n                       :filter-method=\"filterCommodityBreakdownHandler\">\r\n        <template v-slot=\"scope\">{{scope.row.pdCls2 | filter_pdCls2}}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingUnderwriting.pdCode')\" align=\"center\"\r\n                       prop=\"pdCode\"></el-table-column>\r\n      <el-table-column :label=\"$t('productTestingUnderwriting.pdName')\" align=\"center\"\r\n                       prop=\"pdName\"></el-table-column>\r\n      <el-table-column :label=\"$t('productTestingUnderwriting.pdEdition')\" align=\"center\"\r\n                       prop=\"pdEdition\">\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingUnderwriting.pdType')\" align=\"center\" prop=\"defType\" sortable>\r\n        <template v-slot=\"scope\">{{scope.row.defType | filter_pdAuditType}}{{scope.row.commodityType ==='P'? '套餐' :''}}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingUnderwriting.DefineEndDate')\" align=\"center\"\r\n                       prop=\"pdApplDate\" sortable>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('table.actions')\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button  size=\"small\" v-auth=\"'underwriting-test:assignTask'\" @click=\"assignTask(scope.row)\"><i class=\"el-icon-s-operation\"/></el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <cus-pagination :pageSize=\"10\" :params=\"params\" ref=\"page\" url=\"/underwriting-test/base/queryPendingTask\"\r\n                    v-model=\"configs1\"/>\r\n\r\n    <cus-form-title :label=\"$t('productTestingUnderwriting.formTitle2')\" :first=\"true\"></cus-form-title>\r\n\r\n    <el-form :model=\"params1\"  label-width=\"120px\">\r\n      <el-row>\r\n        <el-col :span=\"8\">\r\n          <el-form-item  :label=\"$t('productTestingUnderwriting.taskAssignmentDate')\">\r\n            <el-date-picker\r\n              value-format=\"yyyy-MM-dd\"\r\n              v-model=\"params1.times\"\r\n              type=\"daterange\"\r\n              :range-separator=\"$t('productSelect.to')\"\r\n              :start-placeholder=\"$t('productSelect.productApplyStartDate')\"\r\n              :end-placeholder=\"$t('productSelect.productApplyEndDate')\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n        </el-col>\r\n        <cus-btn-wrapper>\r\n            <el-button  size=\"small\" @click=\"searchTestTask\" icon=\"el-icon-search\" type=\"primary\">\r\n              {{ $t('productTestingUnderwriting.search') }}\r\n            </el-button>\r\n        </cus-btn-wrapper>\r\n      </el-row>\r\n    </el-form>\r\n    <cus-table-title :label=\"$t('productTestingUnderwriting.pendingTestTask')\"></cus-table-title>\r\n\r\n    <el-table :data=\"configs2\" align=\"center\" border class=\"wraper-table\" element-loading-text=\"Loading\" fit\r\n              highlight-current-row\r\n              size=\"mini\" @filter-change=\"filterTableChange\">\r\n      <el-table-column width=\"50\" :label=\"$t('table.select')\"  align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-radio-group v-model=\"selecteConfigs2\">\r\n                  <span>\r\n                <el-radio :label=\"scope.row\" @change=\"handleDetail\">{{''}}</el-radio>\r\n                  </span>\r\n          </el-radio-group>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('table.id')\" type=\"index\" align=\"center\">\r\n        <template v-slot=\"scope\">{{ initTableIndex('page', scope.$index) }}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingUnderwriting.commodityType')\" align=\"center\"\r\n                       prop=\"commodityType\" :filters=\"[{text: '产品', value: 'R'}, {text: '产品套餐', value: 'P'}]\"\r\n                       :filter-method=\"filterCommodityTypeHandler\" column-key=\"commodityType2\" :filter-multiple=\"false\">\r\n        <template v-slot=\"scope\">{{scope.row.commodityType | filter_commodityType}}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingUnderwriting.pdSubdivision')\" align=\"center\"\r\n                       prop=\"pdCls2\" :filters=\"filterCommodityBreakdown2\"\r\n                       :filter-method=\"filterCommodityBreakdownHandler\">\r\n        <template v-slot=\"scope\">{{scope.row.pdCls2 | filter_pdCls2}}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('i18nView.pdCode')\" align=\"center\"\r\n                       prop=\"pdCode\"></el-table-column>\r\n      <el-table-column :label=\"$t('i18nView.pdName')\" align=\"center\"\r\n                       prop=\"pdName\"></el-table-column>\r\n      <el-table-column :label=\"$t('customComponents.pdEdition')\" align=\"center\"\r\n                       prop=\"pdEdition\">\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('i18nView.defType')\" align=\"center\" prop=\"defType\" sortable>\r\n        <template v-slot=\"scope\">{{scope.row.defType | filter_pdAuditType}}{{scope.row.commodityType ==='P'? '套餐' :''}}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingUnderwriting.testType')\" align=\"center\" prop=\"pdTestStatus\" sortable>\r\n        <template v-slot=\"scope\">{{scope.row.pdTestStatus | filter_Status}}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingUnderwriting.taskAssignmentDate')\" align=\"center\"\r\n                       prop=\"assignTime\" sortable>\r\n      </el-table-column>\r\n    </el-table>\r\n    <cus-pagination :pageSize=\"10\" :params=\"params1\" ref=\"page1\" url=\"/underwriting-test/base/queryOwnTestTask\"\r\n                    v-model=\"configs2\"/>\r\n  </cus-wraper>\r\n</template>\r\n<script>\r\n\r\n  import { initSelectPendingTask, initSelectTestTask, assignTestTask,applyTestBatch } from '@/api/basicinfo/productUnderwritingTest'\r\n  import { mapGetters } from 'vuex'\r\n\r\n  let _this\r\n  export default {\r\n    name: 'underwritingTestingNew',\r\n    filters: {\r\n      filter_pdAuditType(code) {\r\n        return _this.getCodeName('pdAuditType', code, true)\r\n      }, filter_pdCls2(code) {\r\n        return '产品套餐' === code ? code : _this.getCodeName('ProductCategory', code, true)\r\n      },\r\n      filter_commodityType(code) {\r\n        return _this.commodityTypes[code]\r\n      },\r\n      filter_Status(code) {\r\n        return _this.testStatus[code]\r\n      }\r\n    },\r\n    data() {\r\n      _this = this\r\n      return {\r\n        commodityTypes: { 'R': '产品', 'P': '产品套餐' },\r\n        testStatus: { '0': '未测试', '1': '测试中' },\r\n        filterCommodityBreakdown: [],\r\n        filterCommodityBreakdown2: [],\r\n        commodityBreakdown: [],\r\n        props: {},\r\n        configs1: [],\r\n        configs2: [],\r\n        params: {\r\n          pdEdition: '',\r\n          times: '',\r\n          pdCode: '',\r\n          pdDetailType: '',\r\n          startDate: '',\r\n          endDate: ''\r\n        },\r\n        params1: {\r\n          pdEdition: '',\r\n          times: '',\r\n          pdCode: '',\r\n          pdDetailType: '',\r\n          startDate: '',\r\n          endDate: ''\r\n        },\r\n\r\n        selecteConfigs2: {},\r\n        pdinfoPendingTask: [],// 查询  产品 下拉选\r\n        pdEditionInfoPendingTask: [], //版别\r\n        pdEditionFilter: [], //版别\r\n        pdinfoTestTask: [],// 查询  产品 下拉选\r\n        pdEditionInfoTestTask: [], //版别\r\n        pdEditionFilterTestTask: [], //版别\r\n        //检验规则\r\n        rules: {}\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\r\n        'ldcodes'\r\n      ])\r\n    },\r\n    created() {\r\n      let commodityBreakdownTemp = this.ldcodes['ProductCategory']\r\n      commodityBreakdownTemp.forEach(data => {\r\n        this.commodityBreakdown.push({ 'text': data.codename, 'value': data.code })\r\n      })\r\n      // this.initSelectPendingTask()\r\n      // this.initSelecTestTask()\r\n    },\r\n    methods: {\r\n      filterTableChange(filters) {\r\n        if (filters['commodityType']) {\r\n          this.filterCommodityBreakdown = []\r\n          if (filters['commodityType'].length === 0) {\r\n            this.filterCommodityBreakdown = []\r\n          } else if (filters['commodityType'][0] === 'P') {\r\n            this.filterCommodityBreakdown.push({ 'text': '产品套餐', 'value': '产品套餐' })\r\n          } else if (filters['commodityType'][0] === 'R') {\r\n            this.filterCommodityBreakdown = this.commodityBreakdown\r\n          }\r\n        }\r\n        if (filters['commodityType2']) {\r\n          this.filterCommodityBreakdown2 = []\r\n          if (filters['commodityType2'].length === 0) {\r\n            this.filterCommodityBreakdown2 = []\r\n          } else if (filters['commodityType2'][0] === 'P') {\r\n            this.filterCommodityBreakdown2.push({ 'text': '产品套餐', 'value': '产品套餐' })\r\n          } else if (filters['commodityType2'][0] === 'R') {\r\n            this.filterCommodityBreakdown2 = this.commodityBreakdown\r\n          }\r\n        }\r\n      },\r\n      filterCommodityTypeHandler(value, row, column) {\r\n        const property = column['property']\r\n        return row[property] === value\r\n      },\r\n      filterCommodityBreakdownHandler(value, row, column) {\r\n        const property = column['property']\r\n        return row[property] === value\r\n      },\r\n      assignTask(row) {\r\n        this.confirmWarning('是否要认领当前任务?').then(() => {\r\n          let params = { 'taskId': row.taskId }\r\n          assignTestTask(this.buildRequestData(params)).then(res => {\r\n            this.notifySuccess('认领成功')\r\n            this.$refs.page.reload()\r\n            this.$refs.page1.reload()\r\n          })\r\n        })\r\n      },\r\n      searchpendingTask() {\r\n        if (this.params.times) {\r\n          this.params.startDate = this.params.times[0]\r\n          this.params.endDate = this.params.times[1]\r\n        } else {\r\n          this.params.startDate = ''\r\n          this.params.endDate = ''\r\n        }\r\n        this.$refs.page.reload()\r\n      },\r\n      searchTestTask() {\r\n        if (this.params1.times) {\r\n          this.params1.assignStartDate = this.params1.times[0]\r\n          this.params1.assignEndDate = this.params1.times[1]\r\n        } else {\r\n          this.params1.assignStartDate = ''\r\n          this.params1.assignEndDate = ''\r\n        }\r\n        this.$refs.page1.reload()\r\n      },\r\n      handleDetail(row){\r\n        this.cacheJsonData(\"pdTestInfo\", row)\r\n        applyTestBatch(this.buildRequestData({\"testModule\":\"underwritingtest\",\"productTestVo\":row})).then(res =>{\r\n          let pdTestInfoId = res.data\r\n           this.$router.push({ path: \"/product-testing/underwriting-test/underwriting-test-detail\" , params:{pdTestId: pdTestInfoId}});\r\n        })\r\n      },\r\n      /*处于测试节点且未分配的任务 默认下拉选*/\r\n      initSelectPendingTask() {\r\n        initSelectPendingTask(this.buildRequestData({})).then(res => {\r\n          this.pdinfoPendingTask = []\r\n          this.pdEditionInfoPendingTask = []\r\n          for (const lis of res.data) {\r\n            let info = { code: '', name: '' }\r\n            info.code = lis.pdCode\r\n            info.name = lis.pdName\r\n            this.pdinfoPendingTask.push(info)\r\n            let edition = { code: '', edition: '' }\r\n            edition.code = lis.pdCode\r\n            edition.edition = lis.pdEdition\r\n            this.pdEditionInfoPendingTask.push(edition)\r\n          }\r\n        })\r\n      },\r\n      /*选择产品，控制版别*/\r\n      typePdSelect(val) {\r\n        this.pdEditionFilter = []\r\n        if (val) {\r\n          for (const valKey of this.pdEditionInfoPendingTask) {\r\n            if (val == valKey.code) {\r\n              let edition = { pdCode: '', pdEdition: '' }\r\n              edition.pdCode = valKey.code\r\n              edition.pdEdition = valKey.edition\r\n              this.pdEditionFilter.push(edition)\r\n            }\r\n          }\r\n          this.params.pdEdition = (this.pdEditionFilter[0].pdEdition)\r\n        }\r\n      },\r\n      /*改变细类 控制产品*/\r\n      pdDetailType(val) {\r\n        this.params.pdCode = ''\r\n        this.params.pdEdition = ''\r\n        this.pdinfoPendingTask = []\r\n        this.pdEditionInfoPendingTask = []\r\n        initSelectPendingTask(this.buildRequestData({ 'pdDetailType': val })).then(res => {\r\n          for (const lis of res.data) {\r\n            let info = { code: '', name: '' }\r\n            info.code = lis.pdCode\r\n            info.name = lis.pdName\r\n            this.pdinfoPendingTask.push(info)\r\n            let edition = { code: '', edition: '' }\r\n            edition.code = lis.pdCode\r\n            edition.edition = lis.pdEdition\r\n            this.pdEditionInfoPendingTask.push(edition)\r\n          }\r\n        })\r\n      },\r\n\r\n      /*处于测试节点且已配的任务 默认下拉选*/\r\n      initSelecTestTask() {\r\n        initSelectTestTask(this.buildRequestData({})).then(res => {\r\n          this.pdinfoTestTask = []\r\n          this.pdEditionInfoTestTask = []\r\n          for (const lis of res.data) {\r\n            let info = { code: '', name: '' }\r\n            info.code = lis.pdCode\r\n            info.name = lis.pdName\r\n            this.pdinfoTestTask.push(info)\r\n            let edition = { code: '', edition: '' }\r\n            edition.code = lis.pdCode\r\n            edition.edition = lis.pdEdition\r\n            this.pdEditionInfoTestTask.push(edition)\r\n          }\r\n        })\r\n      },\r\n      /*选择产品，控制版别*/\r\n      typeTestTask(val) {\r\n        this.pdEditionFilterTestTask = []\r\n        if (val) {\r\n          for (const valKey of this.pdEditionInfoTestTask) {\r\n            if (val == valKey.code) {\r\n              let edition = { pdCode: '', pdEdition: '' }\r\n              edition.pdCode = valKey.code\r\n              edition.pdEdition = valKey.edition\r\n              this.pdEditionFilterTestTask.push(edition)\r\n            }\r\n          }\r\n          this.params1.pdEdition = (this.pdEditionFilterTestTask[0].pdEdition)\r\n        }\r\n      },\r\n      /*改变细类 控制产品*/\r\n      pdDetailTypeTestTask(val) {\r\n        this.params1.pdCode = ''\r\n        this.params1.pdEdition = ''\r\n        this.pdinfoTestTask = []\r\n        this.pdEditionInfoTestTask = []\r\n        initSelectTestTask(this.buildRequestData({ 'pdDetailType': val })).then(res => {\r\n          for (const lis of res.data) {\r\n            let info = { code: '', name: '' }\r\n            info.code = lis.pdCode\r\n            info.name = lis.pdName\r\n            this.pdinfoTestTask.push(info)\r\n            let edition = { code: '', edition: '' }\r\n            edition.code = lis.pdCode\r\n            edition.edition = lis.pdEdition\r\n            this.pdEditionInfoTestTask.push(edition)\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n\r\n"],"sourceRoot":"src/views/product-testing/underwriting-test/main"}]}