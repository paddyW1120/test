{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js!D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\api\\ibrms\\ruleTest.js","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\api\\ibrms\\ruleTest.js","mtime":1609847106206},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1706753193796},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\eslint-loader\\index.js","mtime":1706753187898}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwoKdmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKCJEOi84NjE4MS9EZXNrdG9wL3Byb2R1Y3QvcGNzLXByb2R1Y3Qtdmlldy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHQiKTsKCk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAiX19lc01vZHVsZSIsIHsKICB2YWx1ZTogdHJ1ZQp9KTsKZXhwb3J0cy5nZXRSdWxlVGVzdEJhc2UgPSBnZXRSdWxlVGVzdEJhc2U7CmV4cG9ydHMucnVsZVRlc3RDcm9zcyA9IHJ1bGVUZXN0Q3Jvc3M7CmV4cG9ydHMuZG9SdWxlVGVzdCA9IGRvUnVsZVRlc3Q7Cgp2YXIgX3JlcXVlc3QgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoIkAvdXRpbHMvcmVxdWVzdCIpKTsKCmZ1bmN0aW9uIGdldFJ1bGVUZXN0QmFzZShpZCkgewogIHJldHVybiAoMCwgX3JlcXVlc3QuZGVmYXVsdCkoewogICAgdXJsOiAnL3J1bGUtdGVzdC9nZXRSdWxlVGVzdEJhc2UvJyArIGlkLAogICAgbWV0aG9kOiAnZ2V0JwogIH0pOwp9CgpmdW5jdGlvbiBydWxlVGVzdENyb3NzKGRhdGEpIHsKICByZXR1cm4gKDAsIF9yZXF1ZXN0LmRlZmF1bHQpKHsKICAgIHVybDogJy9ydWxlLXRlc3QvcnVsZVRlc3RDcm9zcycsCiAgICBtZXRob2Q6ICdwb3N0JywKICAgIGRhdGE6IGRhdGEKICB9KTsKfQoKZnVuY3Rpb24gZG9SdWxlVGVzdChkYXRhKSB7CiAgcmV0dXJuICgwLCBfcmVxdWVzdC5kZWZhdWx0KSh7CiAgICB1cmw6ICcvcnVsZS10ZXN0L2RvUnVsZVRlc3QnLAogICAgbWV0aG9kOiAncG9zdCcsCiAgICBkYXRhOiBkYXRhCiAgfSk7Cn0="},{"version":3,"sources":["D:/86181/Desktop/product/pcs-product-view/src/api/ibrms/ruleTest.js"],"names":["getRuleTestBase","id","url","method","ruleTestCross","data","doRuleTest"],"mappings":";;;;;;;;;;;AAAA;;AAEO,SAASA,eAAT,CAAyBC,EAAzB,EAA4B;AACjC,SAAO,sBAAQ;AACbC,IAAAA,GAAG,EAAE,gCAAgCD,EADxB;AAEbE,IAAAA,MAAM,EAAE;AAFK,GAAR,CAAP;AAID;;AAEM,SAASC,aAAT,CAAuBC,IAAvB,EAA4B;AACjC,SAAO,sBAAQ;AACbH,IAAAA,GAAG,EAAE,0BADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbE,IAAAA,IAAI,EAAJA;AAHa,GAAR,CAAP;AAKD;;AAEM,SAASC,UAAT,CAAoBD,IAApB,EAAyB;AAC9B,SAAO,sBAAQ;AACbH,IAAAA,GAAG,EAAE,uBADQ;AAEbC,IAAAA,MAAM,EAAE,MAFK;AAGbE,IAAAA,IAAI,EAAJA;AAHa,GAAR,CAAP;AAKD","sourcesContent":["import request from '@/utils/request'\r\n\r\nexport function getRuleTestBase(id){\r\n  return request({\r\n    url: '/rule-test/getRuleTestBase/' + id,\r\n    method: 'get'\r\n  })\r\n}\r\n\r\nexport function ruleTestCross(data){\r\n  return request({\r\n    url: '/rule-test/ruleTestCross',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n\r\nexport function doRuleTest(data){\r\n  return request({\r\n    url: '/rule-test/doRuleTest',\r\n    method: 'post',\r\n    data\r\n  })\r\n}\r\n"]}]}