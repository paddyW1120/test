{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js!D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\product-testing\\new-single-test\\main\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\product-testing\\new-single-test\\main\\index.vue","mtime":1609847107126},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1706753193796},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAwLA;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAA,KAAA;;eACA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,OAAA,EAAA;AACA,IAAA,kBADA,8BACA,IADA,EACA;AACA,aAAA,KAAA,CAAA,WAAA,CAAA,aAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AACA,KAHA;AAGA,IAAA,aAHA,yBAGA,IAHA,EAGA;AACA,aAAA,WAAA,IAAA,GAAA,IAAA,GAAA,KAAA,CAAA,WAAA,CAAA,iBAAA,EAAA,IAAA,EAAA,IAAA,CAAA;AACA,KALA;AAMA,IAAA,oBANA,gCAMA,IANA,EAMA;AACA,aAAA,KAAA,CAAA,cAAA,CAAA,IAAA,CAAA;AACA,KARA;AASA,IAAA,aATA,yBASA,IATA,EASA;AACA,aAAA,KAAA,CAAA,UAAA,CAAA,IAAA,CAAA;AACA;AAXA,GAFA;AAeA,EAAA,IAfA,kBAeA;AACA,IAAA,KAAA,GAAA,IAAA;AACA,WAAA;AACA,MAAA,cAAA,EAAA;AAAA,aAAA,IAAA;AAAA,aAAA;AAAA,OADA;AAEA,MAAA,UAAA,EAAA;AAAA,aAAA,KAAA;AAAA,aAAA;AAAA,OAFA;AAGA,MAAA,wBAAA,EAAA,EAHA;AAIA,MAAA,yBAAA,EAAA,EAJA;AAKA,MAAA,kBAAA,EAAA,EALA;AAMA,MAAA,KAAA,EAAA,EANA;AAOA,MAAA,QAAA,EAAA,EAPA;AAQA,MAAA,QAAA,EAAA,EARA;AASA,MAAA,MAAA,EAAA;AACA,QAAA,SAAA,EAAA,EADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,MAAA,EAAA,EAHA;AAIA,QAAA,YAAA,EAAA,EAJA;AAKA,QAAA,SAAA,EAAA,EALA;AAMA,QAAA,OAAA,EAAA;AANA,OATA;AAiBA,MAAA,OAAA,EAAA;AACA,QAAA,SAAA,EAAA,EADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,MAAA,EAAA,EAHA;AAIA,QAAA,YAAA,EAAA,EAJA;AAKA,QAAA,SAAA,EAAA,EALA;AAMA,QAAA,OAAA,EAAA;AANA,OAjBA;AA0BA,MAAA,eAAA,EAAA,EA1BA;AA2BA,MAAA,iBAAA,EAAA,EA3BA;AA2BA;AACA,MAAA,wBAAA,EAAA,EA5BA;AA4BA;AACA,MAAA,eAAA,EAAA,EA7BA;AA6BA;AACA,MAAA,cAAA,EAAA,EA9BA;AA8BA;AACA,MAAA,qBAAA,EAAA,EA/BA;AA+BA;AACA,MAAA,uBAAA,EAAA,EAhCA;AAgCA;AACA;AACA,MAAA,KAAA,EAAA;AAlCA,KAAA;AAoCA,GArDA;AAsDA,EAAA,QAAA,kCACA,sBAAA,CACA,SADA,CAAA,CADA,CAtDA;AA2DA,EAAA,OA3DA,qBA2DA;AAAA;;AACA,QAAA,sBAAA,GAAA,KAAA,OAAA,CAAA,iBAAA,CAAA;AACA,IAAA,sBAAA,CAAA,OAAA,CAAA,UAAA,IAAA,EAAA;AACA,MAAA,MAAA,CAAA,kBAAA,CAAA,IAAA,CAAA;AAAA,gBAAA,IAAA,CAAA,QAAA;AAAA,iBAAA,IAAA,CAAA;AAAA,OAAA;AACA,KAFA,EAFA,CAKA;AACA;AACA,GAlEA;AAmEA,EAAA,OAAA,EAAA;AACA,IAAA,iBADA,6BACA,OADA,EACA;AACA,UAAA,OAAA,CAAA,eAAA,CAAA,EAAA;AACA,aAAA,wBAAA,GAAA,EAAA;;AACA,YAAA,OAAA,CAAA,eAAA,CAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,eAAA,wBAAA,GAAA,EAAA;AACA,SAFA,MAEA,IAAA,OAAA,CAAA,eAAA,CAAA,CAAA,CAAA,MAAA,GAAA,EAAA;AACA,eAAA,wBAAA,CAAA,IAAA,CAAA;AAAA,oBAAA,MAAA;AAAA,qBAAA;AAAA,WAAA;AACA,SAFA,MAEA,IAAA,OAAA,CAAA,eAAA,CAAA,CAAA,CAAA,MAAA,GAAA,EAAA;AACA,eAAA,wBAAA,GAAA,KAAA,kBAAA;AACA;AACA;;AACA,UAAA,OAAA,CAAA,gBAAA,CAAA,EAAA;AACA,aAAA,yBAAA,GAAA,EAAA;;AACA,YAAA,OAAA,CAAA,gBAAA,CAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,eAAA,yBAAA,GAAA,EAAA;AACA,SAFA,MAEA,IAAA,OAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,MAAA,GAAA,EAAA;AACA,eAAA,yBAAA,CAAA,IAAA,CAAA;AAAA,oBAAA,MAAA;AAAA,qBAAA;AAAA,WAAA;AACA,SAFA,MAEA,IAAA,OAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,MAAA,GAAA,EAAA;AACA,eAAA,yBAAA,GAAA,KAAA,kBAAA;AACA;AACA;AACA,KAtBA;AAuBA,IAAA,0BAvBA,sCAuBA,KAvBA,EAuBA,GAvBA,EAuBA,MAvBA,EAuBA;AACA,UAAA,QAAA,GAAA,MAAA,CAAA,UAAA,CAAA;AACA,aAAA,GAAA,CAAA,QAAA,CAAA,KAAA,KAAA;AACA,KA1BA;AA2BA,IAAA,+BA3BA,2CA2BA,KA3BA,EA2BA,GA3BA,EA2BA,MA3BA,EA2BA;AACA,UAAA,QAAA,GAAA,MAAA,CAAA,UAAA,CAAA;AACA,aAAA,GAAA,CAAA,QAAA,CAAA,KAAA,KAAA;AACA,KA9BA;AA+BA,IAAA,UA/BA,sBA+BA,GA/BA,EA+BA;AAAA;;AACA,WAAA,cAAA,CAAA,YAAA,EAAA,IAAA,CAAA,YAAA;AACA,YAAA,MAAA,GAAA;AAAA,oBAAA,GAAA,CAAA;AAAA,SAAA;AACA,+CAAA,MAAA,CAAA,gBAAA,CAAA,MAAA,CAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,UAAA,MAAA,CAAA,aAAA,CAAA,MAAA;;AACA,UAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA;;AACA,UAAA,MAAA,CAAA,KAAA,CAAA,KAAA,CAAA,MAAA;AACA,SAJA;AAKA,OAPA;AAQA,KAxCA;AAyCA,IAAA,iBAzCA,+BAyCA;AACA,UAAA,KAAA,MAAA,CAAA,KAAA,EAAA;AACA,aAAA,MAAA,CAAA,SAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,aAAA,MAAA,CAAA,OAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,OAHA,MAGA;AACA,aAAA,MAAA,CAAA,SAAA,GAAA,EAAA;AACA,aAAA,MAAA,CAAA,OAAA,GAAA,EAAA;AACA;;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,MAAA;AACA,KAlDA;AAmDA,IAAA,cAnDA,4BAmDA;AACA,UAAA,KAAA,OAAA,CAAA,KAAA,EAAA;AACA,aAAA,OAAA,CAAA,eAAA,GAAA,KAAA,OAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,aAAA,OAAA,CAAA,aAAA,GAAA,KAAA,OAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,OAHA,MAGA;AACA,aAAA,OAAA,CAAA,eAAA,GAAA,EAAA;AACA,aAAA,OAAA,CAAA,aAAA,GAAA,EAAA;AACA;;AACA,WAAA,KAAA,CAAA,KAAA,CAAA,MAAA;AACA,KA5DA;AA6DA,IAAA,YA7DA,wBA6DA,GA7DA,EA6DA;AAAA;;AACA,WAAA,aAAA,CAAA,YAAA,EAAA,GAAA;AACA,6CAAA,KAAA,gBAAA,CAAA;AAAA,sBAAA,iBAAA;AAAA,4BAAA;AAAA,OAAA,CAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,YAAA,GAAA,GAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,UAAA,IAAA,EAAA,QAAA;AAAA,UAAA,MAAA,EAAA;AAAA,YAAA,QAAA,EAAA;AAAA;AAAA,SAAA,EAFA,CAGA;;AACA,OAJA;AAKA,KApEA;;AAqEA;AACA,IAAA,qBAtEA,mCAsEA;AAAA;;AACA,oDAAA,KAAA,gBAAA,CAAA,EAAA,CAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,iBAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,wBAAA,GAAA,EAAA;;AAFA,iEAGA,GAAA,CAAA,IAHA;AAAA;;AAAA;AAGA,8DAAA;AAAA,gBAAA,GAAA;AACA,gBAAA,IAAA,GAAA;AAAA,cAAA,IAAA,EAAA,EAAA;AAAA,cAAA,IAAA,EAAA;AAAA,aAAA;AACA,YAAA,IAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA;AACA,YAAA,IAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA;;AACA,YAAA,MAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,IAAA;;AACA,gBAAA,OAAA,GAAA;AAAA,cAAA,IAAA,EAAA,EAAA;AAAA,cAAA,OAAA,EAAA;AAAA,aAAA;AACA,YAAA,OAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA;AACA,YAAA,OAAA,CAAA,OAAA,GAAA,GAAA,CAAA,SAAA;;AACA,YAAA,MAAA,CAAA,wBAAA,CAAA,IAAA,CAAA,OAAA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAaA,OAbA;AAcA,KArFA;;AAsFA;AACA,IAAA,YAvFA,wBAuFA,GAvFA,EAuFA;AACA,WAAA,eAAA,GAAA,EAAA;;AACA,UAAA,GAAA,EAAA;AAAA,kEACA,KAAA,wBADA;AAAA;;AAAA;AACA,iEAAA;AAAA,gBAAA,MAAA;;AACA,gBAAA,GAAA,IAAA,MAAA,CAAA,IAAA,EAAA;AACA,kBAAA,OAAA,GAAA;AAAA,gBAAA,MAAA,EAAA,EAAA;AAAA,gBAAA,SAAA,EAAA;AAAA,eAAA;AACA,cAAA,OAAA,CAAA,MAAA,GAAA,MAAA,CAAA,IAAA;AACA,cAAA,OAAA,CAAA,SAAA,GAAA,MAAA,CAAA,OAAA;AACA,mBAAA,eAAA,CAAA,IAAA,CAAA,OAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;;AASA,aAAA,MAAA,CAAA,SAAA,GAAA,KAAA,eAAA,CAAA,CAAA,EAAA,SAAA;AACA;AACA,KApGA;;AAqGA;AACA,IAAA,YAtGA,wBAsGA,GAtGA,EAsGA;AAAA;;AACA,WAAA,MAAA,CAAA,MAAA,GAAA,EAAA;AACA,WAAA,MAAA,CAAA,SAAA,GAAA,EAAA;AACA,WAAA,iBAAA,GAAA,EAAA;AACA,WAAA,wBAAA,GAAA,EAAA;AACA,oDAAA,KAAA,gBAAA,CAAA;AAAA,wBAAA;AAAA,OAAA,CAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AAAA,kEACA,GAAA,CAAA,IADA;AAAA;;AAAA;AACA,iEAAA;AAAA,gBAAA,GAAA;AACA,gBAAA,IAAA,GAAA;AAAA,cAAA,IAAA,EAAA,EAAA;AAAA,cAAA,IAAA,EAAA;AAAA,aAAA;AACA,YAAA,IAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA;AACA,YAAA,IAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA;;AACA,YAAA,MAAA,CAAA,iBAAA,CAAA,IAAA,CAAA,IAAA;;AACA,gBAAA,OAAA,GAAA;AAAA,cAAA,IAAA,EAAA,EAAA;AAAA,cAAA,OAAA,EAAA;AAAA,aAAA;AACA,YAAA,OAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA;AACA,YAAA,OAAA,CAAA,OAAA,GAAA,GAAA,CAAA,SAAA;;AACA,YAAA,MAAA,CAAA,wBAAA,CAAA,IAAA,CAAA,OAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAWA,OAXA;AAYA,KAvHA;;AAyHA;AACA,IAAA,iBA1HA,+BA0HA;AAAA;;AACA,iDAAA,KAAA,gBAAA,CAAA,EAAA,CAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,cAAA,GAAA,EAAA;AACA,QAAA,MAAA,CAAA,qBAAA,GAAA,EAAA;;AAFA,kEAGA,GAAA,CAAA,IAHA;AAAA;;AAAA;AAGA,iEAAA;AAAA,gBAAA,GAAA;AACA,gBAAA,IAAA,GAAA;AAAA,cAAA,IAAA,EAAA,EAAA;AAAA,cAAA,IAAA,EAAA;AAAA,aAAA;AACA,YAAA,IAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA;AACA,YAAA,IAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA;;AACA,YAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA;;AACA,gBAAA,OAAA,GAAA;AAAA,cAAA,IAAA,EAAA,EAAA;AAAA,cAAA,OAAA,EAAA;AAAA,aAAA;AACA,YAAA,OAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA;AACA,YAAA,OAAA,CAAA,OAAA,GAAA,GAAA,CAAA,SAAA;;AACA,YAAA,MAAA,CAAA,qBAAA,CAAA,IAAA,CAAA,OAAA;AACA;AAZA;AAAA;AAAA;AAAA;AAAA;AAaA,OAbA;AAcA,KAzIA;;AA0IA;AACA,IAAA,YA3IA,wBA2IA,GA3IA,EA2IA;AACA,WAAA,uBAAA,GAAA,EAAA;;AACA,UAAA,GAAA,EAAA;AAAA,kEACA,KAAA,qBADA;AAAA;;AAAA;AACA,iEAAA;AAAA,gBAAA,MAAA;;AACA,gBAAA,GAAA,IAAA,MAAA,CAAA,IAAA,EAAA;AACA,kBAAA,OAAA,GAAA;AAAA,gBAAA,MAAA,EAAA,EAAA;AAAA,gBAAA,SAAA,EAAA;AAAA,eAAA;AACA,cAAA,OAAA,CAAA,MAAA,GAAA,MAAA,CAAA,IAAA;AACA,cAAA,OAAA,CAAA,SAAA,GAAA,MAAA,CAAA,OAAA;AACA,mBAAA,uBAAA,CAAA,IAAA,CAAA,OAAA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;;AASA,aAAA,OAAA,CAAA,SAAA,GAAA,KAAA,uBAAA,CAAA,CAAA,EAAA,SAAA;AACA;AACA,KAxJA;;AAyJA;AACA,IAAA,oBA1JA,gCA0JA,GA1JA,EA0JA;AAAA;;AACA,WAAA,OAAA,CAAA,MAAA,GAAA,EAAA;AACA,WAAA,OAAA,CAAA,SAAA,GAAA,EAAA;AACA,WAAA,cAAA,GAAA,EAAA;AACA,WAAA,qBAAA,GAAA,EAAA;AACA,iDAAA,KAAA,gBAAA,CAAA;AAAA,wBAAA;AAAA,OAAA,CAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AAAA,kEACA,GAAA,CAAA,IADA;AAAA;;AAAA;AACA,iEAAA;AAAA,gBAAA,GAAA;AACA,gBAAA,IAAA,GAAA;AAAA,cAAA,IAAA,EAAA,EAAA;AAAA,cAAA,IAAA,EAAA;AAAA,aAAA;AACA,YAAA,IAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA;AACA,YAAA,IAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA;;AACA,YAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,IAAA;;AACA,gBAAA,OAAA,GAAA;AAAA,cAAA,IAAA,EAAA,EAAA;AAAA,cAAA,OAAA,EAAA;AAAA,aAAA;AACA,YAAA,OAAA,CAAA,IAAA,GAAA,GAAA,CAAA,MAAA;AACA,YAAA,OAAA,CAAA,OAAA,GAAA,GAAA,CAAA,SAAA;;AACA,YAAA,MAAA,CAAA,qBAAA,CAAA,IAAA,CAAA,OAAA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAWA,OAXA;AAYA;AA3KA;AAnEA,C","sourcesContent":["<template>\r\n  <cus-wraper>\r\n    <cus-form-title :label=\"$t('productTestingNew.formTitle')\" :first=\"true\"></cus-form-title>\r\n    <el-form :model=\"params\" label-width=\"120px\">\r\n      <el-row>\r\n        <cus-col :span=\"8\">\r\n          <el-form-item :label=\"$t('productTestingNew.DefineEndDate')\">\r\n            <el-date-picker\r\n              v-model=\"params.times\"\r\n              value-format=\"yyyy-MM-dd\"\r\n              type=\"daterange\"\r\n              :range-separator=\"$t('productSelect.to')\"\r\n              :start-placeholder=\"$t('productSelect.productApplyStartDate')\"\r\n              :end-placeholder=\"$t('productSelect.productApplyEndDate')\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n        </cus-col>\r\n        <cus-btn-wrapper>\r\n            <el-button  size=\"small\" @click=\"searchpendingTask\" icon=\"el-icon-search\" type=\"primary\">\r\n              {{ $t('productTestingNew.search') }}\r\n            </el-button>\r\n        </cus-btn-wrapper>\r\n      </el-row>\r\n    </el-form>\r\n    <cus-table-title :label=\"$t('productTestingNew.pendingTask')\"/>\r\n    <el-table :data=\"configs1\" align=\"center\" border class=\"wraper-table\" element-loading-text=\"Loading\" fit\r\n              highlight-current-row @filter-change=\"filterTableChange\"\r\n              size=\"mini\">\r\n      <el-table-column :label=\"$t('table.id')\" align=\"center\" width=\"50\">\r\n        <template v-slot=\"scope\">{{ initTableIndex('page', scope.$index) }}</template>\r\n      </el-table-column>\r\n      <el-table-column style=\"width: 50%\" :label=\"$t('productTestingNew.details')\" align=\"center\"\r\n                       type=\"expand\">\r\n        <template slot-scope=\"props\">\r\n          <el-form label-position=\"left\" inline class=\"demo-table-expand\">\r\n            <el-form-item style=\"width: 50%\"\r\n                          :label=\"props.row.commodityType ==='R'? $t('productTestingNew.pdCode') : $t('productTestingNew.pdSetMealCode')\">\r\n              <span>{{props.row.pdCode}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\"\r\n                          :label=\"props.row.commodityType ==='R'? $t('productTestingNew.pdName'): $t('productTestingNew.pdSetMealName')\">\r\n              <span>{{props.row.pdName}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\"\r\n                          :label=\"props.row.commodityType ==='R'? $t('productTestingNew.pdEdition') : $t('productTestingNew.pdSetMealEdition')\">\r\n              <span>{{props.row.pdEdition}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\"\r\n                          :label=\"props.row.commodityType ==='R'? $t('productTestingNew.pdType') : $t('productTestingNew.pdSetMealType')\">\r\n              {{props.row.defType | filter_pdAuditType}}{{props.row.commodityType ==='P'? '套餐' :''}}\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\" :label=\"$t('productTestingNew.defineApplicationDate')\">\r\n              <span>{{props.row.pdApplDate}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\" :label=\"$t('productTestingNew.defineEndDate')\">\r\n              <span>{{props.row.pdStopDate}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\" :label=\"$t('productTestingNew.testReturn')\">\r\n              <span>{{props.row.pdIsPostReturn}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\" :label=\"$t('productTestingNew.testTimes')\">\r\n              <span>{{props.row.pdAuditTimes}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\" :label=\"$t('productTestingNew.auditRetuen')\">\r\n              <span>{{props.row.pdIsPostReturn}}</span>\r\n            </el-form-item>\r\n            <el-form-item style=\"width: 50%\" :label=\"$t('productTestingNew.auditTimes')\">\r\n              <span>{{props.row.pdAuditTimes}}</span>\r\n            </el-form-item>\r\n          </el-form>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingNew.commodityType')\" align=\"center\"\r\n                       prop=\"commodityType\" :filters=\"[{text: '产品', value: 'R'}, {text: '产品套餐', value: 'P'}]\"\r\n                       :filter-method=\"filterCommodityTypeHandler\" column-key=\"commodityType\" :filter-multiple=\"false\">\r\n        <template v-slot=\"scope\">{{scope.row.commodityType | filter_commodityType}}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingNew.pdSubdivision')\" align=\"center\"\r\n                       prop=\"pdCls2\" :filters=\"filterCommodityBreakdown\"\r\n                       :filter-method=\"filterCommodityBreakdownHandler\">\r\n        <template v-slot=\"scope\">{{scope.row.pdCls2 | filter_pdCls2}}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingNew.pdCode')\" align=\"center\"\r\n                       prop=\"pdCode\"></el-table-column>\r\n      <el-table-column :label=\"$t('productTestingNew.pdName')\" align=\"center\"\r\n                       prop=\"pdName\"></el-table-column>\r\n      <el-table-column :label=\"$t('productTestingNew.pdEdition')\" align=\"center\"\r\n                       prop=\"pdEdition\">\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingNew.pdType')\" align=\"center\" prop=\"defType\" sortable>\r\n        <template v-slot=\"scope\">{{scope.row.defType | filter_pdAuditType}}{{scope.row.commodityType ==='P'? '套餐'\r\n          :''}}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingNew.DefineEndDate')\" align=\"center\"\r\n                       prop=\"pdApplDate\" sortable>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('table.actions')\" align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button  size=\"small\" v-auth=\"'new-single-test:assignTask'\" @click=\"assignTask(scope.row)\"><i\r\n            class=\"el-icon-s-operation\"/></el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <cus-pagination :pageSize=\"10\" :params=\"params\" ref=\"page\" url=\"/new-single-test/base/queryPendingTask\"\r\n                    v-model=\"configs1\"/>\r\n\r\n    <cus-form-title :label=\"$t('productTestingNew.formTitle2')\" :first=\"true\"></cus-form-title>\r\n\r\n    <el-form  :model=\"params1\" label-width=\"120px\">\r\n      <el-row>\r\n        <cus-col :span=\"8\">\r\n          <el-form-item :label=\"$t('productTestingNew.taskAssignmentDate')\">\r\n            <el-date-picker\r\n              v-model=\"params1.times\"\r\n              value-format=\"yyyy-MM-dd\"\r\n              type=\"daterange\"\r\n              :range-separator=\"$t('productSelect.to')\"\r\n              :start-placeholder=\"$t('productSelect.productApplyStartDate')\"\r\n              :end-placeholder=\"$t('productSelect.productApplyEndDate')\">\r\n            </el-date-picker>\r\n          </el-form-item>\r\n        </cus-col>\r\n        <cus-btn-wrapper>\r\n          <el-button  size=\"small\" @click=\"searchTestTask\" icon=\"el-icon-search\" type=\"primary\">\r\n            {{ $t('productTestingNew.search') }}\r\n          </el-button>\r\n        </cus-btn-wrapper>\r\n\r\n      </el-row>\r\n    </el-form>\r\n    <cus-table-title :label=\"$t('productTestingNew.pendingTestTask')\"></cus-table-title>\r\n\r\n    <el-table :data=\"configs2\" align=\"center\" border class=\"wraper-table\" element-loading-text=\"Loading\" fit\r\n              highlight-current-row\r\n              size=\"mini\" @filter-change=\"filterTableChange\">\r\n      <el-table-column width=\"50\" :label=\"$t('table.select')\"  align=\"center\">\r\n        <template slot-scope=\"scope\">\r\n          <el-radio-group v-model=\"selecteConfigs2\">\r\n                  <span>\r\n                <el-radio :label=\"scope.row\" @change=\"handleDetail\">{{''}}</el-radio>\r\n                  </span>\r\n          </el-radio-group>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('table.id')\" type=\"index\" align=\"center\">\r\n        <template v-slot=\"scope\">{{ initTableIndex('page', scope.$index) }}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingNew.commodityType')\" align=\"center\"\r\n                       prop=\"commodityType\" :filters=\"[{text: '产品', value: 'R'}, {text: '产品套餐', value: 'P'}]\"\r\n                       :filter-method=\"filterCommodityTypeHandler\" column-key=\"commodityType2\" :filter-multiple=\"false\">\r\n        <template v-slot=\"scope\">{{scope.row.commodityType | filter_commodityType}}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingNew.pdSubdivision')\" align=\"center\"\r\n                       prop=\"pdCls2\" :filters=\"filterCommodityBreakdown2\"\r\n                       :filter-method=\"filterCommodityBreakdownHandler\">\r\n        <template v-slot=\"scope\">{{scope.row.pdCls2 | filter_pdCls2}}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('i18nView.pdCode')\" align=\"center\"\r\n                       prop=\"pdCode\"></el-table-column>\r\n      <el-table-column :label=\"$t('i18nView.pdName')\" align=\"center\"\r\n                       prop=\"pdName\"></el-table-column>\r\n      <el-table-column :label=\"$t('customComponents.pdEdition')\" align=\"center\"\r\n                       prop=\"pdEdition\">\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('i18nView.defType')\" align=\"center\" prop=\"defType\" sortable>\r\n        <template v-slot=\"scope\">{{scope.row.defType | filter_pdAuditType}}{{scope.row.commodityType ==='P'? '套餐'\r\n          :''}}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingNew.testType')\" align=\"center\" prop=\"pdTestStatus\"\r\n                       sortable>\r\n        <template v-slot=\"scope\">{{scope.row.pdTestStatus | filter_Status}}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('productTestingNew.taskAssignmentDate')\" align=\"center\"\r\n                       prop=\"assignTime\" sortable>\r\n      </el-table-column>\r\n    </el-table>\r\n    <cus-pagination :pageSize=\"10\" :params=\"params1\" ref=\"page1\" url=\"/new-single-test/base/queryOwnTestTask\"\r\n                    v-model=\"configs2\"/>\r\n  </cus-wraper>\r\n</template>\r\n<script>\r\n\r\n  import {\r\n    initSelectPendingTask,\r\n    initSelectTestTask,\r\n    assignTestTask,\r\n    applyTestBatch\r\n  } from '@/api/pdtest/productTestingNew'\r\n  import { mapGetters } from 'vuex'\r\n\r\n  let _this\r\n  export default {\r\n    name: 'productTestingNew',\r\n    filters: {\r\n      filter_pdAuditType(code) {\r\n        return _this.getCodeName('pdAuditType', code, true)\r\n      }, filter_pdCls2(code) {\r\n        return '产品套餐' === code ? code : _this.getCodeName('ProductCategory', code, true)\r\n      },\r\n      filter_commodityType(code) {\r\n        return _this.commodityTypes[code]\r\n      },\r\n      filter_Status(code) {\r\n        return _this.testStatus[code]\r\n      }\r\n    },\r\n    data() {\r\n      _this = this\r\n      return {\r\n        commodityTypes: { 'R': '产品', 'P': '产品套餐' },\r\n        testStatus: { '0': '未测试', '1': '测试中' },\r\n        filterCommodityBreakdown: [],\r\n        filterCommodityBreakdown2: [],\r\n        commodityBreakdown: [],\r\n        props: {},\r\n        configs1: [],\r\n        configs2: [],\r\n        params: {\r\n          pdEdition: '',\r\n          times: '',\r\n          pdCode: '',\r\n          pdDetailType: '',\r\n          startDate: '',\r\n          endDate: ''\r\n        },\r\n        params1: {\r\n          pdEdition: '',\r\n          times: '',\r\n          pdCode: '',\r\n          pdDetailType: '',\r\n          startDate: '',\r\n          endDate: ''\r\n        },\r\n\r\n        selecteConfigs2: {},\r\n        pdinfoPendingTask: [],// 查询  产品 下拉选\r\n        pdEditionInfoPendingTask: [], //版别\r\n        pdEditionFilter: [], //版别\r\n        pdinfoTestTask: [],// 查询  产品 下拉选\r\n        pdEditionInfoTestTask: [], //版别\r\n        pdEditionFilterTestTask: [], //版别\r\n        //检验规则\r\n        rules: {}\r\n      }\r\n    },\r\n    computed: {\r\n      ...mapGetters([\r\n        'ldcodes'\r\n      ])\r\n    },\r\n    created() {\r\n      let commodityBreakdownTemp = this.ldcodes['ProductCategory']\r\n      commodityBreakdownTemp.forEach(data => {\r\n        this.commodityBreakdown.push({ 'text': data.codename, 'value': data.code })\r\n      })\r\n      // this.initSelectPendingTask()\r\n      // this.initSelecTestTask()\r\n    },\r\n    methods: {\r\n      filterTableChange(filters) {\r\n        if (filters['commodityType']) {\r\n          this.filterCommodityBreakdown = []\r\n          if (filters['commodityType'].length === 0) {\r\n            this.filterCommodityBreakdown = []\r\n          } else if (filters['commodityType'][0] === 'P') {\r\n            this.filterCommodityBreakdown.push({ 'text': '产品套餐', 'value': '产品套餐' })\r\n          } else if (filters['commodityType'][0] === 'R') {\r\n            this.filterCommodityBreakdown = this.commodityBreakdown\r\n          }\r\n        }\r\n        if (filters['commodityType2']) {\r\n          this.filterCommodityBreakdown2 = []\r\n          if (filters['commodityType2'].length === 0) {\r\n            this.filterCommodityBreakdown2 = []\r\n          } else if (filters['commodityType2'][0] === 'P') {\r\n            this.filterCommodityBreakdown2.push({ 'text': '产品套餐', 'value': '产品套餐' })\r\n          } else if (filters['commodityType2'][0] === 'R') {\r\n            this.filterCommodityBreakdown2 = this.commodityBreakdown\r\n          }\r\n        }\r\n      },\r\n      filterCommodityTypeHandler(value, row, column) {\r\n        const property = column['property']\r\n        return row[property] === value\r\n      },\r\n      filterCommodityBreakdownHandler(value, row, column) {\r\n        const property = column['property']\r\n        return row[property] === value\r\n      },\r\n      assignTask(row) {\r\n        this.confirmWarning('是否要认领当前任务?').then(() => {\r\n          let params = { 'taskId': row.taskId }\r\n          assignTestTask(this.buildRequestData(params)).then(res => {\r\n            this.notifySuccess('认领成功')\r\n            this.$refs.page.reload()\r\n            this.$refs.page1.reload()\r\n          })\r\n        })\r\n      },\r\n      searchpendingTask() {\r\n        if (this.params.times) {\r\n          this.params.startDate = this.params.times[0]\r\n          this.params.endDate = this.params.times[1]\r\n        } else {\r\n          this.params.startDate = ''\r\n          this.params.endDate = ''\r\n        }\r\n        this.$refs.page.reload()\r\n      },\r\n      searchTestTask() {\r\n        if (this.params1.times) {\r\n          this.params1.assignStartDate = this.params1.times[0]\r\n          this.params1.assignEndDate = this.params1.times[1]\r\n        } else {\r\n          this.params1.assignStartDate = ''\r\n          this.params1.assignEndDate = ''\r\n        }\r\n        this.$refs.page1.reload()\r\n      },\r\n      handleDetail(row) {\r\n        this.cacheJsonData('pdTestInfo', row)\r\n        applyTestBatch(this.buildRequestData({ 'testModule': 'new-single-test', 'productTestNewVo': row })).then(res => {\r\n          let pdTestInfoId = res.data\r\n          this.$router.push({ name: '新单测试详情', params: { pdTestId: pdTestInfoId } })\r\n          // this.$router.push({ path: \"/product-testing/new-single-test/detail\" , query:{pdTestId:pdTestInfoId}});\r\n        })\r\n      },\r\n      /*处于测试节点且未分配的任务 默认下拉选*/\r\n      initSelectPendingTask() {\r\n        initSelectPendingTask(this.buildRequestData({})).then(res => {\r\n          this.pdinfoPendingTask = []\r\n          this.pdEditionInfoPendingTask = []\r\n          for (const lis of res.data) {\r\n            let info = { code: '', name: '' }\r\n            info.code = lis.pdCode\r\n            info.name = lis.pdName\r\n            this.pdinfoPendingTask.push(info)\r\n            let edition = { code: '', edition: '' }\r\n            edition.code = lis.pdCode\r\n            edition.edition = lis.pdEdition\r\n            this.pdEditionInfoPendingTask.push(edition)\r\n          }\r\n        })\r\n      },\r\n      /*选择产品，控制版别*/\r\n      typePdSelect(val) {\r\n        this.pdEditionFilter = []\r\n        if (val) {\r\n          for (const valKey of this.pdEditionInfoPendingTask) {\r\n            if (val == valKey.code) {\r\n              let edition = { pdCode: '', pdEdition: '' }\r\n              edition.pdCode = valKey.code\r\n              edition.pdEdition = valKey.edition\r\n              this.pdEditionFilter.push(edition)\r\n            }\r\n          }\r\n          this.params.pdEdition = (this.pdEditionFilter[0].pdEdition)\r\n        }\r\n      },\r\n      /*改变细类 控制产品*/\r\n      pdDetailType(val) {\r\n        this.params.pdCode = ''\r\n        this.params.pdEdition = ''\r\n        this.pdinfoPendingTask = []\r\n        this.pdEditionInfoPendingTask = []\r\n        initSelectPendingTask(this.buildRequestData({ 'pdDetailType': val })).then(res => {\r\n          for (const lis of res.data) {\r\n            let info = { code: '', name: '' }\r\n            info.code = lis.pdCode\r\n            info.name = lis.pdName\r\n            this.pdinfoPendingTask.push(info)\r\n            let edition = { code: '', edition: '' }\r\n            edition.code = lis.pdCode\r\n            edition.edition = lis.pdEdition\r\n            this.pdEditionInfoPendingTask.push(edition)\r\n          }\r\n        })\r\n      },\r\n\r\n      /*处于测试节点且已配的任务 默认下拉选*/\r\n      initSelecTestTask() {\r\n        initSelectTestTask(this.buildRequestData({})).then(res => {\r\n          this.pdinfoTestTask = []\r\n          this.pdEditionInfoTestTask = []\r\n          for (const lis of res.data) {\r\n            let info = { code: '', name: '' }\r\n            info.code = lis.pdCode\r\n            info.name = lis.pdName\r\n            this.pdinfoTestTask.push(info)\r\n            let edition = { code: '', edition: '' }\r\n            edition.code = lis.pdCode\r\n            edition.edition = lis.pdEdition\r\n            this.pdEditionInfoTestTask.push(edition)\r\n          }\r\n        })\r\n      },\r\n      /*选择产品，控制版别*/\r\n      typeTestTask(val) {\r\n        this.pdEditionFilterTestTask = []\r\n        if (val) {\r\n          for (const valKey of this.pdEditionInfoTestTask) {\r\n            if (val == valKey.code) {\r\n              let edition = { pdCode: '', pdEdition: '' }\r\n              edition.pdCode = valKey.code\r\n              edition.pdEdition = valKey.edition\r\n              this.pdEditionFilterTestTask.push(edition)\r\n            }\r\n          }\r\n          this.params1.pdEdition = (this.pdEditionFilterTestTask[0].pdEdition)\r\n        }\r\n      },\r\n      /*改变细类 控制产品*/\r\n      pdDetailTypeTestTask(val) {\r\n        this.params1.pdCode = ''\r\n        this.params1.pdEdition = ''\r\n        this.pdinfoTestTask = []\r\n        this.pdEditionInfoTestTask = []\r\n        initSelectTestTask(this.buildRequestData({ 'pdDetailType': val })).then(res => {\r\n          for (const lis of res.data) {\r\n            let info = { code: '', name: '' }\r\n            info.code = lis.pdCode\r\n            info.name = lis.pdName\r\n            this.pdinfoTestTask.push(info)\r\n            let edition = { code: '', edition: '' }\r\n            edition.code = lis.pdCode\r\n            edition.edition = lis.pdEdition\r\n            this.pdEditionInfoTestTask.push(edition)\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n  }\r\n</script>\r\n\r\n\r\n"],"sourceRoot":"src/views/product-testing/new-single-test/main"}]}