{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\ibrms\\ruleManagement\\dynamicResult\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\ibrms\\ruleManagement\\dynamicResult\\index.vue","mtime":1609847106752},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1706753193796},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogImR5bmFtaWNSZXN1bHQiLA0KICBwcm9wczogWyJyZXN1bHREYXRhIiwicnVsZVR5cGUiLCJpc0NvbmRpdGlvbnMiXSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgcmVzdWx0OiBbXSwNCiAgICAgIGxhbmd1YWdlOiAiIiwNCiAgICAgIHJ1bGVNZXNzYWdlSW5mb0JvbTogW10sDQogICAgICBydWxlU3RhdGU6JycNCiAgICB9Ow0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcEdldHRlcnMoWyJydWxlTWVzc2FnZXMiXSkNCiAgfSwNCiAgY3JlYXRlZCgpIHsNCiAgICB0aGlzLmxhbmd1YWdlID0gdGhpcy4kc3RvcmUuc3RhdGUuYXBwLmxhbmd1YWdlOw0KICAgIHRoaXMucnVsZU1lc3NhZ2VJbmZvQm9tID0gdGhpcy4kc3RvcmUuc3RhdGUucnVsZU1lc3NhZ2UucnVsZU1lc3NhZ2VzOw0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHRoaXMucmVzdWx0ID0gdGhpcy5yZXN1bHREYXRhOw0KICAgIHRoaXMucnVsZU1lc3NhZ2UoKTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIHJ1bGVNZXNzYWdlKCkgew0KICAgICAgLy/pgJrov4fnsbvlnovliKTmlq0g5b2T5YmN57uT5p6c6L6T5YWl5piv5ZCm5pivIOinhOWImQ0KICAgICAgZm9yIChsZXQgciA9IDA7IHIgPCB0aGlzLnJlc3VsdC5sZW5ndGg7IHIrKykgew0KICAgICAgICAgIGxldCBsYW5nU3RyID0gdGhpcy5yZXN1bHRbcl0uY2FsY3VsYXRvcklmRGVzY3JpcHRpb247DQogICAgICAgICAgbGV0IGRlc0FyciA9IGxhbmdTdHIuc3BsaXQoIiwiKTsNCiAgICAgICAgICBsZXQgZGVzU3RyID0gIiI7DQogICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkZXNBcnIubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgICAgIGxldCBsYW5nS2V5ID0gKHRoaXMubGFuZ3VhZ2UgKyAiXyIgKyBkZXNBcnJbaV0pLnRvVXBwZXJDYXNlKCk7DQogICAgICAgICAgICBpZiAodGhpcy5ydWxlTWVzc2FnZUluZm9Cb21bbGFuZ0tleV0pIHsNCiAgICAgICAgICAgICAgZGVzU3RyICs9IHRoaXMucnVsZU1lc3NhZ2VJbmZvQm9tW2xhbmdLZXldOw0KICAgICAgICAgICAgfSBlbHNlIGlmIChkZXNBcnJbaV0gPT0gIiMiICkgew0KICAgICAgICAgICAgICBkZXNTdHIgKz0gIiwiOw0KICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgZGVzU3RyICs9IGRlc0FycltpXTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICBpZih0eXBlb2YgdGhpcy5yZXN1bHRbcl0uY2FsY3VsYXRvclRoZW5EZXNjcmlwdGlvbiAhPSAndW5kZWZpbmVkJyl7DQogICAgICAgICAgICBsZXQgbGFuZ1RoZW4gPSB0aGlzLnJlc3VsdFtyXS5jYWxjdWxhdG9yVGhlbkRlc2NyaXB0aW9uOw0KICAgICAgICAgICAgbGV0IHRoZW5BcnIgPSBsYW5nVGhlbi5zcGxpdCgiLCIpOw0KICAgICAgICAgICAgbGV0IHRoZW5TdHIgPSAiIjsNCiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhlbkFyci5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgICBsZXQgdGhlbmxhbmdLZXkgPSAodGhpcy5sYW5ndWFnZSArICJfIiArIHRoZW5BcnJbaV0pLnRvVXBwZXJDYXNlKCk7DQogICAgICAgICAgICAgIGlmICh0aGlzLnJ1bGVNZXNzYWdlSW5mb0JvbVt0aGVubGFuZ0tleV0pIHsNCiAgICAgICAgICAgICAgICB0aGVuU3RyICs9IHRoaXMucnVsZU1lc3NhZ2VJbmZvQm9tW3RoZW5sYW5nS2V5XTsNCiAgICAgICAgICAgICAgfSBlbHNlIGlmICh0aGVuQXJyW2ldID09ICIjIikgew0KICAgICAgICAgICAgICAgIHRoZW5TdHIgKz0gIiwiOw0KICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgIHRoZW5TdHIgKz0gdGhlbkFycltpXTsNCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgdGhpcy5yZXN1bHRbcl0uY2FsY3VsYXRvclRoZW5EZXNjcmlwdGlvbiA9IHRoZW5TdHI7DQogICAgICAgIH0NCiAgICAgICAgdGhpcy5yZXN1bHRbcl0uY2FsY3VsYXRvcklmRGVzY3JpcHRpb24gPSBkZXNTdHI7DQogICAgICAgIGlmKHRoaXMucnVsZVR5cGUgPT0gIjEiKXsNCiAgICAgICAgICAgIGlmKCB0aGlzLnJlc3VsdFtyXS5yZXN1bHQgPT0gIjEiKXsNCiAgICAgICAgICAgICAgICB0aGlzLnJlc3VsdFtyXS5yZXN1bHQgPSB0aGlzLiR0KCJkeW5hbWljUmVzdWx0LmNvcnJlY3QiKTsNCiAgICAgICAgICAgIH1lbHNlew0KICAgICAgICAgICAgICAgIHRoaXMucmVzdWx0W3JdLnJlc3VsdCA9IHRoaXMuJHQoImR5bmFtaWNSZXN1bHQuZXJyb3IiKTsNCg0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQoNCiAgICB9LA0KICAgIGdldE11bHRpbGluZ3VhbChrZXkpew0KCQkJCXZhciByZXN1bHQgPSBrZXk7DQoJCQkJaWYoa2V5ICYmIGtleSAhPT0nJyAmJiBrZXkgIT0gJ3VuZGVmaW5lZCcpew0KICAgICAgICAgIGxldCB2YWx1ZSA9ICIiOw0KICAgICAgICAgIGxldCB2YWx1ZUFyciA9IGtleS5zcGxpdCgiLCIpOw0KICAgICAgICAgIHZhbHVlQXJyLmZvckVhY2goZWxlbWVudCA9PiB7DQogICAgICAgICAgICB2YWx1ZSA9IHZhbHVlICt0aGlzLnJ1bGVNZXNzYWdlSW5mb0JvbVsodGhpcy5sYW5ndWFnZSsnXycrZWxlbWVudCkudG9VcHBlckNhc2UoKV07DQogICAgICAgICAgfSk7DQoJCQkJCXJlc3VsdCA9IHZhbHVlOw0KCQkJCX0NCgkJCQlyZXR1cm4gcmVzdWx0KyIgOiI7DQogICAgICB9LA0KICAgICAgZ2V0UmVzdWx0KHZhbCl7DQogICAgICAgIGxldCByZXN1bHQgPSB2YWw7DQogICAgICAgIGlmKHJlc3VsdCAmJiB0aGlzLmlzQ29uZGl0aW9ucyA9PSAnMScpew0KICAgICAgICAgICAgbGV0IHJlc3VsdEFycmF5ID0gW107DQogICAgICAgICAgICBsZXQgZGF0YT1KU09OLnBhcnNlKHZhbCk7DQogICAgICAgICAgICBsZXQgcGFyYW1BcnIgPSBkYXRhLnBhcmFtQXJyOw0KICAgICAgICAgICAgbGV0IHBhcmFtTGlzdCA9IGRhdGEucGFyYW1MaXN0Ow0KICAgICAgICAgICAgLy/nlJ/miJDlr7nlupRrZXkNCiAgICAgICAgICAgIGxldCBqc29uID0ge307DQogICAgICAgICAgICBmb3IobGV0IG4gPSAwOyBuIDwgcGFyYW1BcnIubGVuZ3RoOyBuKyspew0KICAgICAgICAgICAgICAgIGxldCBsYW5nU3RyID0gcGFyYW1BcnJbbl0ua2V5SWQ7DQogICAgICAgICAgICAgICAgbGV0IGNvbHVtbiA9IHBhcmFtQXJyW25dLmNvbHVtbjsNCiAgICAgICAgICAgICAgICBsZXQgZGVzQXJyID0gbGFuZ1N0ci5zcGxpdCgiLCIpOw0KICAgICAgICAgICAgICAgIGxldCBkZXNTdHIgPSAiIjsNCiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRlc0Fyci5sZW5ndGg7IGkrKykgew0KICAgICAgICAgICAgICAgICAgICBsZXQgbGFuZ0tleSA9ICh0aGlzLmxhbmd1YWdlICsgIl8iICsgZGVzQXJyW2ldKS50b1VwcGVyQ2FzZSgpOw0KICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5ydWxlTWVzc2FnZUluZm9Cb21bbGFuZ0tleV0pIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzU3RyICs9IHRoaXMucnVsZU1lc3NhZ2VJbmZvQm9tW2xhbmdLZXldOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmIChkZXNBcnJbaV0gPT0gIiMiICkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICBkZXNTdHIgKz0gIiwiOw0KICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgZGVzU3RyICs9IGRlc0FycltpXTsNCiAgICAgICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAganNvbltjb2x1bW5dPSBkZXNTdHINCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAvL+WkmuivreiogCDmm7/mjaINCiAgICAgICAgICAgICAgZm9yKGxldCBrID0gMDsgayA8IHBhcmFtTGlzdC5sZW5ndGg7IGsrKyl7DQogICAgICAgICAgICAgICAgICBsZXQgZGF0YUpzb24gPSB7fTsNCiAgICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBqc29uKSB7DQogICAgICAgICAgICAgICAgICAgICAgbGV0IHZhbCA9IHBhcmFtTGlzdFtrXVtrZXldOw0KICAgICAgICAgICAgICAgICAgICAgIGxldCBua2V5ID0ganNvbltrZXldOw0KICAgICAgICAgICAgICAgICAgICAgIGRhdGFKc29uW25rZXldID0gdmFsOw0KICAgICAgICAgICAgICAgICAgICAgIA0KICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIHJlc3VsdEFycmF5W3Jlc3VsdEFycmF5Lmxlbmd0aF0gPSBkYXRhSnNvbjsNCiAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICByZXN1bHQgPXJlc3VsdEFycmF5Ow0KICAgICAgICAgIH0gDQogICAgICAgICAgcmV0dXJuIHJlc3VsdDsNCiAgICAgIH0NCiAgfQ0KfTsNCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/ibrms/ruleManagement/dynamicResult","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"dynamicResult\">\r\n      <el-table :data=\"result\" border style=\"width: 100%\">\r\n        <el-table-column :label=\"$t('dynamicResult.currentRule')\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ scope.row.calculatorIfDescription }}</span>\r\n            <br />\r\n            <span>{{ scope.row.calculatorThenDescription }}</span>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column :label=\"$t('dynamicResult.currentRuleData')\">\r\n          <template slot-scope=\"scope\">\r\n            <div v-for=\"item in scope.row.paramVoList\">\r\n              <span>{{ getMultilingual(item.paramsDescription) }} {{ item.paramsData }}</span>\r\n              <br />\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column :label=\"$t('dynamicResult.ruleTestResult')\">\r\n          <template slot-scope=\"scope\">\r\n            <span>{{ getResult(scope.row.result) }}</span>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n    </div>\r\n  \r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"dynamicResult\",\r\n  props: [\"resultData\",\"ruleType\",\"isConditions\"],\r\n  data() {\r\n    return {\r\n      result: [],\r\n      language: \"\",\r\n      ruleMessageInfoBom: [],\r\n      ruleState:''\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"ruleMessages\"])\r\n  },\r\n  created() {\r\n    this.language = this.$store.state.app.language;\r\n    this.ruleMessageInfoBom = this.$store.state.ruleMessage.ruleMessages;\r\n  },\r\n  mounted() {\r\n    this.result = this.resultData;\r\n    this.ruleMessage();\r\n  },\r\n  methods: {\r\n    ruleMessage() {\r\n      //通过类型判断 当前结果输入是否是 规则\r\n      for (let r = 0; r < this.result.length; r++) {\r\n          let langStr = this.result[r].calculatorIfDescription;\r\n          let desArr = langStr.split(\",\");\r\n          let desStr = \"\";\r\n          for (let i = 0; i < desArr.length; i++) {\r\n            let langKey = (this.language + \"_\" + desArr[i]).toUpperCase();\r\n            if (this.ruleMessageInfoBom[langKey]) {\r\n              desStr += this.ruleMessageInfoBom[langKey];\r\n            } else if (desArr[i] == \"#\" ) {\r\n              desStr += \",\";\r\n            } else {\r\n              desStr += desArr[i];\r\n            }\r\n        }\r\n        if(typeof this.result[r].calculatorThenDescription != 'undefined'){\r\n            let langThen = this.result[r].calculatorThenDescription;\r\n            let thenArr = langThen.split(\",\");\r\n            let thenStr = \"\";\r\n            for (let i = 0; i < thenArr.length; i++) {\r\n              let thenlangKey = (this.language + \"_\" + thenArr[i]).toUpperCase();\r\n              if (this.ruleMessageInfoBom[thenlangKey]) {\r\n                thenStr += this.ruleMessageInfoBom[thenlangKey];\r\n              } else if (thenArr[i] == \"#\") {\r\n                thenStr += \",\";\r\n              } else {\r\n                thenStr += thenArr[i];\r\n              }\r\n            }\r\n            this.result[r].calculatorThenDescription = thenStr;\r\n        }\r\n        this.result[r].calculatorIfDescription = desStr;\r\n        if(this.ruleType == \"1\"){\r\n            if( this.result[r].result == \"1\"){\r\n                this.result[r].result = this.$t(\"dynamicResult.correct\");\r\n            }else{\r\n                this.result[r].result = this.$t(\"dynamicResult.error\");\r\n\r\n            }\r\n        }\r\n      }\r\n\r\n    },\r\n    getMultilingual(key){\r\n\t\t\t\tvar result = key;\r\n\t\t\t\tif(key && key !=='' && key != 'undefined'){\r\n          let value = \"\";\r\n          let valueArr = key.split(\",\");\r\n          valueArr.forEach(element => {\r\n            value = value +this.ruleMessageInfoBom[(this.language+'_'+element).toUpperCase()];\r\n          });\r\n\t\t\t\t\tresult = value;\r\n\t\t\t\t}\r\n\t\t\t\treturn result+\" :\";\r\n      },\r\n      getResult(val){\r\n        let result = val;\r\n        if(result && this.isConditions == '1'){\r\n            let resultArray = [];\r\n            let data=JSON.parse(val);\r\n            let paramArr = data.paramArr;\r\n            let paramList = data.paramList;\r\n            //生成对应key\r\n            let json = {};\r\n            for(let n = 0; n < paramArr.length; n++){\r\n                let langStr = paramArr[n].keyId;\r\n                let column = paramArr[n].column;\r\n                let desArr = langStr.split(\",\");\r\n                let desStr = \"\";\r\n                for (let i = 0; i < desArr.length; i++) {\r\n                    let langKey = (this.language + \"_\" + desArr[i]).toUpperCase();\r\n                    if (this.ruleMessageInfoBom[langKey]) {\r\n                          desStr += this.ruleMessageInfoBom[langKey];\r\n                        } else if (desArr[i] == \"#\" ) {\r\n                          desStr += \",\";\r\n                        } else {\r\n                          desStr += desArr[i];\r\n                        }\r\n                }\r\n                json[column]= desStr\r\n              }\r\n              //多语言 替换\r\n              for(let k = 0; k < paramList.length; k++){\r\n                  let dataJson = {};\r\n                  for (var key in json) {\r\n                      let val = paramList[k][key];\r\n                      let nkey = json[key];\r\n                      dataJson[nkey] = val;\r\n                      \r\n                  }\r\n                resultArray[resultArray.length] = dataJson;\r\n              }\r\n              result =resultArray;\r\n          } \r\n          return result;\r\n      }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n"]}]}