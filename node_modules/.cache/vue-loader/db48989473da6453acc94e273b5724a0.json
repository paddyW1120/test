{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\test\\draggable\\JsonDrawer.vue?vue&type=style&index=0&id=396a32e4&lang=scss&scoped=true&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\test\\draggable\\JsonDrawer.vue","mtime":1609847107204},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":1706753188288},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1706753191924},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\postcss-loader\\src\\index.js","mtime":1706753189537},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1706753187424},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KQGltcG9ydCAnQC9zdHlsZXMvbWl4aW4uc2Nzcyc7DQoNCjo6di1kZWVwIC5lbC1kcmF3ZXJfX2hlYWRlciB7DQogIGRpc3BsYXk6IG5vbmU7DQp9DQpAaW5jbHVkZSBhY3Rpb24tYmFyOw0KDQouanNvbi1lZGl0b3J7DQogIGhlaWdodDogY2FsYygxMDB2aCAtIDMzcHgpOw0KfQ0K"},{"version":3,"sources":["JsonDrawer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"JsonDrawer.vue","sourceRoot":"src/views/test/draggable","sourcesContent":["<template>\r\n  <div>\r\n    <el-drawer v-bind=\"$attrs\" v-on=\"$listeners\" @opened=\"onOpen\" @close=\"onClose\">\r\n      <div class=\"action-bar\" :style=\"{'text-align': 'left'}\">\r\n        <span class=\"bar-btn\" @click=\"refresh\">\r\n          <i class=\"el-icon-refresh\" />\r\n          {{$t('table.refresh')}}\r\n        </span>\r\n        <span ref=\"copyBtn\" class=\"bar-btn copy-json-btn\">\r\n          <i class=\"el-icon-document-copy\" />\r\n          {{$t('i18nView.copyJSON')}}\r\n        </span>\r\n        <span class=\"bar-btn\" @click=\"exportJsonFile\">\r\n          <i class=\"el-icon-download\" />\r\n          {{$t('i18nView.exportJSONFile')}}\r\n        </span>\r\n        <span class=\"bar-btn delete-btn\" @click=\"$emit('update:visible', false)\">\r\n          <i class=\"el-icon-circle-close\" />\r\n          {{$t('table.close')}}\r\n        </span>\r\n      </div>\r\n      <div id=\"editorJson\" class=\"json-editor\" />\r\n    </el-drawer>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { beautifierConf } from '@/utils/draggable/index'\r\nimport ClipboardJS from 'clipboard'\r\nimport { saveAs } from 'file-saver'\r\n\r\nimport loadBeautifier from '@/utils/draggable/loadBeautifier'\r\n\r\nimport * as monaco from 'monaco-editor';\r\nlet beautifier\r\n\r\nexport default {\r\n  components: {},\r\n  props: {\r\n    jsonStr: {\r\n      type: String,\r\n      required: true,\r\n      beautifier: null,\r\n      jsonEditor: null\r\n    }\r\n  },\r\n  data() {\r\n    return {}\r\n  },\r\n  computed: {},\r\n  watch: {},\r\n  created() {},\r\n  mounted() {\r\n    window.addEventListener('keydown', this.preventDefaultSave)\r\n    const clipboard = new ClipboardJS('.copy-json-btn', {\r\n      text: trigger => {\r\n        this.$notify({\r\n          title: '成功',\r\n          message: '代码已复制到剪切板，可粘贴。',\r\n          type: 'success'\r\n        })\r\n        return this.beautifierJson\r\n      }\r\n    })\r\n    clipboard.on('error', e => {\r\n      this.$message.error('代码复制失败')\r\n    })\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener('keydown', this.preventDefaultSave)\r\n  },\r\n  methods: {\r\n    preventDefaultSave(e) {\r\n      if (e.key === 's' && (e.metaKey || e.ctrlKey)) {\r\n        e.preventDefault()\r\n      }\r\n    },\r\n    onOpen() {\r\n      loadBeautifier(btf => {\r\n        beautifier = btf\r\n        this.beautifierJson = beautifier.js(this.jsonStr, beautifierConf.js)\r\n         this.setEditorValue('editorJson', this.beautifierJson)\r\n      })\r\n    },\r\n    onClose() {},\r\n    setEditorValue(id, codeStr) {\r\n      if (this.jsonEditor) {\r\n        this.jsonEditor.setValue(codeStr)\r\n      } else {\r\n        this.jsonEditor = monaco.editor.create(document.getElementById(id), {\r\n          value: codeStr,\r\n          theme: 'vs-dark',\r\n          language: 'json',\r\n          automaticLayout: true\r\n        })\r\n        // ctrl + s 刷新\r\n        this.jsonEditor.onKeyDown(e => {\r\n          if (e.keyCode === 49 && (e.metaKey || e.ctrlKey)) {\r\n            this.refresh()\r\n          }\r\n        })\r\n      }\r\n    },\r\n    exportJsonFile() {\r\n      this.$prompt('文件名:', '导出文件', {\r\n        inputValue: `${+new Date()}.json`,\r\n        closeOnClickModal: false,\r\n        inputPlaceholder: '请输入文件名'\r\n      }).then(({ value }) => {\r\n        if (!value) value = `${+new Date()}.json`\r\n        const codeStr = this.jsonEditor.getValue()\r\n        const blob = new Blob([codeStr], { type: 'text/plain;charset=utf-8' })\r\n        saveAs(blob, value)\r\n      })\r\n    },\r\n    refresh() {\r\n      try {\r\n        this.$emit('refresh', JSON.parse(this.jsonEditor.getValue()))\r\n      } catch (error) {\r\n        this.$notify({\r\n          title: '错误',\r\n          message: 'JSON格式错误，请检查',\r\n          type: 'error'\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '@/styles/mixin.scss';\r\n\r\n::v-deep .el-drawer__header {\r\n  display: none;\r\n}\r\n@include action-bar;\r\n\r\n.json-editor{\r\n  height: calc(100vh - 33px);\r\n}\r\n</style>\r\n"]}]}