{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\general-config\\gen-label-def\\index.vue?vue&type=style&index=0&id=cff9f2f8&lang=scss&scoped=true&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\general-config\\gen-label-def\\index.vue","mtime":1609847106715},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":1706753188288},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1706753191924},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\postcss-loader\\src\\index.js","mtime":1706753189537},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1706753187424},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KDQouZWwtdGFnICsgLmVsLXRhZyB7DQogIG1hcmdpbi1sZWZ0OiAxMHB4Ow0KfQ0KDQouYnV0dG9uLW5ldy10YWcgew0KICBtYXJnaW4tbGVmdDogNXB4Ow0KICBoZWlnaHQ6IDMycHg7DQogIGxpbmUtaGVpZ2h0OiAzMHB4Ow0KICBwYWRkaW5nLXRvcDogMDsNCiAgcGFkZGluZy1ib3R0b206IDA7DQp9DQoNCi5pbnB1dC1uZXctdGFnIHsNCiAgd2lkdGg6IDkwcHg7DQogIG1hcmdpbi1sZWZ0OiAxMHB4Ow0KICB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tOw0KfQ0KDQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4VA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/general-config/gen-label-def","sourcesContent":["<template>\r\n  <cus-wraper>\r\n\r\n\r\n    <cus-form-title :label=\"$t('pdgenlLabelDef.pageTitle')\"></cus-form-title>\r\n\r\n    <el-form label-width=\"auto\" ref=\"pdForm\" style=\"margin: 20px 0 0 0\">\r\n      <el-row :gutter=\"10\">\r\n        <el-col :span=\"6\">\r\n          <el-form-item :label=\"$t('rule.productDetailType')\" >\r\n            <cus-select v-model=\"params.pdCategory\" :codetype=\"'ProductCategory'\">\r\n            </cus-select>\r\n          </el-form-item>\r\n        </el-col>\r\n\r\n\r\n        <el-col :span=\"6\">\r\n          <el-form-item :label=\"$t('pdgenlLabelDef.labelAttribute')\" >\r\n            <cus-select v-model=\"params.labelAttribute\" :codetype=\"'label-attr'\">\r\n            </cus-select>\r\n          </el-form-item>\r\n        </el-col>\r\n\r\n\r\n        <el-col :span=\"6\">\r\n          <el-form-item :label=\"$t('pdgenlLabelDef.labelType')\" >\r\n            <cus-select v-model=\"params.labelType\" :codetype=\"'label-type'\">\r\n            </cus-select>\r\n          </el-form-item>\r\n        </el-col>\r\n\r\n        <cus-btn-wrapper>\r\n          <el-button v-waves type=\"primary\" @click=\"handleSearch\" class=\"filter-button\" icon=\"el-icon-search\">{{$t('table.search') }}</el-button>\r\n        </cus-btn-wrapper>\r\n      </el-row>\r\n    </el-form>\r\n\r\n\r\n    <cus-table-title :label=\"$t('pdgenlLabelDef.tableTitle')\"></cus-table-title>\r\n    <el-table :data=\"configs\" size=\"mini\" fit element-loading-text=\"Loading\" border highlight-current-row align=\"center\"\r\n              class=\"wraper-table\">>\r\n      <el-table-column :label=\"$t('table.select')\" align=\"center\" width=\"50\">\r\n        <template slot-scope=\"scope\">\r\n          <el-radio-group v-model=\"selectRow\">\r\n                  <span>\r\n                      <el-radio :label=\"scope.row\" @change=\"handleUpdate\">{{ '' }}</el-radio>\r\n                  </span>\r\n          </el-radio-group>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('table.id')\" prop=\"index\" align=\"center\" width=\"50\">\r\n        <template v-slot=\"scope\">\r\n          {{ initTableIndex('page', scope.$index) }}\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('rule.productDetailType')\" prop=\"pdCategory\" align=\"center\">\r\n        <template v-slot=\"scope\">{{ scope.row.pdCategory | filterPdCategory }}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('pdgenlLabelDef.labelAttribute')\" prop=\"labelAttribute\"\r\n                       align=\"center\">\r\n        <template v-slot=\"scope\">{{ scope.row.labelAttribute | filterLabelAttr }}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('pdgenlLabelDef.labelType')\" prop=\"labelType\" align=\"center\">\r\n        <template v-slot=\"scope\">{{ scope.row.labelType | filterLabelType }}</template>\r\n      </el-table-column>\r\n\r\n      <el-table-column :label=\"$t('pdgenlLabelDef.labelContents')\" align=\"center\" width=\"140px\">\r\n        <template slot-scope=\"scope\">\r\n          <el-popover v-if=\"scope.row.labelContents.length > 1\" placement=\"top\" trigger=\"hover\">\r\n            <el-tag v-for=\"item in scope.row.labelContents\" size=\"medium\">{{ item }}</el-tag>\r\n            <div slot=\"reference\" class=\"name-wrapper\">\r\n              <el-tag size=\"medium\">{{ scope.row.labelContents[0]}}...</el-tag>\r\n            </div>\r\n          </el-popover>\r\n          <el-tag v-if=\"scope.row.labelContents.length === 1\" size=\"medium\">{{ scope.row.labelContents[0]}}\r\n          </el-tag>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column :label=\"$t('pdgenlLabelDef.labelDesc')\" prop=\"labelDesc\" align=\"center\">\r\n      </el-table-column>\r\n\r\n      <el-table-column align=\"center\" :label=\"$t('table.actions')\" width=\"120px\" >\r\n        <template slot-scope=\"scope\">\r\n          <cus-del-btn v-auth=\"'pdgenl-label-def:delete'\" @ok=\"handleDelete(scope.row.id)\"/>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!-- 分页 -->\r\n    <cus-pagination ref=\"page\" url=\"/pdgenl-label-def/base/list\" :pageSize=\"5\" :params=\"params\" v-model=\"configs\"/>\r\n\r\n\r\n    <cus-form-title :label=\"$t('pdgenlLabelDef.labelDef')\" :display=\"showFlag\" :showArrow=\"true\" @show=\"showLabelDef\"></cus-form-title>\r\n\r\n    <el-form v-if=\"showFlag\" ref=\"formData\" :model=\"formData\" :rules=\"rules\" label-width=\"90px\" style=\"padding: 10px 20px\">\r\n      <cus-row>\r\n        <el-col :span=\"7\">\r\n          <el-form-item :label=\"$t('rule.productDetailType')\" prop=\"pdCategory\">\r\n            <cus-multi-select v-if=\"!updateFlag\" v-model=\"formData.pdCategory\"  :codetype=\"'ProductCategory'\">\r\n            </cus-multi-select>\r\n\r\n            <cus-select v-if=\"updateFlag\" v-model=\"formData.pdCategory\"  :codetype=\"'ProductCategory'\">\r\n            </cus-select>\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"7\">\r\n          <el-form-item :label=\"$t('pdgenlLabelDef.labelAttribute')\" prop=\"labelAttribute\">\r\n            <cus-select v-model=\"formData.labelAttribute\" :codetype=\"'label-attr'\">\r\n            </cus-select>\r\n          </el-form-item>\r\n        </el-col>\r\n        <el-col :span=\"7\">\r\n          <el-form-item :label=\"$t('pdgenlLabelDef.labelType')\" prop=\"labelType\">\r\n            <cus-select v-model=\"formData.labelType\" :codetype=\"'label-type'\"></cus-select>\r\n          </el-form-item>\r\n        </el-col>\r\n      </cus-row>\r\n\r\n\r\n      <cus-row>\r\n\r\n        <el-form-item :label=\"$t('pdgenlLabelDef.labelContents')\" >\r\n        <el-tag\r\n          style=\"margin-left: 5px;\"\r\n          :key=\"tag\"\r\n          v-for=\"tag in labelContents\"\r\n          closable\r\n          :disable-transitions=\"false\"\r\n          @close=\"handleClose(tag)\">\r\n          {{ tag }}\r\n        </el-tag>\r\n\r\n\r\n        <el-input\r\n          class=\"input-new-tag\"\r\n          v-if=\"inputVisible\"\r\n          v-model=\"inputValue\"\r\n          ref=\"saveTagInput\"\r\n          size=\"small\"\r\n          @keyup.enter.native=\"handleInputConfirm\"\r\n          @blur=\"handleInputConfirm\"\r\n        >\r\n        </el-input>\r\n        <el-button v-else class=\"button-new-tag\" icon=\"el-icon-plus\" type=\"primary\" size=\"small\" @click=\"showInput\">{{$t('pdgenlLabelDef.newTag')}}</el-button>\r\n        </el-form-item>\r\n      </cus-row>\r\n\r\n\r\n      <cus-row>\r\n         <cus-col >\r\n           <el-form-item :label=\"$t('pdgenlLabelDef.labelDesc')\">\r\n             <el-input v-model=\"formData.labelDesc\" :autosize=\"{ minRows: 3, maxRows:6}\" maxlength=\"100\"\r\n                       :placeholder=\"$t('form.please_enter')\" show-word-limit\r\n                       type=\"textarea\"></el-input>\r\n           </el-form-item>\r\n         </cus-col>\r\n      </cus-row>\r\n\r\n\r\n      <el-form-item align=\"right\">\r\n        <el-button v-if=\"!updateFlag\" v-auth=\"'pdgenl-label-def:add'\" icon=\"el-icon-success\"\r\n                   size=\"small\" type=\"primary\" @click=\"handleCreate()\">\r\n          {{ $t('table.save') }}\r\n        </el-button>\r\n        <el-button v-if=\"updateFlag\" v-auth=\"'pdgenl-label-def:update'\" icon=\"el-icon-success\"\r\n                   size=\"small\" type=\"primary\" @click=\"handleCreate()\">\r\n          {{ $t('table.update') }}\r\n        </el-button>\r\n        <el-button icon=\"el-icon-refresh\" size=\"small\" type=\"primary\" @click=\"clearAll\">\r\n          {{ $t('table.refresh') }}\r\n        </el-button>\r\n      </el-form-item>\r\n\r\n    </el-form>\r\n\r\n  </cus-wraper>\r\n</template>\r\n<script>\r\n\r\nimport {\r\n  addPdgenlLabelDef,\r\n  deletePdgenlLabelDef,\r\n  updatePdgenlLabelDef,\r\n  queryLabelContent\r\n} from '@/api/common/pdgenllabeldef'\r\nlet _this\r\nexport default {\r\n  name: 'pdgenlLabelDef',\r\n  filters: {\r\n    filterPdCategory(code) {\r\n        return _this.getCodeName('ProductCategory', code);\r\n    },\r\n    filterLabelAttr(code) {\r\n        return _this.getCodeName('label-attr', code);\r\n    },\r\n    filterLabelType(code) {\r\n        return _this.getCodeName('label-type', code);\r\n    },\r\n  },\r\n  data() {\r\n    _this = this\r\n    return {\r\n      //表格数据\r\n      configs: [],\r\n      //查询参数\r\n      params: {\r\n        pdCategory: '',\r\n        labelAttribute: '',\r\n        labelType: '',\r\n      },\r\n      updateFlag: false,\r\n      showFlag: false,\r\n      selectRow: {},\r\n      formData: {  //表单数据与后端实体类对应\r\n        id: '', //主键ID\r\n        pdCategory: [], //\r\n        labelAttribute: '', //\r\n        labelType: '', //\r\n        labelDesc: '' //\r\n      },\r\n      labelContents: [],\r\n      inputVisible: false,\r\n      inputValue: '',\r\n      //检验规则\r\n      rules: {\r\n        pdCategory: [\r\n          {\r\n            required: true,\r\n            message: this.$t('form.please_select') + this.$t('pdgenlLabelDef.pdCategory'),\r\n            trigger: 'blur'\r\n          }\r\n        ], labelAttribute: [\r\n          {\r\n            required: true,\r\n            message: this.$t('form.please_select') + this.$t('pdgenlLabelDef.labelAttribute'),\r\n            trigger: 'blur'\r\n          }\r\n        ], labelType: [\r\n          {\r\n            required: true,\r\n            message: this.$t('form.please_select') + this.$t('pdgenlLabelDef.labelType'),\r\n            trigger: 'blur'\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  computed: {},\r\n  created() {\r\n  },\r\n  methods: {\r\n    handleSearch() {\r\n      this.$refs.page.reload()\r\n    },\r\n    handleUpdate() {\r\n      this.formData = Object.assign({}, this.selectRow)\r\n      this.labelContents = this.selectRow.labelContents\r\n      this.showLabelDef()\r\n    },\r\n    showLabelDef(){\r\n      this.showFlag = !this.showFlag\r\n    },\r\n    handleDelete(id) {\r\n      deletePdgenlLabelDef(id).then(response => {\r\n        this.handleSearch()\r\n        this.notifySuccess(this.$t('successMessage.delete'))\r\n      })\r\n    },\r\n    handleCreate() {\r\n      this.$refs.formData.validate(valid => {\r\n        if (valid) {\r\n          if (this.labelContents.length > 0){\r\n            let back\r\n            //组装Data\r\n            let labelContentsArray = []\r\n            this.labelContents.forEach(s => labelContentsArray.push({\"labelContent\": s}))\r\n            let data\r\n            if (this.formData.id) {\r\n              data = { labelDef: this.formData ,labelContents: labelContentsArray }\r\n              back = updatePdgenlLabelDef(this.buildRequestData(data))\r\n            } else {\r\n              let labelDefs = []\r\n              this.formData.pdCategory.forEach(str =>{\r\n                  let labelDef = Object.assign({}, this.formData)\r\n                  labelDef.pdCategory = str\r\n                  labelDefs.push(labelDef)\r\n              })\r\n              data = { labelDefs: labelDefs ,labelContents: labelContentsArray }\r\n              back = addPdgenlLabelDef(this.buildRequestData(data))\r\n            }\r\n            back.then(response => {\r\n              this.handleSearch()\r\n              this.clearAll()\r\n              this.notifySuccess(this.$t('successMessage.submit'))\r\n            })\r\n          }else {\r\n            this.notifyError(this.$t('pdgenlLabelDef.newTagAddTip'))\r\n          }\r\n        }\r\n      })\r\n    },\r\n    handleClose(tag) {\r\n      this.labelContents.splice(this.labelContents.indexOf(tag), 1)\r\n    },\r\n\r\n    showInput() {\r\n      this.inputVisible = true\r\n      this.$nextTick(_ => {\r\n        this.$refs.saveTagInput.$refs.input.focus()\r\n      })\r\n    },\r\n\r\n    handleInputConfirm() {\r\n      let inputValue = this.inputValue\r\n      if (inputValue) {\r\n        if (this._.indexOf(this.labelContents,inputValue.trim()) === -1){\r\n          this.labelContents.push(inputValue.trim())\r\n          this.inputVisible = false\r\n          this.inputValue = ''\r\n        }else {\r\n            this.notifyWarning(this.$t('pdgenlLabelDef.newTagTip'))\r\n        }\r\n\r\n      }\r\n\r\n    },\r\n    clearAll(){\r\n        this.updateFlag = false\r\n        this.labelContents = []\r\n        this.selectRow = {}\r\n        this.resetForm()\r\n    },\r\n    resetForm() {\r\n      this.formData = {  //表单数据与后端实体类对应\r\n        id: '',\r\n        pdCategory: [],\r\n        labelAttribute: '',\r\n        labelType: '',\r\n        labelDesc: ''\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n.el-tag + .el-tag {\r\n  margin-left: 10px;\r\n}\r\n\r\n.button-new-tag {\r\n  margin-left: 5px;\r\n  height: 32px;\r\n  line-height: 30px;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n}\r\n\r\n.input-new-tag {\r\n  width: 90px;\r\n  margin-left: 10px;\r\n  vertical-align: bottom;\r\n}\r\n\r\n</style>\r\n"]}]}