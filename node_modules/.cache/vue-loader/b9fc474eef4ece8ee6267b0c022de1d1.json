{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\test\\draggable\\RightPanel.vue?vue&type=style&index=0&id=26736c5d&lang=scss&scoped=true&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\test\\draggable\\RightPanel.vue","mtime":1609847107205},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":1706753188288},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1706753191924},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\postcss-loader\\src\\index.js","mtime":1706753189537},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1706753187424},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucmlnaHQtYm9hcmQgewogIHdpZHRoOiAzNTBweDsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgcmlnaHQ6IDA7CiAgdG9wOiAwOwogIHBhZGRpbmctdG9wOiAzcHg7CiAgLmZpZWxkLWJveCB7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA0MnB4KTsKICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICBvdmVyZmxvdzogaGlkZGVuOwogIH0KICAuZWwtc2Nyb2xsYmFyIHsKICAgIGhlaWdodDogMTAwJTsKICB9Cn0KLnNlbGVjdC1pdGVtIHsKICBkaXNwbGF5OiBmbGV4OwogIGJvcmRlcjogMXB4IGRhc2hlZCAjZmZmOwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgJiAuY2xvc2UtYnRuIHsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIGNvbG9yOiAjZjU2YzZjOwogIH0KICAmIC5lbC1pbnB1dCArIC5lbC1pbnB1dCB7CiAgICBtYXJnaW4tbGVmdDogNHB4OwogIH0KfQouc2VsZWN0LWl0ZW0gKyAuc2VsZWN0LWl0ZW0gewogIG1hcmdpbi10b3A6IDRweDsKfQouc2VsZWN0LWl0ZW0uc29ydGFibGUtY2hvc2VuIHsKICBib3JkZXI6IDFweCBkYXNoZWQgIzQwOWVmZjsKfQouc2VsZWN0LWxpbmUtaWNvbiB7CiAgbGluZS1oZWlnaHQ6IDMycHg7CiAgZm9udC1zaXplOiAyMnB4OwogIHBhZGRpbmc6IDAgNHB4OwogIGNvbG9yOiAjNzc3Owp9Ci5vcHRpb24tZHJhZyB7CiAgY3Vyc29yOiBtb3ZlOwp9Ci50aW1lLXJhbmdlIHsKICAuZWwtZGF0ZS1lZGl0b3IgewogICAgd2lkdGg6IDIyN3B4OwogIH0KICA6OnYtZGVlcCAuZWwtaWNvbi10aW1lIHsKICAgIGRpc3BsYXk6IG5vbmU7CiAgfQp9Ci5kb2N1bWVudC1saW5rIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgZGlzcGxheTogYmxvY2s7CiAgd2lkdGg6IDI2cHg7CiAgaGVpZ2h0OiAyNnB4OwogIHRvcDogMDsKICBsZWZ0OiAwOwogIGN1cnNvcjogcG9pbnRlcjsKICBiYWNrZ3JvdW5kOiAjNDA5ZWZmOwogIHotaW5kZXg6IDE7CiAgYm9yZGVyLXJhZGl1czogMCAwIDZweCAwOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBsaW5lLWhlaWdodDogMjZweDsKICBjb2xvcjogI2ZmZjsKICBmb250LXNpemU6IDE4cHg7Cn0KLm5vZGUtbGFiZWx7CiAgZm9udC1zaXplOiAxNHB4Owp9Ci5ub2RlLWljb257CiAgY29sb3I6ICNiZWJmYzM7Cn0K"},{"version":3,"sources":["RightPanel.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RightPanel.vue","sourceRoot":"src/views/test/draggable","sourcesContent":["<template>\r\n  <div class=\"right-board\">\r\n    <el-tabs v-model=\"currentTab\" class=\"center-tabs\">\r\n      <el-tab-pane :label=\"$t('route.components')\" name=\"field\" />\r\n    </el-tabs>\r\n    <div class=\"field-box\">\r\n      <el-scrollbar class=\"right-scrollbar\">\r\n        <!-- 组件属性 -->\r\n        <el-form v-show=\"currentTab==='field' && showField\" size=\"small\" label-width=\"90px\">\r\n          <el-form-item v-if=\"activeData.label!==undefined\" :label=\"$t('table.title')\">\r\n            <el-input v-model=\"activeData.label\" :placeholder=\"$t('i18nView.pleaseInputTitle')\" readonly />\r\n          </el-form-item>\r\n\r\n          <el-form-item v-if=\"activeData.style&&activeData.style.width!==undefined\" :label=\"$t('i18nView.componentWidth')\">\r\n            <el-input v-model=\"activeData.style.width\" :placeholder=\"$t('i18nView.pleaseInputLayoutWidth')\" clearable />\r\n          </el-form-item>\r\n          <el-form-item v-if=\"activeData.vModel!==undefined\" :label=\"$t('i18nView.defaultValue')\">\r\n            <el-input\r\n              :value=\"setDefaultValue(activeData.config.defaultValue)\"\r\n              :placeholder=\"$t('i18nView.pleaseInputDefaultValue')\"\r\n              @input=\"onDefaultValueInput\"\r\n            />\r\n          </el-form-item>\r\n\r\n\r\n          <el-form-item v-if=\"activeData.config.tag === 'el-input'\" :label=\"$t('i18nView.maxInput')\">\r\n            <el-input v-model=\"activeData.maxlength\" :placeholder=\"$t('i18nView.selectPlaceholder')\">\r\n              <template slot=\"append\">\r\n                {{$t('i18nView.aChar')}}\r\n              </template>\r\n            </el-input>\r\n          </el-form-item>\r\n\r\n          <el-form-item v-if=\"activeData.autosize !== undefined\" :label=\"$t('i18nView.minLine')\">\r\n            <el-input-number v-model=\"activeData.autosize.minRows\" :min=\"1\" :placeholder=\"$t('i18nView.minLine')\" />\r\n          </el-form-item>\r\n          <el-form-item v-if=\"activeData.autosize !== undefined\" :label=\"$t('i18nView.maxLine')\">\r\n            <el-input-number v-model=\"activeData.autosize.maxRows\" :min=\"1\" :placeholder=\"$t('i18nView.maxLine')\" />\r\n          </el-form-item>\r\n\r\n          <el-form-item\r\n            v-if=\"activeData.type !== undefined && 'el-date-picker' === activeData.config.tag\"\r\n            :label=\"$t('i18nView.timeType')\"\r\n          >\r\n            <el-select\r\n              v-model=\"activeData.type\"\r\n              :placeholder=\"$t('i18nView.pleaseSelectTimeType')\"\r\n              :style=\"{ width: '100%' }\"\r\n              @change=\"dateTypeChange\"\r\n            >\r\n              <el-option\r\n                v-for=\"(item, index) in dateOptions\"\r\n                :key=\"index\"\r\n                :label=\"item.label\"\r\n                :value=\"item.value\"\r\n              />\r\n            </el-select>\r\n          </el-form-item>\r\n\r\n          <el-form-item v-if=\"activeData.format !== undefined\" :label=\"$t('i18nView.timeType')\">\r\n            <el-input\r\n              :value=\"activeData.format\"\r\n              :placeholder=\"$t('i18nView.pleaseSelectTypeFormat')\"\r\n              @input=\"setTimeValue($event)\"\r\n            />\r\n          </el-form-item>\r\n          <template v-if=\"['el-checkbox-group', 'el-radio-group', 'el-select'].indexOf(activeData.config.tag) > -1\">\r\n            <el-divider>{{$t('i18nView.option')}}</el-divider>\r\n            <draggable\r\n              :list=\"activeData.slot.options\"\r\n              :animation=\"340\"\r\n              group=\"selectItem\"\r\n              handle=\".option-drag\"\r\n            >\r\n              <div v-for=\"(item, index) in activeData.slot.options\" :key=\"index\" class=\"select-item\">\r\n                <div class=\"select-line-icon option-drag\">\r\n                  <i class=\"el-icon-s-operation\" />\r\n                </div>\r\n                <el-input v-model=\"item.label\" :placeholder=\"$t('i18nView.optionName')\" size=\"small\" />\r\n                <el-input\r\n                  :placeholder=\"$t('i18nView.optionValue')\"\r\n                  size=\"small\"\r\n                  :value=\"item.value\"\r\n                  @input=\"setOptionValue(item, $event)\"\r\n                />\r\n                <div class=\"close-btn select-line-icon\" @click=\"activeData.slot.options.splice(index, 1)\">\r\n                  <i class=\"el-icon-remove-outline\" />\r\n                </div>\r\n              </div>\r\n            </draggable>\r\n            <div style=\"margin-left: 20px;\">\r\n              <el-button  size=\"small\"\r\n                style=\"padding-bottom: 0\"\r\n                icon=\"el-icon-circle-plus-outline\"\r\n                type=\"text\"\r\n                @click=\"addSelectItem\"\r\n              >{{$t('i18nView.addOption')}}\r\n              </el-button>\r\n            </div>\r\n            <el-divider />\r\n          </template>\r\n\r\n          <el-form-item v-if=\"activeData['show-word-limit'] !== undefined\" :label=\"$t('i18nView.inputstatistics')\">\r\n            <el-switch v-model=\"activeData['show-word-limit']\" />\r\n          </el-form-item>\r\n\r\n          <el-form-item v-if=\"activeData.readonly !== undefined && activeData.config.tag === 'el-input'\" :label=\"$t('i18nView.isOnlyRead')\">\r\n            <el-switch v-model=\"activeData.readonly\" />\r\n          </el-form-item>\r\n          <el-form-item v-if=\"activeData.disabled !== undefined\" :label=\"$t('i18nView.isBan')\">\r\n            <el-switch v-model=\"activeData.disabled\" />\r\n          </el-form-item>\r\n\r\n          <el-form-item v-if=\"activeData.config.tag === 'el-select'\" :label=\"$t('i18nView.isMoreSelect')\">\r\n            <el-switch v-model=\"activeData.multiple\" @change=\"multipleChange\" />\r\n          </el-form-item>\r\n          <el-form-item v-if=\"activeData.config.required !== undefined\" :label=\"$t('i18nView.isMustFill')\">\r\n            <el-switch v-model=\"activeData.config.required\" />\r\n          </el-form-item>\r\n\r\n          <template v-if=\"activeData.config.layout === 'colFormItem'\">\r\n            <el-divider>{{$t('i18nView.regularCheck')}}</el-divider>\r\n            <div\r\n              v-for=\"(item, index) in activeData.config.regList\"\r\n              :key=\"index\"\r\n              class=\"reg-item\"\r\n            >\r\n              <span class=\"close-btn\" @click=\"activeData.config.regList.splice(index, 1)\">\r\n                <i class=\"el-icon-close\" />\r\n              </span>\r\n              <el-form-item :label=\"$t('i18nView.expression')\">\r\n                <el-input v-model=\"item.pattern\" :placeholder=\"$t('i18nView.pleaseInputRegular')\" />\r\n              </el-form-item>\r\n              <el-form-item :label=\"$t('i18nView.Error')\" style=\"margin-bottom:0\">\r\n                <el-input v-model=\"item.message\" :placeholder=\"$t('i18nView.pleaseInputError')\" />\r\n              </el-form-item>\r\n            </div>\r\n            <div style=\"margin-left: 20px\">\r\n              <el-button  size=\"small\" icon=\"el-icon-circle-plus-outline\" type=\"text\" @click=\"addReg\">\r\n                :placeholder=\"$t('pdPreservation.addRules')\"\r\n              </el-button>\r\n            </div>\r\n          </template>\r\n        </el-form>\r\n      </el-scrollbar>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { isArray } from 'util'\r\n  import { isNumberStr } from '@/utils/draggable/index'\r\n\r\n  const dateTimeFormat = {\r\n    date: 'yyyy-MM-dd',\r\n    week: 'yyyy 第 WW 周',\r\n    month: 'yyyy-MM',\r\n    year: 'yyyy',\r\n    datetime: 'yyyy-MM-dd HH:mm:ss',\r\n    daterange: 'yyyy-MM-dd',\r\n    monthrange: 'yyyy-MM',\r\n    datetimerange: 'yyyy-MM-dd HH:mm:ss'\r\n  }\r\n\r\n  export default {\r\n    props: ['showField', 'activeData', 'formConf'],\r\n    data() {\r\n      return {\r\n        currentTab: 'field',\r\n        currentNode: null,\r\n        dialogVisible: false,\r\n        iconsVisible: false,\r\n        currentIconModel: null,\r\n        dateTypeOptions: [\r\n          {\r\n            label: '日(date)',\r\n            value: 'date'\r\n          },\r\n          {\r\n            label: '周(week)',\r\n            value: 'week'\r\n          },\r\n          {\r\n            label: '月(month)',\r\n            value: 'month'\r\n          },\r\n          {\r\n            label: '年(year)',\r\n            value: 'year'\r\n          },\r\n          {\r\n            label: '日期时间(datetime)',\r\n            value: 'datetime'\r\n          }\r\n        ],\r\n        dateRangeTypeOptions: [\r\n          {\r\n            label: '日期范围(daterange)',\r\n            value: 'daterange'\r\n          },\r\n          {\r\n            label: '月范围(monthrange)',\r\n            value: 'monthrange'\r\n          },\r\n          {\r\n            label: '日期时间范围(datetimerange)',\r\n            value: 'datetimerange'\r\n          }\r\n        ],\r\n        colorFormatOptions: [\r\n          {\r\n            label: 'hex',\r\n            value: 'hex'\r\n          },\r\n          {\r\n            label: 'rgb',\r\n            value: 'rgb'\r\n          },\r\n          {\r\n            label: 'rgba',\r\n            value: 'rgba'\r\n          },\r\n          {\r\n            label: 'hsv',\r\n            value: 'hsv'\r\n          },\r\n          {\r\n            label: 'hsl',\r\n            value: 'hsl'\r\n          }\r\n        ],\r\n        justifyOptions: [\r\n          {\r\n            label: 'start',\r\n            value: 'start'\r\n          },\r\n          {\r\n            label: 'end',\r\n            value: 'end'\r\n          },\r\n          {\r\n            label: 'center',\r\n            value: 'center'\r\n          },\r\n          {\r\n            label: 'space-around',\r\n            value: 'space-around'\r\n          },\r\n          {\r\n            label: 'space-between',\r\n            value: 'space-between'\r\n          }\r\n        ],\r\n        layoutTreeProps: {\r\n          label(data, node) {\r\n            const config = data.config\r\n            return data.componentName || `${config.label}: ${data.__vModel__}`\r\n          }\r\n        }\r\n      }\r\n    },\r\n    created() {\r\n      console.log(this.showField)\r\n    },\r\n    computed: {\r\n      dateOptions() {\r\n        if (\r\n          this.activeData.type !== undefined\r\n          && this.activeData.config.tag === 'el-date-picker'\r\n        ) {\r\n          if (this.activeData['start-placeholder'] === undefined) {\r\n            return this.dateTypeOptions\r\n          }\r\n          return this.dateRangeTypeOptions\r\n        }\r\n        return []\r\n      },\r\n      activeTag() {\r\n        return this.activeData.config.tag\r\n      }\r\n    },\r\n    methods: {\r\n      addReg() {\r\n        this.activeData.config.regList.push({\r\n          pattern: '',\r\n          message: ''\r\n        })\r\n      },\r\n      addSelectItem() {\r\n        this.activeData.slot.options.push({\r\n          label: '',\r\n          value: ''\r\n        })\r\n      },\r\n      addTreeItem() {\r\n        ++this.idGlobal\r\n        this.dialogVisible = true\r\n        this.currentNode = this.activeData.options\r\n      },\r\n      renderContent(h, { node, data, store }) {\r\n        return (\r\n          <div class=\"custom-tree-node\">\r\n            <span>{node.label}</span>\r\n            <span class=\"node-operation\">\r\n            <i on-click={() => this.append(data)}\r\n               class=\"el-icon-plus\"\r\n               title=\"添加\"\r\n            ></i>\r\n            <i on-click={() => this.remove(node, data)}\r\n               class=\"el-icon-delete\"\r\n               title=\"删除\"\r\n            ></i>\r\n          </span>\r\n          </div>\r\n        )\r\n      },\r\n      append(data) {\r\n        if (!data.children) {\r\n          this.$set(data, 'children', [])\r\n        }\r\n        this.dialogVisible = true\r\n        this.currentNode = data.children\r\n      },\r\n      remove(node, data) {\r\n        this.activeData.config.defaultValue = [] // 避免删除时报错\r\n        const { parent } = node\r\n        const children = parent.data.children || parent.data\r\n        const index = children.findIndex(d => d.id === data.id)\r\n        children.splice(index, 1)\r\n      },\r\n      addNode(data) {\r\n        this.currentNode.push(data)\r\n      },\r\n      setOptionValue(item, val) {\r\n        item.value = isNumberStr(val) ? +val : val\r\n      },\r\n      setDefaultValue(val) {\r\n        if (Array.isArray(val)) {\r\n          return val.join(',')\r\n        }\r\n        // if (['string', 'number'].indexOf(typeof val) > -1) {\r\n        //   return val\r\n        // }\r\n        if (typeof val === 'boolean') {\r\n          return `${val}`\r\n        }\r\n        return val\r\n      },\r\n      onDefaultValueInput(str) {\r\n        if (isArray(this.activeData.config.defaultValue)) {\r\n          // 数组\r\n          this.$set(\r\n            this.activeData.config,\r\n            'defaultValue',\r\n            str.split(',').map(val => (isNumberStr(val) ? +val : val))\r\n          )\r\n        } else if (['true', 'false'].indexOf(str) > -1) {\r\n          // 布尔\r\n          this.$set(this.activeData.config, 'defaultValue', JSON.parse(str))\r\n        } else {\r\n          // 字符串和数字\r\n          this.$set(\r\n            this.activeData.config,\r\n            'defaultValue',\r\n            isNumberStr(str) ? +str : str\r\n          )\r\n        }\r\n      },\r\n      onSwitchValueInput(val, name) {\r\n        if (['true', 'false'].indexOf(val) > -1) {\r\n          this.$set(this.activeData, name, JSON.parse(val))\r\n        } else {\r\n          this.$set(this.activeData, name, isNumberStr(val) ? +val : val)\r\n        }\r\n      },\r\n      setTimeValue(val, type) {\r\n        const valueFormat = type === 'week' ? dateTimeFormat.date : val\r\n        this.$set(this.activeData.config, 'defaultValue', null)\r\n        this.$set(this.activeData, 'value-format', valueFormat)\r\n        this.$set(this.activeData, 'format', val)\r\n      },\r\n      spanChange(val) {\r\n        this.formConf.span = val\r\n      },\r\n      multipleChange(val) {\r\n        this.$set(this.activeData.config, 'defaultValue', val ? [] : '')\r\n      },\r\n      dateTypeChange(val) {\r\n        this.setTimeValue(dateTimeFormat[val], val)\r\n      },\r\n      rangeChange(val) {\r\n        this.$set(\r\n          this.activeData.config,\r\n          'defaultValue',\r\n          val ? [this.activeData.min, this.activeData.max] : this.activeData.min\r\n        )\r\n      },\r\n      rateTextChange(val) {\r\n        if (val) this.activeData['show-score'] = false\r\n      },\r\n      rateScoreChange(val) {\r\n        if (val) this.activeData['show-text'] = false\r\n      },\r\n      colorFormatChange(val) {\r\n        this.activeData.config.defaultValue = null\r\n        this.activeData['show-alpha'] = val.indexOf('a') > -1\r\n        this.activeData.config.renderKey = +new Date() // 更新renderKey,重新渲染该组件\r\n      },\r\n      openIconsDialog(model) {\r\n        this.iconsVisible = true\r\n        this.currentIconModel = model\r\n      },\r\n      setIcon(val) {\r\n        this.activeData[this.currentIconModel] = val\r\n      },\r\n      tagChange(tagIcon) {\r\n        let target = inputComponents.find(item => item.config.tagIcon === tagIcon)\r\n        if (!target) target = selectComponents.find(item => item.config.tagIcon === tagIcon)\r\n        this.$emit('tag-change', target)\r\n      },\r\n      changeRenderKey() {\r\n        this.activeData.config.renderKey = +new Date()\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  .right-board {\r\n    width: 350px;\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    padding-top: 3px;\r\n    .field-box {\r\n      position: relative;\r\n      height: calc(100vh - 42px);\r\n      box-sizing: border-box;\r\n      overflow: hidden;\r\n    }\r\n    .el-scrollbar {\r\n      height: 100%;\r\n    }\r\n  }\r\n  .select-item {\r\n    display: flex;\r\n    border: 1px dashed #fff;\r\n    box-sizing: border-box;\r\n    & .close-btn {\r\n      cursor: pointer;\r\n      color: #f56c6c;\r\n    }\r\n    & .el-input + .el-input {\r\n      margin-left: 4px;\r\n    }\r\n  }\r\n  .select-item + .select-item {\r\n    margin-top: 4px;\r\n  }\r\n  .select-item.sortable-chosen {\r\n    border: 1px dashed #409eff;\r\n  }\r\n  .select-line-icon {\r\n    line-height: 32px;\r\n    font-size: 22px;\r\n    padding: 0 4px;\r\n    color: #777;\r\n  }\r\n  .option-drag {\r\n    cursor: move;\r\n  }\r\n  .time-range {\r\n    .el-date-editor {\r\n      width: 227px;\r\n    }\r\n    ::v-deep .el-icon-time {\r\n      display: none;\r\n    }\r\n  }\r\n  .document-link {\r\n    position: absolute;\r\n    display: block;\r\n    width: 26px;\r\n    height: 26px;\r\n    top: 0;\r\n    left: 0;\r\n    cursor: pointer;\r\n    background: #409eff;\r\n    z-index: 1;\r\n    border-radius: 0 0 6px 0;\r\n    text-align: center;\r\n    line-height: 26px;\r\n    color: #fff;\r\n    font-size: 18px;\r\n  }\r\n  .node-label{\r\n    font-size: 14px;\r\n  }\r\n  .node-icon{\r\n    color: #bebfc3;\r\n  }\r\n</style>\r\n"]}]}