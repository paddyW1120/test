{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\components\\ThemePicker\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\components\\ThemePicker\\index.vue","mtime":1609847106309},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1706753193796},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmNvbnN0IHZlcnNpb24gPSByZXF1aXJlKCdlbGVtZW50LXVpL3BhY2thZ2UuanNvbicpLnZlcnNpb24gLy8gZWxlbWVudC11aSB2ZXJzaW9uIGZyb20gbm9kZV9tb2R1bGVzCmNvbnN0IE9SSUdJTkFMX1RIRU1FID0gJyM0MDlFRkYnIC8vIGRlZmF1bHQgY29sb3IKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhbGs6ICcnLCAvLyBjb250ZW50IG9mIHRoZW1lLWNoYWxrIGNzcwogICAgICB0aGVtZTogJycKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBkZWZhdWx0VGhlbWUoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5zZXR0aW5ncy50aGVtZQogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGRlZmF1bHRUaGVtZTogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiAodmFsLCBvbGRWYWwpIHsKICAgICAgICB0aGlzLnRoZW1lID0gdmFsCiAgICAgIH0sCiAgICAgIGltbWVkaWF0ZTogdHJ1ZQogICAgfSwKICAgIGFzeW5jIHRoZW1lKHZhbCkgewogICAgICBjb25zdCBvbGRWYWwgPSB0aGlzLmNoYWxrID8gdGhpcy50aGVtZSA6IE9SSUdJTkFMX1RIRU1FCiAgICAgIGlmICh0eXBlb2YgdmFsICE9PSAnc3RyaW5nJykgcmV0dXJuCiAgICAgIGNvbnN0IHRoZW1lQ2x1c3RlciA9IHRoaXMuZ2V0VGhlbWVDbHVzdGVyKHZhbC5yZXBsYWNlKCcjJywgJycpKQogICAgICBjb25zdCBvcmlnaW5hbENsdXN0ZXIgPSB0aGlzLmdldFRoZW1lQ2x1c3RlcihvbGRWYWwucmVwbGFjZSgnIycsICcnKSkKCiAgICAgIGNvbnN0ICRtZXNzYWdlID0gdGhpcy4kbWVzc2FnZSh7CiAgICAgICAgbWVzc2FnZTogJyAgQ29tcGlsaW5nIHRoZSB0aGVtZScsCiAgICAgICAgY3VzdG9tQ2xhc3M6ICd0aGVtZS1tZXNzYWdlJywKICAgICAgICB0eXBlOiAnc3VjY2VzcycsCiAgICAgICAgZHVyYXRpb246IDAsCiAgICAgICAgaWNvbkNsYXNzOiAnZWwtaWNvbi1sb2FkaW5nJwogICAgICB9KQoKICAgICAgY29uc3QgZ2V0SGFuZGxlciA9ICh2YXJpYWJsZSwgaWQpID0+IHsKICAgICAgICByZXR1cm4gKCkgPT4gewogICAgICAgICAgY29uc3Qgb3JpZ2luYWxDbHVzdGVyID0gdGhpcy5nZXRUaGVtZUNsdXN0ZXIoT1JJR0lOQUxfVEhFTUUucmVwbGFjZSgnIycsICcnKSkKICAgICAgICAgIGNvbnN0IG5ld1N0eWxlID0gdGhpcy51cGRhdGVTdHlsZSh0aGlzW3ZhcmlhYmxlXSwgb3JpZ2luYWxDbHVzdGVyLCB0aGVtZUNsdXN0ZXIpCgogICAgICAgICAgbGV0IHN0eWxlVGFnID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpCiAgICAgICAgICBpZiAoIXN0eWxlVGFnKSB7CiAgICAgICAgICAgIHN0eWxlVGFnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKQogICAgICAgICAgICBzdHlsZVRhZy5zZXRBdHRyaWJ1dGUoJ2lkJywgaWQpCiAgICAgICAgICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc3R5bGVUYWcpCiAgICAgICAgICB9CiAgICAgICAgICBzdHlsZVRhZy5pbm5lclRleHQgPSBuZXdTdHlsZQogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKCF0aGlzLmNoYWxrKSB7CiAgICAgICAgY29uc3QgdXJsID0gYGh0dHBzOi8vdW5wa2cuY29tL2VsZW1lbnQtdWlAJHt2ZXJzaW9ufS9saWIvdGhlbWUtY2hhbGsvaW5kZXguY3NzYAogICAgICAgIGF3YWl0IHRoaXMuZ2V0Q1NTU3RyaW5nKHVybCwgJ2NoYWxrJykKICAgICAgfQoKICAgICAgY29uc3QgY2hhbGtIYW5kbGVyID0gZ2V0SGFuZGxlcignY2hhbGsnLCAnY2hhbGstc3R5bGUnKQoKICAgICAgY2hhbGtIYW5kbGVyKCkKCiAgICAgIGNvbnN0IHN0eWxlcyA9IFtdLnNsaWNlLmNhbGwoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnc3R5bGUnKSkKICAgICAgICAuZmlsdGVyKHN0eWxlID0+IHsKICAgICAgICAgIGNvbnN0IHRleHQgPSBzdHlsZS5pbm5lclRleHQKICAgICAgICAgIHJldHVybiBuZXcgUmVnRXhwKG9sZFZhbCwgJ2knKS50ZXN0KHRleHQpICYmICEvQ2hhbGsgVmFyaWFibGVzLy50ZXN0KHRleHQpCiAgICAgICAgfSkKICAgICAgc3R5bGVzLmZvckVhY2goc3R5bGUgPT4gewogICAgICAgIGNvbnN0IHtpbm5lclRleHR9ID0gc3R5bGUKICAgICAgICBpZiAodHlwZW9mIGlubmVyVGV4dCAhPT0gJ3N0cmluZycpIHJldHVybgogICAgICAgIHN0eWxlLmlubmVyVGV4dCA9IHRoaXMudXBkYXRlU3R5bGUoaW5uZXJUZXh0LCBvcmlnaW5hbENsdXN0ZXIsIHRoZW1lQ2x1c3RlcikKICAgICAgfSkKCiAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIHZhbCkKCiAgICAgICRtZXNzYWdlLmNsb3NlKCkKICAgIH0KICB9LAoKICBtZXRob2RzOiB7CiAgICB1cGRhdGVTdHlsZShzdHlsZSwgb2xkQ2x1c3RlciwgbmV3Q2x1c3RlcikgewogICAgICBsZXQgbmV3U3R5bGUgPSBzdHlsZQogICAgICBvbGRDbHVzdGVyLmZvckVhY2goKGNvbG9yLCBpbmRleCkgPT4gewogICAgICAgIG5ld1N0eWxlID0gbmV3U3R5bGUucmVwbGFjZShuZXcgUmVnRXhwKGNvbG9yLCAnaWcnKSwgbmV3Q2x1c3RlcltpbmRleF0pCiAgICAgIH0pCiAgICAgIHJldHVybiBuZXdTdHlsZQogICAgfSwKCiAgICBnZXRDU1NTdHJpbmcodXJsLCB2YXJpYWJsZSkgewogICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7CiAgICAgICAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCkKICAgICAgICB4aHIub25yZWFkeXN0YXRlY2hhbmdlID0gKCkgPT4gewogICAgICAgICAgaWYgKHhoci5yZWFkeVN0YXRlID09PSA0ICYmIHhoci5zdGF0dXMgPT09IDIwMCkgewogICAgICAgICAgICB0aGlzW3ZhcmlhYmxlXSA9IHhoci5yZXNwb25zZVRleHQucmVwbGFjZSgvQGZvbnQtZmFjZXtbXn1dK30vLCAnJykKICAgICAgICAgICAgcmVzb2x2ZSgpCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHhoci5vcGVuKCdHRVQnLCB1cmwpCiAgICAgICAgeGhyLnNlbmQoKQogICAgICB9KQogICAgfSwKCiAgICBnZXRUaGVtZUNsdXN0ZXIodGhlbWUpIHsKICAgICAgY29uc3QgdGludENvbG9yID0gKGNvbG9yLCB0aW50KSA9PiB7CiAgICAgICAgbGV0IHJlZCA9IHBhcnNlSW50KGNvbG9yLnNsaWNlKDAsIDIpLCAxNikKICAgICAgICBsZXQgZ3JlZW4gPSBwYXJzZUludChjb2xvci5zbGljZSgyLCA0KSwgMTYpCiAgICAgICAgbGV0IGJsdWUgPSBwYXJzZUludChjb2xvci5zbGljZSg0LCA2KSwgMTYpCgogICAgICAgIGlmICh0aW50ID09PSAwKSB7IC8vIHdoZW4gcHJpbWFyeSBjb2xvciBpcyBpbiBpdHMgcmdiIHNwYWNlCiAgICAgICAgICByZXR1cm4gW3JlZCwgZ3JlZW4sIGJsdWVdLmpvaW4oJywnKQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICByZWQgKz0gTWF0aC5yb3VuZCh0aW50ICogKDI1NSAtIHJlZCkpCiAgICAgICAgICBncmVlbiArPSBNYXRoLnJvdW5kKHRpbnQgKiAoMjU1IC0gZ3JlZW4pKQogICAgICAgICAgYmx1ZSArPSBNYXRoLnJvdW5kKHRpbnQgKiAoMjU1IC0gYmx1ZSkpCgogICAgICAgICAgcmVkID0gcmVkLnRvU3RyaW5nKDE2KQogICAgICAgICAgZ3JlZW4gPSBncmVlbi50b1N0cmluZygxNikKICAgICAgICAgIGJsdWUgPSBibHVlLnRvU3RyaW5nKDE2KQoKICAgICAgICAgIHJldHVybiBgIyR7cmVkfSR7Z3JlZW59JHtibHVlfWAKICAgICAgICB9CiAgICAgIH0KCiAgICAgIGNvbnN0IHNoYWRlQ29sb3IgPSAoY29sb3IsIHNoYWRlKSA9PiB7CiAgICAgICAgbGV0IHJlZCA9IHBhcnNlSW50KGNvbG9yLnNsaWNlKDAsIDIpLCAxNikKICAgICAgICBsZXQgZ3JlZW4gPSBwYXJzZUludChjb2xvci5zbGljZSgyLCA0KSwgMTYpCiAgICAgICAgbGV0IGJsdWUgPSBwYXJzZUludChjb2xvci5zbGljZSg0LCA2KSwgMTYpCgogICAgICAgIHJlZCA9IE1hdGgucm91bmQoKDEgLSBzaGFkZSkgKiByZWQpCiAgICAgICAgZ3JlZW4gPSBNYXRoLnJvdW5kKCgxIC0gc2hhZGUpICogZ3JlZW4pCiAgICAgICAgYmx1ZSA9IE1hdGgucm91bmQoKDEgLSBzaGFkZSkgKiBibHVlKQoKICAgICAgICByZWQgPSByZWQudG9TdHJpbmcoMTYpCiAgICAgICAgZ3JlZW4gPSBncmVlbi50b1N0cmluZygxNikKICAgICAgICBibHVlID0gYmx1ZS50b1N0cmluZygxNikKCiAgICAgICAgcmV0dXJuIGAjJHtyZWR9JHtncmVlbn0ke2JsdWV9YAogICAgICB9CgogICAgICBjb25zdCBjbHVzdGVycyA9IFt0aGVtZV0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gOTsgaSsrKSB7CiAgICAgICAgY2x1c3RlcnMucHVzaCh0aW50Q29sb3IodGhlbWUsIE51bWJlcigoaSAvIDEwKS50b0ZpeGVkKDIpKSkpCiAgICAgIH0KICAgICAgY2x1c3RlcnMucHVzaChzaGFkZUNvbG9yKHRoZW1lLCAwLjEpKQogICAgICByZXR1cm4gY2x1c3RlcnMKICAgIH0KICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/ThemePicker","sourcesContent":["<template>\r\n  <el-color-picker\r\n    :predefine=\"['#409EFF', '#1890ff', '#304156','#212121','#11a983', '#13c2c2', '#6959CD', '#f5222d', ]\"\r\n    class=\"theme-picker\"\r\n    popper-class=\"theme-picker-dropdown\"\r\n    v-model=\"theme\"\r\n  />\r\n</template>\r\n\r\n<script>\r\n  const version = require('element-ui/package.json').version // element-ui version from node_modules\r\n  const ORIGINAL_THEME = '#409EFF' // default color\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        chalk: '', // content of theme-chalk css\r\n        theme: ''\r\n      }\r\n    },\r\n    computed: {\r\n      defaultTheme() {\r\n        return this.$store.state.settings.theme\r\n      }\r\n    },\r\n    watch: {\r\n      defaultTheme: {\r\n        handler: function (val, oldVal) {\r\n          this.theme = val\r\n        },\r\n        immediate: true\r\n      },\r\n      async theme(val) {\r\n        const oldVal = this.chalk ? this.theme : ORIGINAL_THEME\r\n        if (typeof val !== 'string') return\r\n        const themeCluster = this.getThemeCluster(val.replace('#', ''))\r\n        const originalCluster = this.getThemeCluster(oldVal.replace('#', ''))\r\n\r\n        const $message = this.$message({\r\n          message: '  Compiling the theme',\r\n          customClass: 'theme-message',\r\n          type: 'success',\r\n          duration: 0,\r\n          iconClass: 'el-icon-loading'\r\n        })\r\n\r\n        const getHandler = (variable, id) => {\r\n          return () => {\r\n            const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''))\r\n            const newStyle = this.updateStyle(this[variable], originalCluster, themeCluster)\r\n\r\n            let styleTag = document.getElementById(id)\r\n            if (!styleTag) {\r\n              styleTag = document.createElement('style')\r\n              styleTag.setAttribute('id', id)\r\n              document.head.appendChild(styleTag)\r\n            }\r\n            styleTag.innerText = newStyle\r\n          }\r\n        }\r\n\r\n        if (!this.chalk) {\r\n          const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`\r\n          await this.getCSSString(url, 'chalk')\r\n        }\r\n\r\n        const chalkHandler = getHandler('chalk', 'chalk-style')\r\n\r\n        chalkHandler()\r\n\r\n        const styles = [].slice.call(document.querySelectorAll('style'))\r\n          .filter(style => {\r\n            const text = style.innerText\r\n            return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\r\n          })\r\n        styles.forEach(style => {\r\n          const {innerText} = style\r\n          if (typeof innerText !== 'string') return\r\n          style.innerText = this.updateStyle(innerText, originalCluster, themeCluster)\r\n        })\r\n\r\n        this.$emit('change', val)\r\n\r\n        $message.close()\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      updateStyle(style, oldCluster, newCluster) {\r\n        let newStyle = style\r\n        oldCluster.forEach((color, index) => {\r\n          newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\r\n        })\r\n        return newStyle\r\n      },\r\n\r\n      getCSSString(url, variable) {\r\n        return new Promise(resolve => {\r\n          const xhr = new XMLHttpRequest()\r\n          xhr.onreadystatechange = () => {\r\n            if (xhr.readyState === 4 && xhr.status === 200) {\r\n              this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\r\n              resolve()\r\n            }\r\n          }\r\n          xhr.open('GET', url)\r\n          xhr.send()\r\n        })\r\n      },\r\n\r\n      getThemeCluster(theme) {\r\n        const tintColor = (color, tint) => {\r\n          let red = parseInt(color.slice(0, 2), 16)\r\n          let green = parseInt(color.slice(2, 4), 16)\r\n          let blue = parseInt(color.slice(4, 6), 16)\r\n\r\n          if (tint === 0) { // when primary color is in its rgb space\r\n            return [red, green, blue].join(',')\r\n          } else {\r\n            red += Math.round(tint * (255 - red))\r\n            green += Math.round(tint * (255 - green))\r\n            blue += Math.round(tint * (255 - blue))\r\n\r\n            red = red.toString(16)\r\n            green = green.toString(16)\r\n            blue = blue.toString(16)\r\n\r\n            return `#${red}${green}${blue}`\r\n          }\r\n        }\r\n\r\n        const shadeColor = (color, shade) => {\r\n          let red = parseInt(color.slice(0, 2), 16)\r\n          let green = parseInt(color.slice(2, 4), 16)\r\n          let blue = parseInt(color.slice(4, 6), 16)\r\n\r\n          red = Math.round((1 - shade) * red)\r\n          green = Math.round((1 - shade) * green)\r\n          blue = Math.round((1 - shade) * blue)\r\n\r\n          red = red.toString(16)\r\n          green = green.toString(16)\r\n          blue = blue.toString(16)\r\n\r\n          return `#${red}${green}${blue}`\r\n        }\r\n\r\n        const clusters = [theme]\r\n        for (let i = 0; i <= 9; i++) {\r\n          clusters.push(tintColor(theme, Number((i / 10).toFixed(2))))\r\n        }\r\n        clusters.push(shadeColor(theme, 0.1))\r\n        return clusters\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style>\r\n  .theme-message,\r\n  .theme-picker-dropdown {\r\n    z-index: 99999 !important;\r\n  }\r\n\r\n  .theme-picker .el-color-picker__trigger {\r\n    height: 26px !important;\r\n    width: 26px !important;\r\n    padding: 2px;\r\n  }\r\n\r\n  .theme-picker-dropdown .el-color-dropdown__link-btn {\r\n    display: none;\r\n  }\r\n</style>\r\n"]}]}