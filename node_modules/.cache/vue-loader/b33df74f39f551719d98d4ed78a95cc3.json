{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\product-testing\\preservation-test\\casedef\\index.vue?vue&type=template&id=48ba7e36&scoped=true&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\product-testing\\preservation-test\\casedef\\index.vue","mtime":1609847107134},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1706753192021},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var render = function() {
  var _vm = this
  var _h = _vm.$createElement
  var _c = _vm._self._c || _h
  return _c(
    "cus-wraper",
    [
      _c("cus-page-title-back", {
        attrs: {
          label: _vm.$t("preservationTestCaseDefinition.CaseDefinition")
        },
        on: { backTo: _vm.backPage }
      }),
      _c("cus-commodity-info"),
      _c("cus-table-title", {
        attrs: { label: _vm.$t("preservationTestCaseDefinition.testCase") }
      }),
      _c(
        "el-table",
        {
          staticClass: "wraper-table",
          attrs: {
            data: _vm.configs1,
            align: "center",
            border: "",
            "element-loading-text": "Loading",
            fit: "",
            "highlight-current-row": "",
            size: "mini"
          }
        },
        [
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("table.select"),
              align: "center",
              width: "50"
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _c(
                      "el-radio-group",
                      {
                        model: {
                          value: _vm.selectConfigs1,
                          callback: function($$v) {
                            _vm.selectConfigs1 = $$v
                          },
                          expression: "selectConfigs1"
                        }
                      },
                      [
                        _c(
                          "el-radio",
                          {
                            attrs: { label: scope.row },
                            on: { change: _vm.handleUpdateCase }
                          },
                          [_vm._v(_vm._s(""))]
                        )
                      ],
                      1
                    )
                  ]
                }
              }
            ])
          }),
          _c("el-table-column", {
            attrs: { label: _vm.$t("table.id"), align: "center", type: "index" }
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.testCaseCode"),
              align: "center",
              prop: "pdTestCaseCode"
            }
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.testCaseType"),
              align: "center",
              prop: "pdTestCaseType"
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _vm._v(
                      _vm._s(_vm._f("filterCaseType")(scope.row.pdTestCaseType))
                    )
                  ]
                }
              }
            ])
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("productTestingNewDetails.testPoint"),
              align: "center",
              prop: "pdFuncDesc"
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    scope.row.pdFuncDesc.length > 1
                      ? _c(
                          "el-popover",
                          { attrs: { placement: "top", trigger: "hover" } },
                          [
                            _vm._l(scope.row.pdFuncDesc, function(item) {
                              return _c("span", [
                                _vm._v(_vm._s(item.pd_test_func_desc) + "、")
                              ])
                            }),
                            _c(
                              "div",
                              {
                                staticClass: "name-wrapper",
                                attrs: { slot: "reference" },
                                slot: "reference"
                              },
                              [
                                _c("el-tag", { attrs: { size: "medium" } }, [
                                  _vm._v(
                                    _vm._s(
                                      scope.row.pdFuncDesc[0].pd_test_func_desc
                                    ) + "..."
                                  )
                                ])
                              ],
                              1
                            )
                          ],
                          2
                        )
                      : _vm._e(),
                    scope.row.pdFuncDesc.length === 1
                      ? _c("el-tag", { attrs: { size: "medium" } }, [
                          _vm._v(
                            _vm._s(scope.row.pdFuncDesc[0].pd_test_func_desc) +
                              " "
                          )
                        ])
                      : _vm._e()
                  ]
                }
              }
            ])
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("productTestingNewDetails.testCaseDefType"),
              align: "center",
              prop: "pdTestCaseDefinition"
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _vm._v(
                      _vm._s(
                        _vm._f("filterCaseDefinition")(
                          scope.row.pdTestCaseDefinition
                        )
                      )
                    )
                  ]
                }
              }
            ])
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("productTestingNewDetails.creatDate"),
              align: "center",
              fixed: "right",
              prop: "createTime"
            }
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("table.actions"),
              align: "center",
              fixed: "right",
              width: "150"
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    scope.row.pdTestCaseDefinition === "2"
                      ? _c("el-button", {
                          directives: [
                            {
                              name: "auth",
                              rawName: "v-auth",
                              value: "new-single-test:downloadCase",
                              expression: "'new-single-test:downloadCase'"
                            }
                          ],
                          staticClass: "filter-button",
                          attrs: { icon: "el-icon-download", size: "mini" },
                          on: {
                            click: function($event) {
                              return _vm.downloadCaseDef(scope.row)
                            }
                          }
                        })
                      : _vm._e(),
                    _c("cus-del-btn", {
                      directives: [
                        {
                          name: "auth",
                          rawName: "v-auth",
                          value: "new-single-test:deleteCase",
                          expression: "'new-single-test:deleteCase'"
                        }
                      ],
                      attrs: { disabled: scope.row.pdTestStatus === "1" },
                      on: {
                        ok: function($event) {
                          return _vm.deleteCaseDef(scope.row.id)
                        }
                      }
                    })
                  ]
                }
              }
            ])
          })
        ],
        1
      ),
      _c("cus-pagination", {
        ref: "page1",
        attrs: {
          pageSize: 10,
          params: _vm.params1,
          url: "/preservation-test/base/queryPdTestCase"
        },
        model: {
          value: _vm.configs1,
          callback: function($$v) {
            _vm.configs1 = $$v
          },
          expression: "configs1"
        }
      }),
      _c("cus-form-title", {
        attrs: {
          first: true,
          label: _vm.$t("preservationTestCaseDefinition.CaseDefinition")
        }
      }),
      _c(
        "el-form",
        {
          ref: "caseDefForm",
          staticStyle: { "margin-left": "30px" },
          attrs: {
            model: _vm.CaseDefinition,
            rules: _vm.defRules,
            "label-width": "auto"
          }
        },
        [
          _c(
            "el-col",
            { attrs: { span: 7 } },
            [
              _c(
                "el-form-item",
                {
                  attrs: {
                    label: _vm.$t("preservationTestCaseDefinition.testPoint"),
                    prop: "testPoint"
                  }
                },
                [
                  _c(
                    "el-select",
                    {
                      attrs: {
                        placeholder: _vm.$t("i18nView.selectPlaceholder"),
                        clearable: "",
                        multiple: ""
                      },
                      model: {
                        value: _vm.CaseDefinition.testPoint,
                        callback: function($$v) {
                          _vm.$set(_vm.CaseDefinition, "testPoint", $$v)
                        },
                        expression: "CaseDefinition.testPoint"
                      }
                    },
                    _vm._l(_vm.funcSelect, function(item) {
                      return _c("el-option", {
                        key: item.id,
                        attrs: { label: item.label, value: item.value }
                      })
                    }),
                    1
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _c("cus-form-title", {
        staticStyle: { clear: "both" },
        attrs: {
          label: _vm.$t("preservationTestCaseDefinition.policySelection")
        }
      }),
      _c(
        "el-form",
        {
          ref: "policySelForm",
          staticStyle: { "margin-left": "30px" },
          attrs: { model: _vm.policySelection, "label-width": "auto" }
        },
        [
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    {
                      attrs: {
                        label: _vm.$t("rule.productDetailType"),
                        prop: "contNo"
                      }
                    },
                    [
                      _c("el-input", {
                        attrs: { clearable: "" },
                        model: {
                          value: _vm.policySelection.productTypeDetail,
                          callback: function($$v) {
                            _vm.$set(
                              _vm.policySelection,
                              "productTypeDetail",
                              $$v
                            )
                          },
                          expression: "policySelection.productTypeDetail"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    {
                      attrs: { label: _vm.$t("rule.product"), prop: "pdCode" }
                    },
                    [
                      _c(
                        "el-select",
                        {
                          attrs: { clearable: "", filterable: "" },
                          model: {
                            value: _vm.policySelection.pdCode,
                            callback: function($$v) {
                              _vm.$set(_vm.policySelection, "pdCode", $$v)
                            },
                            expression: "policySelection.pdCode"
                          }
                        },
                        _vm._l(_vm.productList, function(product) {
                          return _c("el-option", {
                            key: product.id,
                            attrs: {
                              label: product.pdCode + ":" + product.pdName,
                              value: product.pdCode
                            }
                          })
                        }),
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    {
                      attrs: {
                        label: _vm.$t("preservationTestCaseDefinition.contNo"),
                        prop: "contNo"
                      }
                    },
                    [
                      _c("el-input", {
                        attrs: { clearable: "" },
                        model: {
                          value: _vm.policySelection.contNo,
                          callback: function($$v) {
                            _vm.$set(_vm.policySelection, "contNo", $$v)
                          },
                          expression: "policySelection.contNo"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          ),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    {
                      attrs: {
                        label: _vm.$t(
                          "preservationTestCaseDefinition.effectiveDate"
                        ),
                        prop: "testPoint"
                      }
                    },
                    [
                      _c("el-date-picker", {
                        attrs: {
                          "end-placeholder": _vm.$t(
                            "productSelect.productApplyEndDate"
                          ),
                          "range-separator": _vm.$t("productSelect.to"),
                          "start-placeholder": _vm.$t(
                            "productSelect.productApplyStartDate"
                          ),
                          type: "daterange",
                          "value-format": "yyyy-MM-dd"
                        },
                        model: {
                          value: _vm.policySelection.effectiveDate,
                          callback: function($$v) {
                            _vm.$set(_vm.policySelection, "effectiveDate", $$v)
                          },
                          expression: "policySelection.effectiveDate"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "cus-btn-wrapper",
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-search",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: _vm.searchPolicyData }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("renewalTest.search")) + " ")]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _c(
        "div",
        { staticStyle: { margin: "20px 30px 30px 0px" } },
        [
          _c(
            "el-row",
            { staticClass: "row-bg", attrs: { justify: "left", type: "flex" } },
            [
              _c(
                "el-col",
                { attrs: { span: 6 } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-circle-plus-outline",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: _vm.addPolicy }
                    },
                    [
                      _vm._v(
                        " " +
                          _vm._s(
                            _vm.$t("preservationTestCaseDefinition.addPolicy")
                          ) +
                          " "
                      )
                    ]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _c("cus-table-title", {
        attrs: { label: _vm.$t("preservationTestCaseDefinition.policy") }
      }),
      _c(
        "el-table",
        {
          staticClass: "wraper-table",
          attrs: {
            data: _vm.policys,
            align: "center",
            border: "",
            "element-loading-text": "Loading",
            fit: "",
            "highlight-current-row": "",
            size: "mini"
          }
        },
        [
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("table.select"),
              align: "center",
              width: "50"
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _c(
                      "el-radio-group",
                      {
                        model: {
                          value: _vm.selectPolicys,
                          callback: function($$v) {
                            _vm.selectPolicys = $$v
                          },
                          expression: "selectPolicys"
                        }
                      },
                      [
                        _c(
                          "el-radio",
                          {
                            attrs: { label: scope.row },
                            on: { change: _vm.handleSelectPolicys }
                          },
                          [_vm._v(_vm._s(""))]
                        )
                      ],
                      1
                    )
                  ]
                }
              }
            ])
          }),
          _c("el-table-column", {
            attrs: { label: _vm.$t("table.id"), align: "center", type: "index" }
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.contNo"),
              align: "center",
              prop: "contNo"
            }
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.effectiveDate"),
              align: "center",
              prop: "effectiveDate"
            }
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.paymentMode"),
              align: "center"
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _vm._v(
                      _vm._s(_vm._f("filterPaymentMode")(scope.row.paymentMode))
                    )
                  ]
                }
              }
            ])
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("table.actions"),
              align: "center",
              width: "80px"
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _c("el-button", {
                      staticClass: "filter-button",
                      attrs: {
                        disabled: scope.row.contNo !== _vm.selectedId,
                        icon: _vm.resultIcon,
                        size: "mini"
                      },
                      on: {
                        click: function($event) {
                          return _vm.hidePolicyDataDetail(scope.row)
                        }
                      }
                    })
                  ]
                }
              }
            ])
          })
        ],
        1
      ),
      _vm.policyDetailShow
        ? _c(
            "div",
            [
              _c("cus-table-title", {
                attrs: { label: _vm.$t("productTestingNewDetails.product") }
              }),
              _c(
                "el-table",
                {
                  staticClass: "wraper-table",
                  attrs: {
                    data: _vm.configs5,
                    align: "center",
                    border: "",
                    "element-loading-text": "Loading",
                    fit: "",
                    "highlight-current-row": "",
                    size: "mini"
                  }
                },
                [
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("table.select"),
                      align: "center",
                      width: "50"
                    },
                    scopedSlots: _vm._u(
                      [
                        {
                          key: "default",
                          fn: function(scope) {
                            return [
                              _c(
                                "el-radio-group",
                                {
                                  model: {
                                    value: _vm.selectConfigs5,
                                    callback: function($$v) {
                                      _vm.selectConfigs5 = $$v
                                    },
                                    expression: "selectConfigs5"
                                  }
                                },
                                [
                                  _c(
                                    "span",
                                    [
                                      _c(
                                        "el-radio",
                                        {
                                          attrs: { label: scope.row },
                                          on: { change: _vm.buildPlanData }
                                        },
                                        [_vm._v(_vm._s(""))]
                                      )
                                    ],
                                    1
                                  )
                                ]
                              )
                            ]
                          }
                        }
                      ],
                      null,
                      false,
                      872067547
                    )
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("table.id"),
                      align: "center",
                      type: "index"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("i18nView.pdCode"),
                      align: "center",
                      prop: "pdCode"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("i18nView.pdName"),
                      align: "center",
                      prop: "pdName"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.currency"),
                      align: "center",
                      prop: "currency"
                    },
                    scopedSlots: _vm._u(
                      [
                        {
                          key: "default",
                          fn: function(scope) {
                            return [
                              _vm._v(
                                _vm._s(
                                  _vm._f("filterCurrency")(scope.row.currency)
                                )
                              )
                            ]
                          }
                        }
                      ],
                      null,
                      false,
                      1052798820
                    )
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.premium"),
                      align: "center",
                      prop: "premium"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.sumAssured"),
                      align: "center",
                      prop: "amount"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.effectiveDate"),
                      align: "center",
                      prop: "effectiveDate"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.paymentDeadline"),
                      align: "center",
                      prop: "payEndDate"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t(
                        "productTestingNewDetails.expiryDateOfInsurance"
                      ),
                      align: "center",
                      prop: "insuranceEndDate"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t(
                        "productTestingNewDetails.preferentialAmount"
                      ),
                      align: "center",
                      prop: "discountMoney"
                    }
                  })
                ],
                1
              ),
              _c("cus-table-title", {
                attrs: {
                  label: _vm.$t("productTestingNewDetails.programInformation")
                }
              }),
              _c(
                "el-table",
                {
                  staticClass: "wraper-table",
                  attrs: {
                    data: _vm.configs6,
                    align: "center",
                    border: "",
                    "element-loading-text": "Loading",
                    fit: "",
                    "highlight-current-row": "",
                    size: "mini"
                  }
                },
                [
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("table.select"),
                      align: "center",
                      width: "50"
                    },
                    scopedSlots: _vm._u(
                      [
                        {
                          key: "default",
                          fn: function(scope) {
                            return [
                              _c(
                                "el-radio-group",
                                {
                                  model: {
                                    value: _vm.selectConfigs6,
                                    callback: function($$v) {
                                      _vm.selectConfigs6 = $$v
                                    },
                                    expression: "selectConfigs6"
                                  }
                                },
                                [
                                  _c(
                                    "span",
                                    [
                                      _c(
                                        "el-radio",
                                        {
                                          attrs: { label: scope.row },
                                          on: {
                                            change: _vm.buildPaymentAndBnftData
                                          }
                                        },
                                        [_vm._v(_vm._s(""))]
                                      )
                                    ],
                                    1
                                  )
                                ]
                              )
                            ]
                          }
                        }
                      ],
                      null,
                      false,
                      174992484
                    )
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("table.id"),
                      align: "center",
                      type: "index"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("i18nView.pdCode"),
                      align: "center",
                      prop: "pdCode"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("i18nView.schemeCode"),
                      align: "center",
                      prop: "planCode"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("i18nView.programName"),
                      align: "center",
                      prop: "planName"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.currency"),
                      align: "center",
                      prop: "currency"
                    },
                    scopedSlots: _vm._u(
                      [
                        {
                          key: "default",
                          fn: function(scope) {
                            return [
                              _vm._v(
                                _vm._s(
                                  _vm._f("filterCurrency")(scope.row.currency)
                                )
                              )
                            ]
                          }
                        }
                      ],
                      null,
                      false,
                      1052798820
                    )
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.premium"),
                      align: "center",
                      prop: "premium"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.sumAssured"),
                      align: "center",
                      prop: "amount"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.paymentDeadline"),
                      align: "center",
                      prop: "insuranceEndDate"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t(
                        "productTestingNewDetails.expiryDateOfInsurance"
                      ),
                      align: "center",
                      prop: "payEndDate"
                    }
                  })
                ],
                1
              ),
              _c("cus-table-title", {
                attrs: {
                  label: _vm.$t("productTestingNewDetails.paymentInformation")
                }
              }),
              _c(
                "el-table",
                {
                  staticClass: "wraper-table",
                  attrs: {
                    data: _vm.configs7,
                    align: "center",
                    border: "",
                    "element-loading-text": "Loading",
                    fit: "",
                    "highlight-current-row": "",
                    size: "mini"
                  }
                },
                [
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("table.id"),
                      align: "center",
                      type: "index"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("i18nView.schemeCode"),
                      align: "center",
                      prop: "planCode"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.paymentCode"),
                      align: "center",
                      prop: "paymentCode"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.paymentName"),
                      align: "center",
                      prop: "paymentName"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.currency"),
                      align: "center",
                      prop: "currency"
                    },
                    scopedSlots: _vm._u(
                      [
                        {
                          key: "default",
                          fn: function(scope) {
                            return [
                              _vm._v(
                                _vm._s(
                                  _vm._f("filterCurrency")(scope.row.currency)
                                )
                              )
                            ]
                          }
                        }
                      ],
                      null,
                      false,
                      1052798820
                    )
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.premium"),
                      align: "center",
                      prop: "premium"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t(
                        "productTestingNewDetails.premiumCalculation"
                      ),
                      align: "center",
                      prop: "premiumCalMethod"
                    },
                    scopedSlots: _vm._u(
                      [
                        {
                          key: "default",
                          fn: function(scope) {
                            return [
                              _vm._v(
                                _vm._s(
                                  _vm._f("filterCalMethod")(
                                    scope.row.premiumCalMethod
                                  )
                                )
                              )
                            ]
                          }
                        }
                      ],
                      null,
                      false,
                      4190452159
                    )
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t(
                        "productTestingNewDetails.paymentBeginDate"
                      ),
                      align: "center",
                      prop: "payStartDate"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.paymentEndDate"),
                      align: "center",
                      prop: "payEndDate"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.paymentMethod"),
                      align: "center",
                      prop: "paymentMode"
                    },
                    scopedSlots: _vm._u(
                      [
                        {
                          key: "default",
                          fn: function(scope) {
                            return [
                              _vm._v(
                                _vm._s(
                                  _vm._f("filterFreqType")(
                                    scope.row.paymentMode
                                  )
                                )
                              )
                            ]
                          }
                        }
                      ],
                      null,
                      false,
                      2420186725
                    )
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t(
                        "productTestingNewDetails.preferentialAmount"
                      ),
                      align: "center",
                      prop: "discountMoney"
                    }
                  })
                ],
                1
              ),
              _c("cus-table-title", {
                attrs: {
                  label: _vm.$t("productTestingNewDetails.guaranteeInformation")
                }
              }),
              _c(
                "el-table",
                {
                  staticClass: "wraper-table",
                  attrs: {
                    data: _vm.configs8,
                    align: "center",
                    border: "",
                    "element-loading-text": "Loading",
                    fit: "",
                    "highlight-current-row": "",
                    size: "mini"
                  }
                },
                [
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("table.id"),
                      align: "center",
                      type: "index"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("i18nView.pdCode"),
                      align: "center",
                      prop: "pdCode"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("i18nView.schemeCode"),
                      align: "center",
                      prop: "planCode"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("i18nView.guaranteeCode"),
                      align: "center",
                      prop: "benefitCode"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("i18nView.pdBnftName"),
                      align: "center",
                      prop: "benefitName"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("i18nView.pdBnftType"),
                      align: "center",
                      prop: ""
                    },
                    scopedSlots: _vm._u(
                      [
                        {
                          key: "default",
                          fn: function(scope) {
                            return [
                              _vm._v(
                                _vm._s(
                                  _vm._f("filterBnftType")(
                                    scope.row.benefitType
                                  )
                                )
                              )
                            ]
                          }
                        }
                      ],
                      null,
                      false,
                      809557197
                    )
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("i18nView.pdBnftDetailType"),
                      align: "center",
                      prop: "bnftDetailType"
                    },
                    scopedSlots: _vm._u(
                      [
                        {
                          key: "default",
                          fn: function(scope) {
                            return [
                              _vm._v(
                                _vm._s(
                                  _vm.filterBnftDetailType(
                                    scope.row.benefitType,
                                    scope.row.bnftDetailType
                                  )
                                ) + " "
                              )
                            ]
                          }
                        }
                      ],
                      null,
                      false,
                      3400589684
                    )
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t("productTestingNewDetails.sumAssured"),
                      align: "center",
                      prop: "amount"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t(
                        "productTestingNewDetails.startDateOfInsurance"
                      ),
                      align: "center",
                      prop: "starBnftDate"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t(
                        "productTestingNewDetails.endDateOfInsurance"
                      ),
                      align: "center",
                      prop: "endBnftDate"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t(
                        "productTestingNewDetails.startDateOfCollection"
                      ),
                      align: "center",
                      prop: "startDateOfCollection"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t(
                        "productTestingNewDetails.endDateOfCollection"
                      ),
                      align: "center",
                      prop: "collectionDeadline"
                    }
                  }),
                  _c("el-table-column", {
                    attrs: {
                      label: _vm.$t(
                        "productTestingNewDetails.coverageForTheNextYear"
                      ),
                      align: "center",
                      prop: "nextYearAmount"
                    }
                  })
                ],
                1
              )
            ],
            1
          )
        : _vm._e(),
      _c("cus-form-title", {
        attrs: {
          label: _vm.$t("preservationTestCaseDefinition.additionalInsurance")
        }
      }),
      _c("br"),
      _c("br"),
      _c(
        "el-form",
        {
          ref: "insuredForm",
          attrs: { model: _vm.dataForm1, "label-width": "auto" }
        },
        [
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    {
                      attrs: {
                        label: _vm.$t("i18nView.originalCoverage"),
                        prop: "contNo"
                      }
                    },
                    [
                      _c("el-input", {
                        attrs: { clearable: "", disabled: "" },
                        model: {
                          value: _vm.dataForm1.contNo,
                          callback: function($$v) {
                            _vm.$set(_vm.dataForm1, "contNo", $$v)
                          },
                          expression: "dataForm1.contNo"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "contNo" } },
                    [
                      _c("el-input", {
                        attrs: { clearable: "", disabled: "" },
                        model: {
                          value: _vm.dataForm1.contNo,
                          callback: function($$v) {
                            _vm.$set(_vm.dataForm1, "contNo", $$v)
                          },
                          expression: "dataForm1.contNo"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "contNo" } },
                    [
                      _c("el-input", {
                        attrs: { clearable: "", disabled: "" },
                        model: {
                          value: _vm.dataForm1.contNo,
                          callback: function($$v) {
                            _vm.$set(_vm.dataForm1, "contNo", $$v)
                          },
                          expression: "dataForm1.contNo"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          ),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    {
                      attrs: {
                        label: _vm.$t("i18nView.addCoverage"),
                        prop: "contNo"
                      }
                    },
                    [
                      _c("el-input", {
                        attrs: { clearable: "" },
                        model: {
                          value: _vm.dataForm1.contNo,
                          callback: function($$v) {
                            _vm.$set(_vm.dataForm1, "contNo", $$v)
                          },
                          expression: "dataForm1.contNo"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          ),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 24, align: "right" } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-success",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.save")) + " ")]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _c("cus-form-title", {
        attrs: {
          label: _vm.$t("preservationTestCaseDefinition.changeInformation")
        }
      }),
      _c("br"),
      _c("br"),
      _c("cus-table-title", {
        attrs: {
          label: _vm.$t("preservationTestCaseDefinition.policyCustomers")
        }
      }),
      _c(
        "el-table",
        {
          staticClass: "wraper-table",
          attrs: {
            data: _vm.configs9,
            align: "center",
            border: "",
            "element-loading-text": "Loading",
            fit: "",
            "highlight-current-row": "",
            size: "mini"
          }
        },
        [
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("table.select"),
              align: "center",
              width: "50"
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _c(
                      "el-radio-group",
                      {
                        model: {
                          value: _vm.selectConfigs7,
                          callback: function($$v) {
                            _vm.selectConfigs7 = $$v
                          },
                          expression: "selectConfigs7"
                        }
                      },
                      [
                        _c(
                          "span",
                          [
                            _c(
                              "el-radio",
                              {
                                attrs: { label: scope.row },
                                on: { change: _vm.chooseconfigs9 }
                              },
                              [_vm._v(_vm._s(""))]
                            )
                          ],
                          1
                        )
                      ]
                    )
                  ]
                }
              }
            ])
          }),
          _c("el-table-column", {
            attrs: { label: _vm.$t("table.id"), align: "center", type: "index" }
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.customerRole"),
              align: "center",
              prop: "customerRole"
            }
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.customerSequence"),
              align: "center",
              prop: ""
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [_vm._v(_vm._s(_vm.filterSeq(scope.row)))]
                }
              }
            ])
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.customerNumber"),
              align: "center",
              prop: "insuredNo"
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [_vm._v(_vm._s(_vm.filterCustomerNo(scope.row)))]
                }
              }
            ])
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.gender"),
              align: "center",
              prop: "insuredSex"
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _vm._v(
                      _vm._s(_vm._f("filterSexType")(_vm.filterSex(scope.row)))
                    )
                  ]
                }
              }
            ])
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.insuranceAge"),
              align: "center",
              prop: "insuredAppAge"
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [_vm._v(_vm._s(_vm.filterAge(scope.row)))]
                }
              }
            ])
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.changeMark"),
              align: "center",
              prop: "changemarker"
            }
          })
        ],
        1
      ),
      _c("br"),
      _c("br"),
      _c(
        "el-form",
        {
          ref: "configsForm9",
          attrs: {
            model: _vm.configsForm9,
            "label-width": "auto",
            rules: _vm.rules
          }
        },
        [
          _c(
            "el-row",
            { attrs: { gutter: 10 } },
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    {
                      attrs: {
                        label: _vm.$t(
                          "productTestingNewCaseDefinition.customerno"
                        )
                      }
                    },
                    [
                      _c("el-input", {
                        attrs: { clearable: "", disabled: "" },
                        model: {
                          value: _vm.configsForm9.aibNo,
                          callback: function($$v) {
                            _vm.$set(_vm.configsForm9, "aibNo", $$v)
                          },
                          expression: "configsForm9.aibNo"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "contNo" } },
                    [
                      _c("cus-select", {
                        attrs: { codetype: "sex" },
                        model: {
                          value: _vm.configsForm9.aibSex,
                          callback: function($$v) {
                            _vm.$set(_vm.configsForm9, "aibSex", $$v)
                          },
                          expression: "configsForm9.aibSex"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    {
                      attrs: {
                        prop: "insuredAppAge",
                        label: _vm.$t(
                          "productTestingNewCaseDefinition.customerage"
                        )
                      }
                    },
                    [
                      _c(
                        "el-input",
                        {
                          attrs: {
                            placeholder: _vm.$t("i18nView.placeholderNum"),
                            type: "number",
                            clearable: ""
                          },
                          model: {
                            value: _vm.configsForm9.aibAge,
                            callback: function($$v) {
                              _vm.$set(_vm.configsForm9, "aibAge", $$v)
                            },
                            expression: "configsForm9.aibAge"
                          }
                        },
                        [
                          _c(
                            "el-select",
                            {
                              staticClass: "cst",
                              attrs: { slot: "append" },
                              slot: "append",
                              model: {
                                value: _vm.configsForm9.ageUnit,
                                callback: function($$v) {
                                  _vm.$set(_vm.configsForm9, "ageUnit", $$v)
                                },
                                expression: "configsForm9.ageUnit"
                              }
                            },
                            [
                              _c("el-option", {
                                attrs: {
                                  label: _vm.$t("i18nView.ageY"),
                                  value: "Y"
                                }
                              }),
                              _c("el-option", {
                                attrs: {
                                  label: _vm.$t("i18nView.dayD"),
                                  value: "D"
                                }
                              })
                            ],
                            1
                          )
                        ],
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          ),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 19, align: "right" } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-plus",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.add")) + " ")]
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { offset: 1, span: 4 } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-minus",
                        size: "small",
                        type: "danger"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.cancel")) + " ")]
                  )
                ],
                1
              )
            ],
            1
          ),
          _c("br"),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 24, align: "right" } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-success",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.save")) + " ")]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _c("cus-form-title", {
        attrs: { label: _vm.$t("preservationTestCaseDefinition.changePeriod") }
      }),
      _c("br"),
      _c("br"),
      _c(
        "el-form",
        {
          ref: "insuredForm",
          attrs: { model: _vm.dataForm2, "label-width": "auto" }
        },
        [
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "testPoint" } },
                    [
                      _c(
                        "el-select",
                        {
                          staticClass: "filter-item",
                          attrs: {
                            placeholder: _vm.$t("i18nView.selectPlaceholder"),
                            clearable: ""
                          },
                          model: {
                            value: _vm.dataForm2.testPoint,
                            callback: function($$v) {
                              _vm.$set(_vm.dataForm2, "testPoint", $$v)
                            },
                            expression: "dataForm2.testPoint"
                          }
                        },
                        _vm._l(_vm.funcSelect, function(item) {
                          return _c("el-option", {
                            key: item.id,
                            attrs: { label: item.label, value: item.value }
                          })
                        }),
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "contNo" } },
                    [
                      _c(
                        "el-select",
                        {
                          staticClass: "filter-item",
                          attrs: {
                            placeholder: _vm.$t("i18nView.selectPlaceholder"),
                            clearable: ""
                          },
                          model: {
                            value: _vm.dataForm2.testPoint,
                            callback: function($$v) {
                              _vm.$set(_vm.dataForm2, "testPoint", $$v)
                            },
                            expression: "dataForm2.testPoint"
                          }
                        },
                        _vm._l(_vm.funcSelect, function(item) {
                          return _c("el-option", {
                            key: item.id,
                            attrs: { label: item.label, value: item.value }
                          })
                        }),
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              ),
              _c("el-col", { attrs: { span: 7 } })
            ],
            1
          ),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 24, align: "right" } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-success",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.save")) + " ")]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _c("cus-form-title", {
        attrs: {
          label: _vm.$t("preservationTestCaseDefinition.changeCategory")
        }
      }),
      _c("br"),
      _c("br"),
      _c("cus-table-title", {
        attrs: {
          label: _vm.$t("preservationTestCaseDefinition.policyCustomers")
        }
      }),
      _c(
        "el-table",
        {
          staticClass: "wraper-table",
          attrs: {
            data: _vm.configs10,
            align: "center",
            border: "",
            "element-loading-text": "Loading",
            fit: "",
            "highlight-current-row": "",
            size: "mini"
          }
        },
        [
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("table.select"),
              align: "center",
              width: "50"
            },
            scopedSlots: _vm._u([
              {
                key: "default",
                fn: function(scope) {
                  return [
                    _c(
                      "el-radio-group",
                      {
                        model: {
                          value: _vm.selectConfigs8,
                          callback: function($$v) {
                            _vm.selectConfigs8 = $$v
                          },
                          expression: "selectConfigs8"
                        }
                      },
                      [
                        _c(
                          "span",
                          [
                            _c(
                              "el-radio",
                              {
                                attrs: { label: scope.row },
                                on: { change: function($event) {} }
                              },
                              [_vm._v(_vm._s(""))]
                            )
                          ],
                          1
                        )
                      ]
                    )
                  ]
                }
              }
            ])
          }),
          _c("el-table-column", {
            attrs: { label: _vm.$t("table.id"), align: "center", type: "index" }
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.customerRole"),
              align: "center",
              prop: ""
            }
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.customerSequence"),
              align: "center",
              prop: ""
            }
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.customerNumber1"),
              align: "center",
              prop: ""
            }
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.occupationGrade"),
              align: "center",
              prop: ""
            }
          }),
          _c("el-table-column", {
            attrs: {
              label: _vm.$t("preservationTestCaseDefinition.changeMark"),
              align: "center",
              prop: ""
            }
          })
        ],
        1
      ),
      _c("br"),
      _c("br"),
      _c(
        "el-form",
        {
          ref: "insuredForm",
          attrs: { model: _vm.configsForm10, "label-width": "auto" }
        },
        [
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "contNo" } },
                    [
                      _c("el-input", {
                        attrs: { clearable: "", disabled: "" },
                        model: {
                          value: _vm.configsForm10.contNo,
                          callback: function($$v) {
                            _vm.$set(_vm.configsForm10, "contNo", $$v)
                          },
                          expression: "configsForm10.contNo"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "contNo" } },
                    [
                      _c(
                        "el-select",
                        {
                          staticClass: "filter-item",
                          attrs: {
                            placeholder: _vm.$t("i18nView.selectPlaceholder"),
                            clearable: ""
                          },
                          model: {
                            value: _vm.configsForm10.testPoint,
                            callback: function($$v) {
                              _vm.$set(_vm.configsForm10, "testPoint", $$v)
                            },
                            expression: "configsForm10.testPoint"
                          }
                        },
                        _vm._l(_vm.funcSelect, function(item) {
                          return _c("el-option", {
                            key: item.id,
                            attrs: { label: item.label, value: item.value }
                          })
                        }),
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              ),
              _c("el-col", { attrs: { span: 7 } })
            ],
            1
          ),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 19, align: "right" } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-plus",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.add")) + " ")]
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { offset: 1, span: 4 } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-minus",
                        size: "small",
                        type: "danger"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.cancel")) + " ")]
                  )
                ],
                1
              )
            ],
            1
          ),
          _c("br"),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 24, align: "right" } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-success",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.save")) + " ")]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _c("cus-form-title", {
        attrs: { label: _vm.$t("preservationTestCaseDefinition.changePayment") }
      }),
      _c("br"),
      _c("br"),
      _c(
        "el-form",
        {
          ref: "insuredForm",
          attrs: { model: _vm.dataForm3, "label-width": "auto" }
        },
        [
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "testPoint" } },
                    [
                      _c("el-input", {
                        attrs: { clearable: "", disabled: "" },
                        model: {
                          value: _vm.dataForm3.contNo,
                          callback: function($$v) {
                            _vm.$set(_vm.dataForm3, "contNo", $$v)
                          },
                          expression: "dataForm3.contNo"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "testPoint" } },
                    [
                      _c("el-input", {
                        attrs: { clearable: "", disabled: "" },
                        model: {
                          value: _vm.dataForm3.contNo,
                          callback: function($$v) {
                            _vm.$set(_vm.dataForm3, "contNo", $$v)
                          },
                          expression: "dataForm3.contNo"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "contNo" } },
                    [
                      _c(
                        "el-select",
                        {
                          staticClass: "filter-item",
                          attrs: {
                            placeholder: _vm.$t("i18nView.selectPlaceholder"),
                            clearable: ""
                          },
                          model: {
                            value: _vm.dataForm3.testPoint,
                            callback: function($$v) {
                              _vm.$set(_vm.dataForm3, "testPoint", $$v)
                            },
                            expression: "dataForm3.testPoint"
                          }
                        },
                        _vm._l(_vm.funcSelect, function(item) {
                          return _c("el-option", {
                            key: item.id,
                            attrs: { label: item.label, value: item.value }
                          })
                        }),
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          ),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 24, align: "right" } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-success",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.save")) + " ")]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _c("cus-form-title", {
        attrs: {
          label: _vm.$t("preservationTestCaseDefinition.insuranceReduction")
        }
      }),
      _c("br"),
      _c("br"),
      _c(
        "el-form",
        {
          ref: "insuredForm",
          attrs: { model: _vm.dataForm4, "label-width": "auto" }
        },
        [
          _c(
            "el-row",
            { attrs: { gutter: 10 } },
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    {
                      attrs: {
                        label: _vm.$t("i18nView.originalCoverage"),
                        prop: "testPoint"
                      }
                    },
                    [
                      _c("el-input", {
                        attrs: { clearable: "", disabled: "" },
                        model: {
                          value: _vm.dataForm4.contNo,
                          callback: function($$v) {
                            _vm.$set(_vm.dataForm4, "contNo", $$v)
                          },
                          expression: "dataForm4.contNo"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "testPoint" } },
                    [
                      _c("el-input", {
                        attrs: { clearable: "", disabled: "" },
                        model: {
                          value: _vm.dataForm4.contNo,
                          callback: function($$v) {
                            _vm.$set(_vm.dataForm4, "contNo", $$v)
                          },
                          expression: "dataForm4.contNo"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    {
                      attrs: {
                        label: _vm.$t("i18nView.subMoney"),
                        prop: "contNo"
                      }
                    },
                    [
                      _c("el-input", {
                        attrs: { clearable: "" },
                        model: {
                          value: _vm.dataForm4.contNo,
                          callback: function($$v) {
                            _vm.$set(_vm.dataForm4, "contNo", $$v)
                          },
                          expression: "dataForm4.contNo"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          ),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 24, align: "right" } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-success",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.save")) + " ")]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _c("cus-form-title", {
        attrs: {
          label: _vm.$t("preservationTestCaseDefinition.paymentReduced")
        }
      }),
      _c("br"),
      _c("br"),
      _c(
        "el-form",
        {
          ref: "insuredForm",
          attrs: { model: _vm.dataForm5, "label-width": "auto" }
        },
        [
          _c(
            "el-row",
            { attrs: { gutter: 10 } },
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "testPoint" } },
                    [
                      _c(
                        "el-input",
                        {
                          attrs: { clearable: "" },
                          model: {
                            value: _vm.dataForm5.contNo,
                            callback: function($$v) {
                              _vm.$set(_vm.dataForm5, "contNo", $$v)
                            },
                            expression: "dataForm5.contNo"
                          }
                        },
                        [
                          _c("template", { slot: "suffix" }, [
                            _vm._v(_vm._s(_vm.$t("i18nView.yuan")))
                          ])
                        ],
                        2
                      )
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "testPoint" } },
                    [
                      _c(
                        "el-input",
                        {
                          attrs: { clearable: "" },
                          model: {
                            value: _vm.dataForm5.contNo,
                            callback: function($$v) {
                              _vm.$set(_vm.dataForm5, "contNo", $$v)
                            },
                            expression: "dataForm5.contNo"
                          }
                        },
                        [
                          _c("template", { slot: "suffix" }, [
                            _vm._v(_vm._s(_vm.$t("i18nView.yuan")))
                          ])
                        ],
                        2
                      )
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "contNo" } },
                    [
                      _c(
                        "el-input",
                        {
                          attrs: { clearable: "" },
                          model: {
                            value: _vm.dataForm5.contNo,
                            callback: function($$v) {
                              _vm.$set(_vm.dataForm5, "contNo", $$v)
                            },
                            expression: "dataForm5.contNo"
                          }
                        },
                        [
                          _c("template", { slot: "suffix" }, [
                            _vm._v(_vm._s(_vm.$t("i18nView.yuan")))
                          ])
                        ],
                        2
                      )
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          ),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "contNo" } },
                    [
                      _c(
                        "el-row",
                        [
                          _c(
                            "el-input",
                            {
                              staticStyle: { width: "110px" },
                              attrs: { clearable: "" },
                              model: {
                                value: _vm.dataForm5.contNo,
                                callback: function($$v) {
                                  _vm.$set(_vm.dataForm5, "contNo", $$v)
                                },
                                expression: "dataForm5.contNo"
                              }
                            },
                            [
                              _c("template", { slot: "suffix" }, [
                                _vm._v(_vm._s(_vm.$t("i18nView.year")))
                              ])
                            ],
                            2
                          ),
                          _c(
                            "el-input",
                            {
                              staticStyle: { width: "110px" },
                              attrs: { clearable: "" },
                              model: {
                                value: _vm.dataForm5.contNo,
                                callback: function($$v) {
                                  _vm.$set(_vm.dataForm5, "contNo", $$v)
                                },
                                expression: "dataForm5.contNo"
                              }
                            },
                            [
                              _c("template", { slot: "suffix" }, [
                                _vm._v(_vm._s(_vm.$t("i18nView.month")))
                              ])
                            ],
                            2
                          )
                        ],
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              ),
              _c("el-col", { attrs: { span: 7 } }),
              _c("el-col", { attrs: { span: 7 } })
            ],
            1
          ),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 24, align: "right" } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-success",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.save")) + " ")]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _c("cus-form-title", {
        attrs: {
          label: _vm.$t("preservationTestCaseDefinition.periodSurrender")
        }
      }),
      _c("br"),
      _c("br"),
      _c(
        "el-form",
        {
          ref: "insuredForm",
          attrs: { model: _vm.dataForm6, "label-width": "auto" }
        },
        [
          _c(
            "el-row",
            { attrs: { gutter: 10 } },
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "testPoint" } },
                    [
                      _c("el-input", {
                        attrs: { clearable: "", disabled: "" },
                        model: {
                          value: _vm.dataForm6.contNo,
                          callback: function($$v) {
                            _vm.$set(_vm.dataForm6, "contNo", $$v)
                          },
                          expression: "dataForm6.contNo"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "testPoint" } },
                    [
                      _c("el-date-picker", {
                        attrs: {
                          "value-format": "yyyy-MM-dd",
                          placeholder: _vm.$t("i18nView.selectDate"),
                          type: "date"
                        },
                        model: {
                          value: _vm.dataForm6.date,
                          callback: function($$v) {
                            _vm.$set(_vm.dataForm6, "date", $$v)
                          },
                          expression: "dataForm6.date"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "contNo" } },
                    [
                      _c(
                        "el-input",
                        {
                          attrs: { clearable: "" },
                          model: {
                            value: _vm.dataForm6.contNo,
                            callback: function($$v) {
                              _vm.$set(_vm.dataForm6, "contNo", $$v)
                            },
                            expression: "dataForm6.contNo"
                          }
                        },
                        [
                          _c("template", { slot: "suffix" }, [
                            _vm._v(_vm._s(_vm.$t("i18nView.yuan")))
                          ])
                        ],
                        2
                      )
                    ],
                    1
                  )
                ],
                1
              )
            ],
            1
          ),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 24, align: "right" } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-success",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.save")) + " ")]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _c("cus-form-title", {
        attrs: { label: _vm.$t("preservationTestCaseDefinition.surrender") }
      }),
      _c("br"),
      _c("br"),
      _c(
        "el-form",
        {
          ref: "insuredForm",
          attrs: { model: _vm.dataForm7, "label-width": "auto" }
        },
        [
          _c(
            "el-row",
            { attrs: { gutter: 10 } },
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "testPoint" } },
                    [
                      _c("el-date-picker", {
                        attrs: {
                          "value-format": "yyyy-MM-dd",
                          placeholder: _vm.$t("i18nView.selectDate"),
                          type: "date"
                        },
                        model: {
                          value: _vm.dataForm7.date,
                          callback: function($$v) {
                            _vm.$set(_vm.dataForm7, "date", $$v)
                          },
                          expression: "dataForm7.date"
                        }
                      })
                    ],
                    1
                  )
                ],
                1
              ),
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "contNo" } },
                    [
                      _c(
                        "el-row",
                        [
                          _c(
                            "el-input",
                            {
                              staticStyle: { width: "110px" },
                              attrs: { clearable: "" },
                              model: {
                                value: _vm.dataForm7.contNo,
                                callback: function($$v) {
                                  _vm.$set(_vm.dataForm7, "contNo", $$v)
                                },
                                expression: "dataForm7.contNo"
                              }
                            },
                            [
                              _c("template", { slot: "suffix" }, [
                                _vm._v(_vm._s(_vm.$t("i18nView.year")))
                              ])
                            ],
                            2
                          ),
                          _c(
                            "el-input",
                            {
                              staticStyle: { width: "110px" },
                              attrs: { clearable: "" },
                              model: {
                                value: _vm.dataForm7.contNo,
                                callback: function($$v) {
                                  _vm.$set(_vm.dataForm7, "contNo", $$v)
                                },
                                expression: "dataForm7.contNo"
                              }
                            },
                            [
                              _c("template", { slot: "suffix" }, [
                                _vm._v(_vm._s(_vm.$t("i18nView.month")))
                              ])
                            ],
                            2
                          )
                        ],
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              ),
              _c("el-col", { attrs: { span: 7 } })
            ],
            1
          ),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 24, align: "right" } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-success",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.save")) + " ")]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _c("cus-form-title", {
        attrs: { label: _vm.$t("preservationTestCaseDefinition.currentPrice") }
      }),
      _c("br"),
      _c("br"),
      _c(
        "el-form",
        {
          ref: "insuredForm",
          attrs: { model: _vm.dataForm8, "label-width": "auto" }
        },
        [
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "contNo" } },
                    [
                      _c(
                        "el-row",
                        [
                          _c(
                            "el-input",
                            {
                              staticStyle: { width: "110px" },
                              attrs: { clearable: "" },
                              model: {
                                value: _vm.dataForm8.contNo,
                                callback: function($$v) {
                                  _vm.$set(_vm.dataForm8, "contNo", $$v)
                                },
                                expression: "dataForm8.contNo"
                              }
                            },
                            [
                              _c("template", { slot: "suffix" }, [
                                _vm._v(_vm._s(_vm.$t("i18nView.year")))
                              ])
                            ],
                            2
                          ),
                          _c(
                            "el-input",
                            {
                              staticStyle: { width: "110px" },
                              attrs: { clearable: "" },
                              model: {
                                value: _vm.dataForm8.contNo,
                                callback: function($$v) {
                                  _vm.$set(_vm.dataForm8, "contNo", $$v)
                                },
                                expression: "dataForm8.contNo"
                              }
                            },
                            [
                              _c("template", { slot: "suffix" }, [
                                _vm._v(_vm._s(_vm.$t("i18nView.month")))
                              ])
                            ],
                            2
                          )
                        ],
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              ),
              _c("el-col", { attrs: { span: 7 } }),
              _c("el-col", { attrs: { span: 7 } })
            ],
            1
          ),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 24, align: "right" } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-success",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.save")) + " ")]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _c("cus-form-title", {
        attrs: {
          label: _vm.$t("preservationTestCaseDefinition.annuityCalculation")
        }
      }),
      _c("br"),
      _c("br"),
      _c(
        "el-form",
        {
          ref: "insuredForm",
          attrs: { model: _vm.dataForm9, "label-width": "auto" }
        },
        [
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 7 } },
                [
                  _c(
                    "el-form-item",
                    { attrs: { prop: "contNo" } },
                    [
                      _c(
                        "el-row",
                        [
                          _c(
                            "el-input",
                            {
                              staticStyle: { width: "110px" },
                              attrs: { clearable: "" },
                              model: {
                                value: _vm.dataForm9.contNo,
                                callback: function($$v) {
                                  _vm.$set(_vm.dataForm9, "contNo", $$v)
                                },
                                expression: "dataForm9.contNo"
                              }
                            },
                            [
                              _c("template", { slot: "suffix" }, [
                                _vm._v(_vm._s(_vm.$t("i18nView.year")))
                              ])
                            ],
                            2
                          ),
                          _c(
                            "el-input",
                            {
                              staticStyle: { width: "110px" },
                              attrs: { clearable: "" },
                              model: {
                                value: _vm.dataForm9.contNo,
                                callback: function($$v) {
                                  _vm.$set(_vm.dataForm9, "contNo", $$v)
                                },
                                expression: "dataForm9.contNo"
                              }
                            },
                            [
                              _c("template", { slot: "suffix" }, [
                                _vm._v(_vm._s(_vm.$t("i18nView.month")))
                              ])
                            ],
                            2
                          )
                        ],
                        1
                      )
                    ],
                    1
                  )
                ],
                1
              ),
              _c("el-col", { attrs: { span: 7 } }),
              _c("el-col", { attrs: { span: 7 } })
            ],
            1
          ),
          _c(
            "el-row",
            [
              _c(
                "el-col",
                { attrs: { span: 24, align: "right" } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-success",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: function($event) {} }
                    },
                    [_vm._v(" " + _vm._s(_vm.$t("table.save")) + " ")]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      ),
      _c("cus-form-title", {
        attrs: {
          label: _vm.$t("preservationTestCaseDefinition.paymentCalculation")
        }
      }),
      _c("br"),
      _c("br"),
      _c(
        "el-row",
        { staticStyle: { "margin-top": "35px" } },
        [
          _c(
            "el-col",
            { attrs: { span: 24, align: "right" } },
            [
              _c(
                "el-button",
                {
                  directives: [
                    {
                      name: "auth",
                      rawName: "v-auth",
                      value: "renewal-test:saveCaseDef",
                      expression: "'renewal-test:saveCaseDef'"
                    }
                  ],
                  attrs: {
                    icon: "el-icon-success",
                    size: "small",
                    type: "primary"
                  },
                  on: { click: _vm.saveCaseDef }
                },
                [
                  _vm._v(
                    " " +
                      _vm._s(
                        this.testCaseUpdateFlag
                          ? _vm.$t("table.update")
                          : _vm.$t("table.save")
                      ) +
                      " "
                  )
                ]
              )
            ],
            1
          )
        ],
        1
      ),
      _c(
        "el-dialog",
        {
          directives: [{ name: "dialog-drag", rawName: "v-dialog-drag" }],
          attrs: {
            "close-on-click-modal": false,
            "show-close": true,
            visible: _vm.dialogTableVisible1,
            center: "",
            top: "8vh",
            width: "1200px"
          },
          on: {
            "update:visible": function($event) {
              _vm.dialogTableVisible1 = $event
            }
          }
        },
        [
          _c(
            "div",
            [
              _c(
                "span",
                {
                  staticStyle: { cursor: "pointer" },
                  on: { click: _vm.back1 }
                },
                [
                  _c(
                    "i",
                    {
                      staticClass: "el-icon-back",
                      staticStyle: { "margin-right": "5px" }
                    },
                    [_vm._v(_vm._s(_vm.$t("table.back")))]
                  )
                ]
              ),
              _c("el-divider", { attrs: { direction: "vertical" } }),
              _c("label", [
                _vm._v(
                  _vm._s(
                    _vm.$t("preservationTestCaseDefinition.testCaseNewUpload")
                  )
                )
              ])
            ],
            1
          ),
          _c("hr"),
          _c("br"),
          _c("cus-commodity-info"),
          _c(
            "el-row",
            { staticStyle: { "margin-top": "15px", "margin-bottom": "15px" } },
            [
              _c(
                "el-col",
                { attrs: { span: 24, align: "left" } },
                [
                  _c(
                    "el-button",
                    {
                      directives: [
                        {
                          name: "auth",
                          rawName: "v-auth",
                          value: "new-single-test:downloadTemplate",
                          expression: "'new-single-test:downloadTemplate'"
                        }
                      ],
                      attrs: {
                        icon: "el-icon-download",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: _vm.templateDownload }
                    },
                    [
                      _vm._v(
                        " " +
                          _vm._s(
                            _vm.$t(
                              "preservationTestCaseDefinition.templateDownload"
                            )
                          ) +
                          " "
                      )
                    ]
                  )
                ],
                1
              )
            ],
            1
          ),
          _c("div", { staticClass: "divclass", attrs: { align: "left" } }, [
            _c(
              "div",
              {
                staticStyle: {
                  "margin-left": "18px",
                  "margin-top": "18px",
                  "margin-bottom": "18px"
                }
              },
              [
                _c(
                  "el-form",
                  { attrs: { id: "uploadForm" } },
                  [
                    _c(
                      "el-form-item",
                      [
                        _c(
                          "el-upload",
                          {
                            ref: "upload",
                            attrs: {
                              "auto-upload": false,
                              "file-list": _vm.fileList,
                              limit: 1,
                              "on-change": _vm.handleChange,
                              "on-remove": _vm.handleRemove,
                              action: "",
                              drag: "",
                              multiple: ""
                            }
                          },
                          [
                            _c("i", { staticClass: "el-icon-upload" }),
                            _c("div", { staticClass: "el-upload__text" }, [
                              _vm._v(_vm._s(_vm.$t("i18nView.uploadText1"))),
                              _c("em", [
                                _vm._v(_vm._s(_vm.$t("i18nView.uploadText2")))
                              ])
                            ]),
                            _c("div", { staticClass: "el-upload__text" }, [
                              _vm._v(
                                _vm._s(_vm.$t("i18nView.chooseOverClick")) +
                                  '"' +
                                  _vm._s(_vm.$t("table.upload")) +
                                  '"' +
                                  _vm._s(_vm.$t("i18nView.button"))
                              )
                            ]),
                            _c(
                              "div",
                              {
                                staticClass: "el-upload__tip",
                                attrs: { slot: "tip" },
                                slot: "tip"
                              },
                              [
                                _vm._v(
                                  _vm._s(_vm.$t("i18nView.onlyUploadModelFile"))
                                )
                              ]
                            )
                          ]
                        )
                      ],
                      1
                    )
                  ],
                  1
                )
              ],
              1
            )
          ]),
          _c(
            "el-row",
            { staticStyle: { "margin-top": "35px" } },
            [
              _c(
                "el-col",
                { attrs: { span: 24, align: "right" } },
                [
                  _c(
                    "el-button",
                    {
                      attrs: {
                        icon: "el-icon-upload",
                        size: "small",
                        type: "primary"
                      },
                      on: { click: _vm.testCaseUpload }
                    },
                    [
                      _vm._v(
                        " " +
                          _vm._s(
                            _vm.$t("preservationTestCaseDefinition.upload")
                          ) +
                          " "
                      )
                    ]
                  )
                ],
                1
              )
            ],
            1
          )
        ],
        1
      )
    ],
    1
  )
}
var staticRenderFns = []
render._withStripped = true

export { render, staticRenderFns }"}]}