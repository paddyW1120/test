{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\basicinfo\\pdtemppdfile\\index.vue?vue&type=style&index=0&id=89f10730&lang=scss&scoped=true&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\basicinfo\\pdtemppdfile\\index.vue","mtime":1609847106561},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":1706753188288},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1706753191924},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\postcss-loader\\src\\index.js","mtime":1706753189537},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1706753187424},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCg0KLmRpdmNsYXNzIHsNCiAgYm9yZGVyOiAxcHggc29saWQgIzAwMDAwMDJlOw0KICB3aWR0aDogNzM1cHg7DQogIGhlaWdodDogYXV0bzsNCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappingstBA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/basicinfo/pdtemppdfile","sourcesContent":["<template>\r\n  <cus-wraper>\r\n    <el-form ref=\"selectForm\" :model=\"selectForm\" label-width=\"auto\">\r\n      <el-row :gutter=\"20\">\r\n        <cus-col :span=\"8\">\r\n          <el-form-item :label=\"$t('pdtempPdFile.pdDetailType')\">\r\n            <cus-select v-model=\"searchpdRegionType\" :codetype=\"'ProductCategory'\" clearable\r\n                        filterable @change=\"selectedDetailTypeChanged\"></cus-select>\r\n          </el-form-item>\r\n        </cus-col>\r\n        <cus-col :span=\"8\">\r\n          <el-form-item :label=\"$t('pdtempPdFile.product')\">\r\n            <el-select v-model=\"selectForm.pdCode\" clearable filterable @change=\"editionSelect\">\r\n              <el-option\r\n                v-for=\"(item,index) in selectData\"\r\n                :key=\"index\"\r\n                :label=\"item.pdCode+':'+item.pdName\"\r\n                :value=\"item.pdCode\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </cus-col>\r\n        <cus-col :span=\"8\">\r\n          <el-form-item :label=\"$t('customComponents.pdEdition')\" prop=\"pdEdition\">\r\n            <el-select v-model=\"selectForm.pdEdition\" clearable filterable>\r\n              <el-option\r\n                v-for=\"(item,index) in selectEdition\"\r\n                :key=\"index\"\r\n                :label=\"item.pdEdition\"\r\n                :value=\"item.pdEdition\">\r\n              </el-option>\r\n            </el-select>\r\n          </el-form-item>\r\n        </cus-col>\r\n      </el-row>\r\n      <el-row :gutter=\"20\">\r\n        <cus-col :span=\"8\">\r\n          <el-form-item :label=\"$t('pdtempPdFile.pdFileType')\">\r\n            <cus-cascader v-model=\"selectForm.pdFileType\" :codetype=\"'pdfiletype'\" :placeholder=\"$t('pdtempPdFile.pdFileType')\"\r\n                          class=\"cusSelect\" clearable></cus-cascader>\r\n          </el-form-item>\r\n        </cus-col>\r\n          <cus-col :span=\"8\">\r\n              <el-form-item :label=\"$t('pdtempPdFile.pdFileName')\">\r\n                  <el-input clearable v-model=\"selectForm.pdFileName\"></el-input>\r\n              </el-form-item>\r\n          </cus-col>\r\n        <cus-btn-wrapper>\r\n          <el-button  size=\"small\" v-auth=\"'pdtemp-pd-file:queryData'\" icon=\"el-icon-search\"  type=\"primary\"\r\n                      @click=\"searchDataByCondition\">{{ $t('pdtempPdFile.search') }}\r\n          </el-button>\r\n        </cus-btn-wrapper>\r\n      </el-row>\r\n    </el-form>\r\n    <cus-table-title :label=\"$t('pdtempPdFile.productFile')\"/>\r\n    <el-table :data=\"tableData\" border element-loading-text=\"Loading\" fit highlight-current-row max-height=\"500\"\r\n              size=\"mini\" style=\"width: 100%\">\r\n      <el-table-column :label=\"$t('table.id')\" align=\"center\" type=\"index\"></el-table-column>\r\n      <el-table-column :label=\"$t('i18nView.pdCode')\" align=\"center\" prop=\"pdCode\" sortable></el-table-column>\r\n      <el-table-column :label=\"$t('i18nView.pdName')\" align=\"center\" prop=\"pdName\"></el-table-column>\r\n      <el-table-column :label=\"$t('customComponents.pdEdition')\" align=\"center\"\r\n                       prop=\"pdEdition\"></el-table-column>\r\n      <el-table-column :filter-method=\"filterHandler\" :filters=\"pdFileTypeFilters\" :label=\"$t('pdtempPdFile.pdFileType')\"\r\n                       align=\"center\"\r\n                       prop=\"pdFileType\">\r\n        <template v-slot=\"scope\">{{ scope.row.pdFileType | filter_getFileType }}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('pdtempPdFile.pdFileName')\" align=\"center\" prop=\"pdFileName\">\r\n        <template v-slot=\"scope\">{{ scope.row.pdFileName | filter_getFileName }}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('pdtempPdFile.pdFileDesc')\" align=\"center\" prop=\"pdFileDesc\"></el-table-column>\r\n      <el-table-column :filter-method=\"filterHandler\" :filters=\"content\" :label=\"$t('pdtempPdFile.pdUpdDepmt')\"\r\n                       align=\"center\" prop=\"pdUpdDepmt\">\r\n        <template v-slot=\"scope\">{{ scope.row.pdUpdDepmt | filter_getUpdDepmt }}</template>\r\n      </el-table-column>\r\n      <el-table-column :label=\"$t('pdtempPdFile.pdUpDate')\" align=\"center\" prop=\"createTime\" sortable></el-table-column>\r\n      <el-table-column :label=\"$t('pdtempPdFile.operating')\" align=\"center\" fixed=\"right\" width=\"80px\">\r\n        <template slot-scope=\"scope\">\r\n          <el-button  size=\"small\" v-auth=\"'pdtemp-pd-file:download'\" class=\"el-icon-download\" type=\"primary\"\r\n                     @click=\"downloadFile(scope.row)\"></el-button>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!-- 上传文件 -->\r\n    <cus-form-title :label=\"$t('i18nView.upLoadFile')\" :showArrow=\"true\" :display=\"false\" @show=\"showUploadFile=!showUploadFile\"\r\n        style=\"margin-top: 55px\"></cus-form-title>\r\n    <el-form v-if=\"showUploadFile\" ref=\"pdFileForm\" :model=\"pdFileForm\" :rules=\"rules\" enctype=\"multipart/form-data\" label-width=\"120px\">\r\n        <el-row :gutter=\"20\">\r\n          <cus-col :span=\"7\">\r\n            <el-form-item :label=\"$t('pdtempPdFile.product')\" prop=\"saveParams\">\r\n              <el-select v-model=\"pdFileForm.pdCode\" clearable filterable @change=\"typePdSelect\">\r\n                <el-option\r\n                  v-for=\"(item,index) in productList\"\r\n                  :key=\"index\"\r\n                  :label=\"item.pdCode+':'+item.pdName\"\r\n                  :value=\"item.pdCode\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </cus-col>\r\n          <cus-col :span=\"7\">\r\n            <el-form-item :label=\"$t('customComponents.pdEdition')\" prop=\"pdEdition\">\r\n              <el-select v-model=\"pdFileForm.pdEdition\" clearable>\r\n                <el-option\r\n                  v-for=\"(item,index) in pdEditionList\"\r\n                  :key=\"index\"\r\n                  :label=\"item.pdEdition\"\r\n                  :value=\"item.pdEdition\">\r\n                </el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </cus-col>\r\n          <cus-col :span=\"7\">\r\n            <el-form-item :label=\"$t('pdtempPdFile.pdUpdDepmt')\" prop=\"pdUpdDepmt\">\r\n              <cus-select v-model=\"pdFileForm.pdUpdDepmt\" :codetype=\"'pddepmt'\" :placeholder=\"$t('pdtempPdFile.pdFileType')\"\r\n                          class=\"cusSelect\" clearable></cus-select>\r\n            </el-form-item>\r\n          </cus-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\">\r\n          <cus-col :span=\"7\">\r\n            <el-form-item :label=\"$t('pdtempPdFile.pdFileType')\" prop=\"pdFileType\">\r\n              <cus-cascader v-model=\"pdFileForm.pdFileType\" :codetype=\"'pdfiletype'\" class=\"cusSelect\"\r\n                            clearable @change=\"clearMass\"></cus-cascader>\r\n            </el-form-item>\r\n          </cus-col>\r\n          <cus-col :span=\"14\">\r\n            <el-form-item :label=\"$t('pdtempPdFile.pdFilePurp')\" prop=\"pdFilePurp\">\r\n              <cus-checkbox v-model=\"pdFileForm.pdFilePurp\" :codetype=\"'pdpurp'\" ></cus-checkbox>\r\n            </el-form-item>\r\n          </cus-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\">\r\n          <cus-col :span=\"14\">\r\n            <el-form-item :label=\"$t('pdtempPdFile.pdFileDesc')\" prop=\"pdFileDesc\">\r\n              <el-input v-model=\"pdFileForm.pdFileDesc\" class=\"longInput\" maxlength=\"130\" show-word-limit\r\n                        type=\"textarea\">\r\n              </el-input>\r\n            </el-form-item>\r\n          </cus-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\">\r\n            <cus-col :span=\"12\">\r\n                <el-form-item :label=\"$t('pdtempPdFile.file')\">\r\n                    <el-form id=\"uploadForm\">\r\n                        <el-form-item>\r\n                            <el-upload ref=\"upload\" :auto-upload=\"false\" :file-list=\"fileList\" :on-change=\"handleChange\"\r\n                                       :on-remove=\"handleRemove\" action=\"\" drag multiple>\r\n                                <i class=\"el-icon-upload\"></i>\r\n                                <div class=\"el-upload__text\">{{$t('i18nView.uploadText1')}}<em>{{$t('i18nView.uploadText2')}}</em></div>\r\n                                <div class=\"el-upload__text\">{{$t('i18nView.chooseOverClick')}}\"{{ $t('table.upload') }}\"{{$t('i18nView.button')}}</div>\r\n                                <!--              <div class=\"el-upload__tip\" slot=\"tip\">只能上传jpg/png文件，且不超过500kb</div>-->\r\n                            </el-upload>\r\n                        </el-form-item>\r\n                    </el-form>\r\n                </el-form-item>\r\n            </cus-col>\r\n        </el-row>\r\n        <el-row :gutter=\"20\">\r\n            <el-form-item align=\"right\">\r\n                <el-button  size=\"small\" v-auth=\"'pdtemp-pd-cv:upLoadCvTable'\" type=\"primary\" @click=\"submitForm\"><i\r\n                        class=\"el-icon-upload\"></i>\r\n                    {{ $t('table.save') }}\r\n                </el-button>\r\n                <el-button  size=\"small\" v-auth=\"'pdtemp-pd-cv:upLoadCvTable'\" type=\"primary\" @click=\"clearUploadForm\"><i\r\n                        class=\"el-icon-refresh\"></i>\r\n                    {{ $t('table.refresh') }}\r\n                </el-button>\r\n            </el-form-item>\r\n        </el-row>\r\n    </el-form>\r\n\r\n  </cus-wraper>\r\n</template>\r\n<script>\r\n\r\nimport {addPdtempPdFile, downloadFile, queryDataPdtempPdFile, uploadFile, queryPdFileName, queryPdFileEdition} from '@/api/basicinfo/pdtemppdfile'\r\nimport {findAllProductByPdDetailType,findAllProductByPdDetailType1} from \"@/api/basicinfo/pdclaimverification\"\r\n\r\nlet _this\r\nexport default {\r\n  name: 'pdtempPdFile',\r\n  filters: {\r\n    filter_getFileType(code) {\r\n      if (code != null) {\r\n        return _this.getCascaderCodeName('pdfiletype', code);\r\n      }\r\n    },\r\n    filter_getFileName(code) {\r\n      if (code != null) {\r\n        let filename = JSON.parse(code)\r\n        let rename = ''\r\n        for (let i = 0; i < filename.length; i++) {\r\n          if (i === filename.length - 1) {\r\n            rename += filename[i]\r\n          } else {\r\n            rename += filename[i] + \"; \"\r\n          }\r\n        }\r\n        return rename\r\n      }\r\n    },\r\n    filter_getUpdDepmt(code) {\r\n      if (code != null) {\r\n        return _this.getCodeName('pddepmt', code)\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    _this = this\r\n    return {\r\n      searchpdRegionType: '',\r\n\t    searchpdRegionTypeUpdate: '',\r\n\t    productOriginalList: [],\r\n\t    pdEditionList: [],\r\n      slEditionFilter: [],\r\n      url: 'http://localhost:8089/api/pdtemp-pd-file/upLoad',\r\n      upLoadFile: '',\r\n      showUploadFile: false,\r\n      showUploadIcon: 'el-icon-arrow-down',\r\n      file: {},\r\n      fileList: [],\r\n      pdFileTypeFilters: [],\r\n      content: [],// 表格  过滤  选项\r\n\t    productList: [],// 保存  产品 下拉选\r\n\t    pdEditionList: [],\r\n      pdEditionInfo: [],// 保存  版别 下拉选\r\n      selectEdition: [],// 搜索  版别 下拉选\r\n      selectData: [],// 搜索  产品 下拉选\r\n      selectData2: [],\r\n      uploadFlag: false,\r\n      //表格数据\r\n      tableData: [],\r\n      //查询参数\r\n      params: {\r\n        pdCode: '',\r\n        pdName: '',\r\n\t      pdEdition: ''\r\n      },\r\n      //保存参数\r\n      selectForm: {\r\n        pdCode: '',  //产品编码\r\n        pdName: '',  //产品名称\r\n        pdEdition: '',  //产品版别\r\n        pdFileType: [],  //文件类型\r\n        pdFileName: ''\r\n      },\r\n      pdFileForm: {  //表单数据与后端实体类对应\r\n        id: '', //主键ID\r\n        pdVerId: '1',  //版本id\r\n        pdInfoId: '',  //商品id\r\n        pdCodeType: '',  //商品类型\r\n        pdCode: '',  //产品编码\r\n        pdName: '',  //产品名称\r\n        pdEdition: '',  //产品版别\r\n        pdUpdDepmt: '',  //上传部门\r\n        pdUpdBatch: '',  //上传批次号\r\n        pdFileType: [],  //文件类型\r\n        pdFileDetailType: '',  //文件细类\r\n        pdFileName: [],  //文件名称\r\n        pdFileFormat: '',  //文件格式\r\n        pdFilePurp: [],  //文件用途\r\n        pdFilePath: '',  //文件路径\r\n        pdFileDesc: '',  //文件描述\r\n        saveParams: {\r\n          pdCode: '',\r\n          pdName: ''\r\n        },\r\n      },\r\n      formData: new FormData(),\r\n      //检验规则\r\n      rules: {\r\n        pdCode: [{required: true, message: this.$t('pdtempPdFile.plWriteMess'), trigger: 'blur'}],\r\n        pdName: [{required: true, message: this.$t('pdtempPdFile.plWriteMess'), trigger: 'blur'}],\r\n        saveParams: [{\r\n          required: true,\r\n          message: this.$t('pdtempPdFile.plWriteMess'),\r\n          trigger: 'change'\r\n        }],\r\n        pdEdition: [{required: true, message: this.$t('pdtempPdFile.plWriteMess'), trigger: 'change'}],\r\n        pdUpdDepmt: [{required: true, message: this.$t('pdtempPdFile.plWriteMess'), trigger: 'change'}],\r\n        pdFileType: [{required: true, message: this.$t('pdtempPdFile.plWriteMess'), trigger: ['blur', 'change']}],\r\n        pdFilePurp: [{\r\n          type: 'array',\r\n          required: true,\r\n          message: this.$t('pdtempPdFile.plWriteMess'),\r\n          trigger: ['blur', 'change']\r\n        }]\r\n      },\r\n      dialogVisible: false, //dialog显示还是隐藏\r\n      dialogStatus: '', //表单状态是新增还是修改\r\n      titleMap: {\r\n        update: this.$t('pdtempPdFile.update'),\r\n        create: this.$t('pdtempPdFile.add')\r\n      },\r\n    }\r\n  },\r\n  computed: {},\r\n  created() {\r\n    // this.initQueryTableData();\r\n    // this.$nextTick(() => {\r\n    //   this.$refs[\"pdFileForm\"].clearValidate();\r\n    // })\r\n    // this.queryPdFileName();\r\n\t  this.initProductQueryData();\r\n  },\r\n  watch: {\r\n    'searchpdRegionType'() {\r\n      if (!this.searchpdRegionType) {\r\n        this.selectForm.pdCode = '';\r\n        this.selectForm.pdEdition = '';\r\n      }\r\n    },\r\n    'selectForm.pdCode'() {\r\n      if (!this.selectForm.pdCode) {\r\n        this.selectForm.pdEdition = '';\r\n        this.selectEdition = [];\r\n      }\r\n    },\r\n    tableData() {\r\n      if (this.tableData.length > 0) {\r\n        this.pdFileTypeFilters = [];\r\n        this.tableData.forEach(val => {\r\n          this.pdFileTypeFilters.push({\r\n            text: this.getCascaderCodeName('pdfiletype', val.pdFileType),\r\n            value: val.pdFileType\r\n          });\r\n        });\r\n        //文件类型\r\n        this.pdFileTypeFilters = this.pdFileTypeFilters.reduce(function (prev, element) {\r\n          if (!prev.find(el => el.text == element.text)) {\r\n            prev.push(element);\r\n          }\r\n          return prev;\r\n        }, []);\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n  \tisShowUploadFile(){\r\n      if(!this.showUploadFile){\r\n        this.showUploadIcon = 'el-icon-arrow-up';\r\n      }else{\r\n        this.showUploadIcon = 'el-icon-arrow-down';\r\n      }\r\n      return this.showUploadFile = !this.showUploadFile;\r\n    },\r\n    clearUploadForm(){\r\n        this.$refs.pdFileForm.resetFields();\r\n    },\r\n\t  initProductQueryData(){\r\n\t\t  this.filterProductByNode(this)\r\n\t  },\r\n    uploadFun() {\r\n      if (this.upLoadFile === 'N') {\r\n        this.pdFileForm.saveParams = '';\r\n        this.pdFileForm.pdInfoId = '';\r\n        this.pdFileForm.pdEdition = '';\r\n        this.pdFileForm.pdUpdDepmt = '';\r\n        this.pdFileForm.pdFileType = [];\r\n        this.pdFileForm.pdFileDetailType = '';\r\n        this.pdFileForm.pdUpdBatch = '';\r\n        this.pdFileForm.pdFilePurp = [];\r\n        this.pdFileForm.pdFileDesc = '';\r\n        this.$nextTick(() => {\r\n          this.$refs[\"pdFileForm\"].clearValidate();\r\n        })\r\n      }\r\n    },\r\n    refreshPdFileForm(){\r\n\t    this.pdFileForm.pdCode = '';\r\n\t    this.pdFileForm.pdName = '';\r\n\t    this.pdFileForm.pdEdition = '';\r\n\t    this.pdFileForm.pdVerId = '';\r\n\t    this.pdFileForm.pdInfoId = '';\r\n\t    this.pdFileForm.pdCodeType = '';\r\n\t    this.pdFileForm.pdUpdDepmt = '';\r\n\t    this.pdFileForm.pdUpdBatch = '';\r\n\t    this.pdFileForm.pdFileType = [];\r\n\t    this.pdFileForm.pdFileDetailType = '';\r\n\t    this.pdFileForm.pdFileName = [];\r\n\t    this.pdFileForm.pdFileFormat = '';\r\n\t    this.pdFileForm.pdFilePurp = [];\r\n\t    this.pdFileForm.pdFilePath = '';\r\n\t    this.pdFileForm.pdFileDesc = '';\r\n    },\r\n    selectedDetailTypeChanged(val) {\r\n      let param = {\r\n        pdRegionType: val\r\n      }\r\n      if (\"\".endsWith(val) || val == undefined) {\r\n        return false\r\n      }\r\n      findAllProductByPdDetailType(this.buildRequestData(param)).then(response => {\r\n        this.selectData = []\r\n        let detailTypeOptionList = response.data;\r\n        this.selectData = detailTypeOptionList;\r\n        this.selectForm.pdCode = '';\r\n        this.selectForm.pdEdition = '';\r\n        this.selectEdition = [];\r\n      })\r\n    },\r\n\t  selectedDetailTypeChangedForUpload(val){\r\n\t\t  let param = {\r\n\t\t\t  pdRegionType: val\r\n\t\t  }\r\n\t\t  if (\"\".endsWith(val) || val == undefined) {\r\n\t\t\t  return false\r\n\t\t  }\r\n\t\t  findAllProductByPdDetailType(this.buildRequestData(param)).then(response => {\r\n\t\t\t  this.productList = []\r\n\t\t\t  let detailTypeOptionList = response.data;\r\n\t\t\t  this.productList = detailTypeOptionList;\r\n\t\t\t  this.pdFileForm.pdCode = '';\r\n\t\t\t  this.pdFileForm.pdEdition = '';\r\n\t\t\t  this.pdEditionList = [];\r\n\t\t  })\r\n    },\r\n\t  initProductQueryData(){\r\n  \t\tthis.filterProductByNode(this, '4', true)\r\n    },\r\n    queryPdFileName(){\r\n\t    let param = {\r\n\t\t    pdRegionType: ''\r\n\t    }\r\n\t    findAllProductByPdDetailType1(this.buildRequestData(param)).then(response => {\r\n\t\t    let detailTypeOptionList = response.data;\r\n\t\t    this.pdinfo = detailTypeOptionList;\r\n      });\r\n    },\r\n    /*搜索部分  选择产品，控制版别*/\r\n    editionSelect(val) {\r\n      this.selectEdition = [];\r\n      if (val) {\r\n        for (const valKey of this.selectData) {\r\n          if (val == valKey.pdCode) {\r\n            let edition = {pdCode: '', pdEdition: ''}\r\n            edition.pdCode = valKey.pdCode\r\n            edition.pdEdition = valKey.pdEdition\r\n            this.selectEdition.push(edition);\r\n          }\r\n        }\r\n        this.selectForm.pdEdition = (this.selectEdition[0].pdEdition)\r\n\r\n      }\r\n    },\r\n    /*保存部分  选择产品，控制版别*/\r\n    typePdSelect(val) {\r\n      this.pdEditionList = []\r\n      if (val) {\r\n        for (const valKey of this.productList) {\r\n          if (val === valKey.pdCode) {\r\n            let edition = {pdCode: '', pdEdition: ''}\r\n            edition.pdCode = valKey.pdCode\r\n            edition.pdEdition = valKey.pdEdition\r\n            this.pdEditionList.push(edition)\r\n          }\r\n        }\r\n        this.pdFileForm.pdEdition = (this.pdEditionList[0].pdEdition);\r\n      }\r\n    },\r\n    filterHandler(value, row, column) {\r\n      const property = column['property']\r\n      return row[property] === value\r\n    },\r\n    /*文件类型rules校验*/\r\n    clearMass(rule) {\r\n      if (rule.length > 0) {\r\n        this.rules.pdFileType = [\r\n          {required: false,}\r\n        ]\r\n      } else {\r\n        this.rules.pdFileType = [{\r\n          required: true,\r\n          message: this.$t('pdtempPdFile.plWriteMess'),\r\n          trigger: ['blur', 'change']\r\n        }]\r\n      }\r\n    },\r\n    searchDataByCondition() {\r\n      // if (this.params) {\r\n      //   this.selectForm.pdCode = this.params[0].pdCode\r\n      //   this.selectForm.pdName = this.params[0].pdName\r\n      // } else {\r\n      //   this.selectForm.pdCode = ''\r\n      //   this.selectForm.pdName = ''\r\n      // }\r\n      let map = {\r\n        pdCode: this.selectForm.pdCode,  //产品编码\r\n        pdName: this.selectForm.pdName,  //产品名称\r\n        pdEdition: this.selectForm.pdEdition,  //产品版别\r\n        pdFileType: this.selectForm.pdFileType,  //文件类型\r\n        pdRegionType: this.searchpdRegionType,\r\n        pdFileName: this.selectForm.pdFileName  //文件名称\r\n      }\r\n      queryDataPdtempPdFile(this.buildRequestData(map)).then(res => {\r\n        if (res.code === 200) {\r\n          this.content = []\r\n          this.tableData = res.data.PdtempPdFile\r\n          for (const row of res.data.PdtempPdFile) {\r\n            let filDepmt = {text: '', value: ''}\r\n            filDepmt.text = this.getCodeName('pddepmt', row.pdUpdDepmt, true)\r\n            filDepmt.value = row.pdUpdDepmt\r\n            this.content.push(filDepmt)\r\n          }\r\n          this.content = this.unique(this.content)\r\n        }\r\n      })\r\n    },\r\n    handleResult(response, file, fileList) {\r\n      if (!response.success) {\r\n        this.$message.error('上传文件失败')\r\n      }\r\n    },\r\n    //文件状态改变时的钩子，添加文件、上传成功和上传失败时都会被调用\r\n    handleChange(file, fileList) {\r\n      if (fileList.length > 1) {\r\n        for (let i = 0; i < fileList.length - 1; i++) {\r\n          if (file.name === fileList[i].name) {\r\n            this.$notify.error({\r\n              title: '错误',\r\n              message: '上传文件名不能重复!',\r\n              duration: 2000\r\n            })\r\n            fileList.pop()\r\n          }\r\n        }\r\n      }\r\n      this.fileList = fileList\r\n      //判断文件大小\r\n      if (!(file.size / 1024 / 1024 < 10)) {\r\n        this.$notify.error({\r\n          title: '错误',\r\n          message: '上传文件大小不能超过 10MB!',\r\n          duration: 500\r\n        })\r\n      }\r\n    },\r\n    //文件超出个数限制时的钩子\r\n    handleExceed(files, fileList) {\r\n      this.$notify.warning({\r\n        title: '提示',\r\n        message: '最多上传三个文件,替换请先移除！',\r\n        duration: 1000\r\n      })\r\n    },\r\n    /*初始化加载表格数据*/\r\n    initQueryTableData() {\r\n      queryDataPdtempPdFile(this.buildRequestData(this.selectForm)).then(res => {\r\n        if (res.code === 200) {\r\n          this.tableData = res.data.PdtempPdFile;\r\n          for (const row of res.data.PdtempPdFile) {\r\n            let sdata = {code: '', name: '', edition: ''}\r\n            sdata.code = row.pdCode\r\n            sdata.name = row.pdName\r\n            sdata.edition = row.pdEdition\r\n            let filDepmt = {text: '', value: ''}\r\n            filDepmt.text = this.getCodeName('pddepmt', row.pdUpdDepmt, true)\r\n            filDepmt.value = row.pdUpdDepmt\r\n            this.content.push(filDepmt)\r\n          }\r\n          let selectData2 = res.data.PdtempPdInfo;\r\n          for (const row of res.data.PdtempPdInfo) {\r\n            let info = {code: '', name: '', id: ''}\r\n            info.code = row.pdCode\r\n            info.name = row.pdName\r\n            info.id = row.id;\r\n            this.pdinfo.push(info)\r\n            let edition = {code: '', edition: ''}\r\n            edition.code = row.pdCode\r\n            edition.edition = row.pdEdition\r\n            this.pdEditionInfo.push(edition)\r\n          }\r\n          this.content = this.unique(this.content)\r\n          this.pdinfo = this.uniqueSelect(this.pdinfo)\r\n\r\n          for (const productOption of res.data.PdtempPdFile) {\r\n            for (const product of selectData2) {\r\n              if (productOption.pdCode === product.pdCode) {\r\n                this.selectData.push(productOption)\r\n                break;\r\n              }\r\n            }\r\n          }\r\n          this.selectData = this.selectData.reduce(function (prev, element) {\r\n            if (!prev.find(el => el.pdCode == element.pdCode)) {\r\n              prev.push(element);\r\n            }\r\n            return prev;\r\n          }, []);\r\n        }\r\n      })\r\n    },\r\n    unique(arr) { // 根据唯一标识no来对数组进行过滤\r\n      const res = new Map()  //定义常量 res,值为一个Map对象实例\r\n      //返回arr数组过滤后的结果，结果为一个数组   过滤条件是，如果res中没有某个键，就设置这个键的值为1\r\n      return arr.filter((arr) => !res.has(arr.text) && res.set(arr.text, 1))\r\n    },\r\n    uniqueSelect(arr) { // 根据唯一标识no来对数组进行过滤\r\n      const res = new Map()  //定义常量 res,值为一个Map对象实例\r\n      //返回arr数组过滤后的结果，结果为一个数组   过滤条件是，如果res中没有某个键，就设置这个键的值为1\r\n      return arr.filter((arr) => !res.has(arr.code) && res.set(arr.code, 1))\r\n    },\r\n    searchInProductList(pdCode){\r\n    \tfor(let i=0;i<this.productList.length;i++){\r\n    \t\tlet cProduct = this.productList[i];\r\n    \t\tif(cProduct.pdCode === pdCode){\r\n    \t\t\treturn cProduct;\r\n        }\r\n      }\r\n    },\r\n    /*文件下载*/\r\n    downloadFile(row) {\r\n      let fileNames = JSON.parse(row.pdFileName);\r\n      let paths = JSON.parse(row.pdFilePath)\r\n      for (let i = 0; i < paths.length; i++) {\r\n        let path = paths[i]\r\n        let fileName = fileNames[i]\r\n        downloadFile(this.buildRequestData({\"pdFilePath\": path})).then(response => {\r\n          this.downloadResponseFile(response, fileName)\r\n          this.notifySuccess('下载成功')\r\n        })\r\n      }\r\n    },\r\n    /*文件上传*/\r\n    submitUpload() {\r\n      //判断上传文件，没有给出提示\r\n      if (this.fileList.length === 0) {\r\n        this.notifyError('请选择上传的文件')\r\n      } else {\r\n        let formData = this.uploadUtil(this.fileList);\r\n        uploadFile(formData).then(res => {\r\n          // this.notifySuccess('上传成功');\r\n          this.$refs.upload.clearFiles()\r\n          this.pdFileForm.pdFileName = []\r\n          this.pdFileForm.pdFilePath = res.data.pdFilePath\r\n          if (this.fileList) {\r\n            for (const list of this.fileList) {\r\n              this.pdFileForm.pdFileName.push(list.name)\r\n            }\r\n          }\r\n          let cProduct = this.searchInProductList(this.pdFileForm.pdCode);\r\n\t        this.pdFileForm.pdInfoId = cProduct.id;\r\n\t        this.pdFileForm.pdName = cProduct.pdName;\r\n          // this.pdFileForm.pdInfoId = this.pdFileForm.saveParams[0].id;\r\n          try {\r\n            let map = {\r\n              'input': this.pdFileForm,\r\n              'flag': false,\r\n              'flag1': '0',\r\n            }\r\n            addPdtempPdFile(this.buildRequestData(map)).then(\r\n              res => {\r\n                if (res.code === 200) {\r\n                  if (res.data === false) {\r\n                    this.$confirm(res.message, '警告', {\r\n                      distinguishCancelAndClose: true,\r\n                      confirmButtonText: '覆盖',\r\n                      cancelButtonText: '取消'\r\n                    }).then(() => {\r\n                      let map = {\r\n                        'input': this.pdFileForm,\r\n                        'flag': true,\r\n                        'flag1': '0',\r\n                      }\r\n                      addPdtempPdFile(this.buildRequestData(map)).then(res => {\r\n                        this.notifySuccess(res.message)\r\n                        // this.initQueryTableData()\r\n                        this.$refs.upload.clearFiles()\r\n                        this.fileList = []\r\n                        this.$refs.pdFileForm.resetFields();\r\n                        this.refreshPdFileForm();\r\n\t                      this.searchpdRegionTypeUpdate = '';\r\n\t                      this.productList = [];\r\n                      });\r\n                    }).catch(action => {\r\n                      if (action === 'cancel') {\r\n                        // this.$message({\r\n                        //   type: 'info',\r\n                        //   message: '已取消'\r\n                        // })\r\n\r\n                        let map = {\r\n                          'input': this.pdFileForm,\r\n                          'flag': true,\r\n                          'flag1': '1',\r\n                        }\r\n                        addPdtempPdFile(this.buildRequestData(map)).then(res => {\r\n                          this.notifySuccess(res.message)\r\n                          // this.initQueryTableData()\r\n                          this.$refs.upload.clearFiles()\r\n                          this.fileList = []\r\n\t                        this.$refs.pdFileForm.resetFields();\r\n\t                        this.refreshPdFileForm();\r\n\t                        this.searchpdRegionTypeUpdate = '';\r\n\t                        this.productList = [];\r\n                        });\r\n                      }\r\n                    });\r\n                  } else {\r\n                    this.notifySuccess(res.message)\r\n                    // this.initQueryTableData()\r\n                    this.$refs.upload.clearFiles()\r\n                    this.fileList = []\r\n\t                  this.$refs.pdFileForm.resetFields();\r\n\t                  this.refreshPdFileForm();\r\n\t                  this.searchpdRegionTypeUpdate = '';\r\n\t                  this.productList = [];\r\n                  }\r\n                }\r\n              })\r\n          } catch (e) {\r\n            console.log(e);\r\n          }\r\n        })\r\n      }\r\n    },\r\n    handleRemove(file, fileList) {\r\n      this.fileList = fileList\r\n    },\r\n    submitForm() {\r\n      this.$refs.pdFileForm.validate(valid => {\r\n        if (valid) {\r\n          this.submitUpload()\r\n        }\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n.divclass {\r\n  border: 1px solid #0000002e;\r\n  width: 735px;\r\n  height: auto;\r\n}\r\n</style>\r\n"]}]}