{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\ibrms\\ruleManagement\\ruleMake\\index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\ibrms\\ruleManagement\\ruleMake\\index.vue","mtime":1609847106777},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":1706753188288},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1706753191924},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\postcss-loader\\src\\index.js","mtime":1706753189537},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnNob3dydWxlIHsNCiAgbWFyZ2luLWxlZnQ6IDI1cHg7DQp9DQoNCi5ydWxlQnRuIHsNCiAgbWFyZ2luLWxlZnQ6IDEycHg7DQogIG1hcmdpbi10b3A6IDEwcHg7DQogIG1hcmdpbi1ib3R0b206IDEwcHg7DQp9DQoNCi5oZWFkZXIgew0KICBtYXJnaW4tbGVmdDogMTVweDsNCiAgbWFyZ2luLXRvcDogMTRweDsNCiAgbWFyZ2luLWJvdHRvbTogNHB4Ow0KfQ0KDQouaW5kZXhIZWFkZXIgew0KfQ0KDQoucHJvamVjdCB7DQogIGRpc3BsYXk6IGlubGluZS1ibG9jazsNCiAgY29sb3I6ICM2ZDZkZWE7DQp9DQoNCi5yb3doZWFkZXIgew0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQp9DQoNCi5wcm9qZWN0SW5kZXggew0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQp9DQoNCi5oZWxwIHsNCiAgbWFyZ2luLXJpZ2h0OiAxMnB4Ow0KICBtYXJnaW4tbGVmdDogMTJweDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQouaWYgew0KICBmb250LXdlaWdodDogYm9sZDsNCiAgY29sb3I6ICMxZDJhNmQ7DQp9DQoNCi50aGVuU2tpcCB7DQogIG1hcmdpbi10b3A6IDhweDsNCn0NCg0KLnJ1bGVTZWxlY3Qgew0KICB3aWR0aDogMTQwcHg7DQp9DQoucGFyYW0gew0KICBtYXJnaW4tdG9wOiAyNXB4Ow0KfQ0KLnBhcmFtX3J1bGUgew0KICBtYXJnaW4tdG9wOiAyNXB4Ow0KICBtYXJnaW4tYm90dG9tOiA1MHB4Ow0KICB3aWR0aDogOTAlOw0KfQ0KLmVuZCB7DQogIGNvbG9yOiAjZGQwMDI0Ow0KfQ0KLnRoZW4gew0KICBmb250LXdlaWdodDogYm9sZDsNCiAgY29sb3I6ICMxZDJhNmQ7DQogIG1hcmdpbi10b3A6IDEwcHggIWltcG9ydGFudDsNCn0NCi5pdGVtIHsNCiAgcGFkZGluZzogMTBweDsNCiAgY29sb3I6ICMzMWE4YTM7DQp9DQoucnVsZVJlYWRPbmx5IHsNCiAgcG9pbnRlci1ldmVudHM6IG5vbmU7DQp9DQouYm9tU3R5bGUgew0KICBjb2xvcjogI2QzN2YyMDsNCn0NCi5hZGQgew0KICBjb2xvcjogZGFya29yY2hpZDsNCiAgcGFkZGluZy1yaWdodDogNXB4Ow0KfQ0KLnJ1bGUgew0KICBtYXJnaW4tbGVmdDogMjBweDsNCiAgaGVpZ2h0OiAxMDAlOw0KICBmb250LXNpemU6IDEycHg7DQogIG1hcmdpbi10b3A6IDEwcHg7DQp9DQoucnVsZV9kaXYgew0KICBtYXJnaW4tbGVmdDogNTBweDsNCiAgbWFyZ2luLXRvcDogNTVweDsNCiAgd2lkdGg6IDk0JTsNCiAgZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7DQogIG1pbi1oZWlnaHQ6IDUwMHB4Ow0KfQ0KLnJ1bGVfcXVlcnkgew0KICBtYXJnaW4tbGVmdDogMjBweDsNCiAgbWFyZ2luLXRvcDogMjBweDsNCn0NCi5kaXZpZGVyIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7DQogIG1hcmdpbi1sZWZ0OiA0cHg7DQp9DQoNCi5mb3JtdGl0bGUgew0KICBtYXJnaW4tdG9wOiAxMHB4Ow0KICBmb250LXNpemU6IDEycHggIWltcG9ydGFudDsNCiAgZm9udC13ZWlnaHQ6IGJvbGQ7DQp9DQoNCi50aXRsZWxhcmdlIHsNCiAgZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7DQp9DQoudXBkYXRlUnVsZSB7DQogIGZvbnQtc2l6ZTogOHB4ICFpbXBvcnRhbnQ7DQp9DQouZWwtc2Nyb2xsYmFyX193cmFwIHsNCiAgb3ZlcmZsb3c6IGF1dG8gIWltcG9ydGFudDsNCn0NCi5hcHAtY29udGFpbmVyIHsNCiAgbWFyZ2luLWJvdHRvbTogMjBweCAhaW1wb3J0YW50Ow0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappingssfile":"index.vue","sourceRoot":"src/views/ibrms/ruleManagement/ruleMake","sourcesContent":["<template>\r\n  <cus-wraper>\r\n    <div style=\"min-height:520px\">\r\n      <!--之后修改为 多语言表中查询-->\r\n      <template v-if=\"!query && menu\">\r\n        <cus-page-title-back @backTo=\"goBack\" :isDialog=\"true\" :label=\"$t('ruleMake.info')\" />\r\n      </template>\r\n      <!--  <template v-if=\"!query && !menu\">\r\n           <div>\r\n              <el-row>\r\n                <el-col :span=\"24\">\r\n                  <label>{{$t('ruleMake.info')}}</label>\r\n                </el-col>\r\n              </el-row>\r\n              <hr />\r\n            </div>\r\n        </template>\r\n        <br/>\r\n      <br/>-->\r\n      <el-row>\r\n        <span class=\"formtitle\">\r\n          <el-divider direction=\"vertical\" class=\"divider\"></el-divider>\r\n          <span>{{ruleName}}</span>\r\n        </span>\r\n        <span style=\"margin-left: 5px;\">\r\n          <el-link\r\n            v-if=\"!query && !updateDynamic\"\r\n            class=\"updateRule\"\r\n            type=\"primary\"\r\n            style=\"border-bottom:dashed 1px;\"\r\n            :disabled=\"(updateState ? false:'disabled')\"\r\n            @click=\"updateRule()\"\r\n          >{{$t('ruleMake.updateDecisiontables')}}</el-link>\r\n        </span>\r\n      </el-row>\r\n      <br />\r\n      <div class=\"rule\">\r\n        <span class=\"if\">{{$t('ruleMake.if')}}</span>\r\n        <div class=\"ifSkip\" :class=\"[ruleOnly === true ? 'ruleReadOnly':'']\">\r\n          <!--每一个行if模块-->\r\n          <div class=\"header\" v-for=\"(items,indexItems) in  ruleList\">\r\n            <span\r\n              class=\"add\"\r\n              @click=\"findConnType(items)\"\r\n              v-if=\"indexItems!=0\"\r\n            >{{items.ifConnType?$t('ruleMake.or'):$t('ruleMake.add')}}</span>\r\n\r\n            <ruleParameter\r\n              :params=\"items\"\r\n              :ruleList=\"ruleList\"\r\n              :RuleCacheData=\"RuleCacheData\"\r\n              :ruleMessageInfoBom=\"ruleMessageInfoBom\"\r\n              :paramIndexItems=\"indexItems\"\r\n              :paramLanguage=\"language\"\r\n            ></ruleParameter>\r\n            <template v-if=\"delItemTemp\">\r\n              <span\r\n                class=\"el-icon-circle-close\"\r\n                type=\"primary\"\r\n                size=\"mini\"\r\n                v-if=\"indexItems >=0\"\r\n                @click=\"delItem(indexItems)\"\r\n              ></span>\r\n            </template>\r\n          </div>\r\n          <template v-if=\"addRuleTemp\">\r\n            <div class=\"ruleBtn\">\r\n              <i class=\"el-icon-circle-plus-outline\" size=\"mini\" @click=\"addRule()\"></i>\r\n            </div>\r\n          </template>\r\n        </div>\r\n        <div class=\"then\">{{$t('ruleMake.then')}}</div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <cus-form-title :label=\"$t('ruleMake.dynamicModule')\" :first=\"true\"></cus-form-title>\r\n        <template v-if=\"showButton\">\r\n          <el-button-group>\r\n            <el-button\r\n              size=\"mini\"\r\n              class=\"el-icon\"\r\n              type=\"primary\"\r\n              :disabled=\"(btnState === '1' ? false:'disabled')\"\r\n              @click=\"decisiontable()\"\r\n            >\r\n              <svg-icon icon-class=\"createDecisiontable\" />\r\n              {{$t('ruleMake.generateDecisiontables')}}\r\n            </el-button>\r\n          </el-button-group>\r\n        </template>\r\n        <div :class=\"[menu? 'param_rule':'param']\">\r\n          <template v-if=\"showDynamicTable\">\r\n            <div>\r\n              <dynamicTable\r\n                :list.sync=\"dynamicTableList\"\r\n                :treeRule=\"indexModel.treeRule\"\r\n                :ruleMessageInfo=\"ruleMessageInfoBom\"\r\n                :languages=\"language\"\r\n                :code=\"code\"\r\n                :showMessage=\"showMessage\"\r\n              ></dynamicTable>\r\n            </div>\r\n            <template v-if=\"showButton || updateDynamic || ruleFlag == '3' \">\r\n              <br />\r\n              <br />\r\n              <el-button size=\"mini\" style=\"float: right;\" @click=\"dataFormSubmit()\" type=\"primary\">\r\n                <i class=\"el-icon-success el-icon--left\"></i>\r\n                {{ruleMain.id == '' || this.flag == '3'?$t('ruleMake.save'):$t('ruleMake.update')}}\r\n              </el-button>\r\n            </template>\r\n          </template>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </cus-wraper>\r\n</template>\r\n\r\n<script>\r\nimport SelectSearch from \"@/views/ibrms/ruleManagement/selectSearch\";\r\nimport dynamicTable from \"@/views/ibrms/ruleManagement/dynamicTable\";\r\nimport ruleParameter from \"@/views/ibrms/ruleManagement/ruleParameter\";\r\nimport { mapGetters } from \"vuex\";\r\nimport {\r\n  findBomByLanguage,\r\n  findBomItemByLanguageAndBomId,\r\n  findRuleCommandByLanguageAndCommandType,\r\n  ruleMakeSave,\r\n  ruleInit,\r\n  getComboxData\r\n} from \"@/api/ibrms/ruleMake\";\r\nexport default {\r\n  name: \"ruleMake\",\r\n  data() {\r\n    return {\r\n      language: \"\",\r\n      visible: false,\r\n      showMessage: false,\r\n      tID: \"\",\r\n      wid: \"100%\",\r\n      loading: false,\r\n      indexModel: {\r\n        treeRule: false\r\n      },\r\n      ruleName: \"\",\r\n      showDynamicTable: false,\r\n      dataForm: {},\r\n      ruleList: [],\r\n      loading: false,\r\n      dataForm: {},\r\n      ifSkipParam: [],\r\n      dynamicTableList: {\r\n        paramArr: [],\r\n        paramList: []\r\n      },\r\n      itemCommandType: \"empty\",\r\n      delItemTemp: true,\r\n      addRuleTemp: true,\r\n      when: \"\",\r\n      multivaluedExpression:\" \",\r\n      whenDescribe: \"\",\r\n      decisionRowname: \"dRow\",\r\n      then: \"1\",\r\n      thenDescribe: \"\",\r\n      columnName: [],\r\n      columnType: [],\r\n      ruleOnly: false,\r\n      spanNodeEnabled: true,\r\n      showButton: true,\r\n      RuleCacheData: {\r\n        ruleBomList: [],\r\n        ruleBomItemList: [],\r\n        ruleCommandList: [],\r\n        ruleFunctionList: []\r\n      },\r\n      ruleMessageInfoBom: {},\r\n      ruleUseBomList: [],\r\n      ruleUseFunctionList: [],\r\n      ruleUseCommandList: [],\r\n      btnState: \"1\", //1 可生成   2可修改  3可提交\r\n      sqlStatement: \"\",\r\n      codeVersion: \"0\",\r\n      code: \"\",\r\n      ruleFlag: \"\",\r\n      query: false,\r\n      newCode: \"\",\r\n      ruleMain: {\r\n        id: \"\"\r\n      },\r\n      updateDynamic: false,\r\n      menu: false,\r\n      updateState: false\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"ruleMessages\"])\r\n  },\r\n  props: [\r\n    \"ruleCode\",\r\n    \"flag\",\r\n    \"ruleQuery\",\r\n    \"copyCode\",\r\n    \"updateDynamicTable\",\r\n    \"menuPage\",\r\n    \"performType\"\r\n  ],\r\n  components: {\r\n    dynamicTable,\r\n    SelectSearch,\r\n    ruleParameter\r\n  },\r\n  mounted() {},\r\n  created() {\r\n    this.language = this.$store.state.app.language;\r\n    this.ruleMessageInfoBom = this.$store.state.ruleMessage.ruleMessages;\r\n    this.RuleCacheData = this.$store.state.ruleCache.ruleCacheData;\r\n    if (this.updateDynamicTable) {\r\n      this.updateDynamic = this.updateDynamicTable;\r\n    }\r\n    this.menu = this.menuPage;\r\n    this.init();\r\n  },\r\n  methods: {\r\n    init() {\r\n      //缓存数据 与多语言信息\r\n      let code = this.ruleCode;\r\n      this.ruleFlag = this.flag;\r\n      this.code = code;\r\n      this.query = this.ruleQuery;\r\n      this.ruleName = this.$t(\"ruleMake.ruleInfo\");\r\n      if (this.updateDynamic || this.query) {\r\n        this.ruleName = this.$t(\"route.validation_rule\");\r\n      }\r\n      switch (this.flag) {\r\n        case \"3\":\r\n          code = this.copyCode;\r\n          break;\r\n        case \"7\":\r\n          this.ruleOnly = true;\r\n          this.showButton = false;\r\n          break;\r\n      }\r\n      let param = {\"code\":code,\"performType\":this.performType}\r\n      ruleInit(this.buildRequestData(param)).then(response => {\r\n        //1是查看  2是修改\r\n        if (response.code == 200 && response.data.ruleShow) {\r\n          //查询 根据规则编码展示规则\r\n          var ruleData = response.data.ruleShow;\r\n          this.ruleMain = response.data.ruleShow;\r\n          this.ruleList = JSON.parse(ruleData.whenDescription);\r\n          this.dynamicTableList = JSON.parse(ruleData.dataGet);\r\n          this.showDynamicTable = true;\r\n          this.sqlStatement = ruleData.datatableSource;\r\n          this.whenDescription = ruleData.whenDescription;\r\n          this.when = ruleData.whenExperssion;\r\n          this.columnName = ruleData.columnNames.split(\",\");\r\n          this.columnType = ruleData.columnTypes.split(\",\");\r\n          this.ruleUseBomList = response.data.ruleUseBomList;\r\n          this.ruleUseFunctionList = response.data.ruleUseFunctionList;\r\n          this.ruleUseCommandList = response.data.ruleUseCommandList;\r\n          this.ruleOnly = true;\r\n          this.btnState = \"2\";\r\n          this.showButton = false;\r\n          if (!this.updateDynamic) {\r\n            this.indexModel.treeRule = true;\r\n          }\r\n          if (this.ruleFlag == \"2\") {\r\n            this.codeVersion = ruleData.codeVersion;\r\n          }\r\n          this.delItemTemp = false;\r\n          this.addRuleTemp = false;\r\n          this.ruleOnly = true;\r\n          this.spanNodeEnabled = false;\r\n          this.updateState = true;\r\n        } else {\r\n          this.addRules();\r\n        }\r\n      });\r\n    },\r\n    clear() {\r\n      this.clearDataForm();\r\n      this.visible = false;\r\n    },\r\n    clearDataForm() {\r\n      for (var a in this.dataForm) {\r\n        this.dataForm[a] = \"\";\r\n      }\r\n    },\r\n    addRules() {\r\n      this.ruleList.push({\r\n        ifConnType: false,\r\n        columDescription: \"\",\r\n        ifSkip: [\r\n          {\r\n            LeftParenthesis: false,\r\n            LeftParenthesisNumber: 0,\r\n            rightParenthesis: false,\r\n            rightParenthesisNumber: 0,\r\n            constant: {},\r\n            showConnTemp: false,\r\n            constantShow: true,\r\n            funcState: false,\r\n            showFuncTemp: false,\r\n            funcList: [],\r\n            funcShow: false,\r\n            func: {},\r\n            function: {\r\n              param: []\r\n            },\r\n            backupBom: {\r\n              bomKey: \"\"\r\n            },\r\n            backupBomItem: {},\r\n            backupFunc: {},\r\n            bomList: [],\r\n            bomItemList: [],\r\n            bom: {\r\n              bomKey: \"\"\r\n            },\r\n            bomItem: {\r\n              bomItemKey: \"\"\r\n            },\r\n            bomShow: true,\r\n            bomItemShow: true,\r\n            showEnd: false,\r\n            showEndTemp: false,\r\n            ruleCommand: {\r\n              ruleCommandKey: \"\",\r\n              commandType: \"\"\r\n            },\r\n            ruleCommands: [],\r\n            ruleCommandShow: false,\r\n            //是否展示 项目模块\r\n            showBomTemp: true,\r\n            //是否展示连接词\r\n            showConnTemp: false,\r\n            //是否展示规则\r\n            showBomItemTemp: false,\r\n            //是否展示计算类型\r\n            showRuleCommandTemp: false,\r\n            type: \"1\", //1代表正常 bom  2 函数bom\r\n            paramType: \"\",\r\n            ruleType: \"rule\",\r\n            endParenthesis: false,\r\n            ruleEnds: [],\r\n            endParenthesisNumber: 0\r\n          }\r\n        ]\r\n      });\r\n    },\r\n    //新增一个如果模块\r\n    addRule() {\r\n      this.ruleList.push({\r\n        ifConnType: false,\r\n        columDescription: \"\",\r\n        ruleType: \"rule\",\r\n        ifSkip: [\r\n          {\r\n            LeftParenthesis: false,\r\n            LeftParenthesisNumber: 0,\r\n            rightParenthesis: false,\r\n            rightParenthesisNumber: 0,\r\n            constant: {},\r\n            showConnTemp: false,\r\n            constantShow: true,\r\n            funcState: false,\r\n            showFuncTemp: false,\r\n            funcList: [],\r\n            func: {},\r\n            funcShow: false,\r\n            funcBom: {},\r\n            function: {\r\n              param: []\r\n            },\r\n            bomList: [],\r\n            bomItemList: [],\r\n            bom: {\r\n              bomKey: \"\"\r\n            },\r\n            bomItem: {\r\n              bomItemKey: \"\"\r\n            },\r\n            backupBom: {\r\n              bomKey: \"\"\r\n            },\r\n            backupBomItem: {},\r\n            backupFunc: {},\r\n            bomShow: true,\r\n            bomItemShow: true,\r\n            showEnd: false,\r\n            showEndTemp: false,\r\n            ruleCommand: {\r\n              ruleCommandKey: \"\",\r\n              commandType: \"\"\r\n            },\r\n            ruleCommands: [],\r\n            ruleCommandShow: false,\r\n            //是否展示 项目模块\r\n            showBomTemp: true,\r\n            //是否展示连接词\r\n            showConnTemp: false,\r\n            //是否展示规则\r\n            showBomItemTemp: false,\r\n            //是否展示计算类型\r\n            showRuleCommandTemp: false,\r\n            type: \"1\", //1代表正常 bom  2 函数bom\r\n            paramType: \"\",\r\n            ruleType: \"rule\",\r\n            endParenthesis: false,\r\n            ruleEnds: [],\r\n            endParenthesisNumber: 0\r\n          }\r\n        ]\r\n      });\r\n    },\r\n    delItem(index) {\r\n      this.ruleList.splice(index, 1); //删除index为i,位置的数组元素\r\n    },\r\n    findConnType(item) {\r\n      item.ifConnType = !item.ifConnType;\r\n    },\r\n    //提交保存结果\r\n    dataFormSubmit() {\r\n      //封装最外层对象\r\n      var ruleMake = {\r\n        ruleFlag: this.ruleFlag,\r\n        ruleMain: {},\r\n        ruleElement: {},\r\n        ruleData: {},\r\n        ruleUseBomList: [],\r\n        ruleUseFunctionList: [],\r\n        ruleUseCommandList: []\r\n      };\r\n      ruleMake.ruleData.dataGet = JSON.stringify(this.dynamicTableList);\r\n      var dataType = \"JSON\";\r\n      if (this.dynamicTableList.paramList.length > 50) {\r\n        //解析数据 传入后台\r\n        dataType = \"SQL\";\r\n      }\r\n      ruleMake.ruleData.dataType = dataType;\r\n      ruleMake.ruleData.columnNames = this.columnName.join(\",\");\r\n      ruleMake.ruleData.columnTypes = this.columnType.join(\",\");\r\n      //封装规则信息\r\n      ruleMake.ruleMain.codeVersion = this.codeVersion;\r\n      ruleMake.ruleMain.code = this.code;\r\n      ruleMake.ruleMain.decisionTablename = \"ruledata\";\r\n      ruleMake.ruleMain.decisionRowname = this.decisionRowname;\r\n      ruleMake.ruleMain.performType = this.performType;\r\n      //明细信息\r\n      ruleMake.ruleMain.whenThenNum = this.ruleList.length;\r\n      ruleMake.ruleElement.whenDescription = JSON.stringify(this.ruleList);\r\n      ruleMake.ruleElement.whenExperssion = this.when;\r\n      ruleMake.ruleElement.whenSpecialExperssion = this.multivaluedExpression;\r\n      ruleMake.ruleElement.thenDesctiption = \"\";\r\n      ruleMake.ruleElement.thenExperssion = this.then;\r\n      ruleMake.ruleElement.showOrder = 1;\r\n      if (this.flag == \"3\") {\r\n        this.ruleUseFunctionList.forEach(val => {\r\n          val.id = \"\";\r\n        });\r\n        this.ruleUseBomList.forEach(val => {\r\n          val.id = \"\";\r\n        });\r\n        this.ruleUseCommandList.forEach(val => {\r\n          val.id = \"\";\r\n        });\r\n      }\r\n      ruleMake.ruleUseFunctionList = this.ruleUseFunctionList;\r\n      ruleMake.ruleUseBomList = this.ruleUseBomList;\r\n      ruleMake.ruleUseCommandList = this.ruleUseCommandList;\r\n      //提交数据 到后台\r\n      var pageName = this.$route.params.pageName;\r\n      let back = ruleMakeSave(ruleMake);\r\n      back.then(response => {\r\n        //返回 跳转之后处理\r\n        if (response.code == 200) {\r\n          switch (response.data.type) {\r\n            case \"isRepeat\":\r\n              this.$message.error(\r\n                this.$t(\"ruleMake.first\") +\r\n                  response.data.rows +\r\n                  this.$t(\"ruleMake.information1\")\r\n              );\r\n              break;\r\n            case \"isNull\":\r\n              this.$message.error(\r\n                this.$t(\"ruleMake.first\") +\r\n                  response.data.row +\r\n                  this.$t(\"ruleMake.information\")\r\n              );\r\n              break;\r\n            case \"fail\":\r\n              this.$message.error(this.$t(\"ruleMake.fail\"));\r\n\r\n              break;\r\n            case \"attr\":\r\n              this.$message.error(this.$t(\"ruleMake.attrInfo\"));\r\n              break;\r\n            default:\r\n              if (!this.updateDynamic) {\r\n                this.$parent.$parent.setRuleMaking(true);\r\n              }\r\n              this.ruleOnly = true;\r\n              this.showButton = false;\r\n              this.indexModel.treeRule = true;\r\n              this.notifySuccess(response.message);\r\n          }\r\n        } else {\r\n          this.$message.error(response.message);\r\n        }\r\n      });\r\n      this.updateState = true;\r\n    },\r\n    //递归取值 param\r\n    recursiveRuleParameters(ifSkipArray, result) {\r\n      //一行 多个数据  bom bomItem 运算符 | function 运算符\r\n      //第一个节点  也就是 bom 或 func 左括号\r\n      for (var j = 0; j < ifSkipArray.length; j++) {\r\n        //横\r\n\r\n        var ifSkip = ifSkipArray[j];\r\n        if (j > 0) {\r\n          result.columDescription += \",\";\r\n        }\r\n        if (ifSkip.LeftParenthesis) {\r\n          for (var c = 0; c < ifSkip.LeftParenthesisNumber; c++) {\r\n            result.when += \"(\";\r\n            result.columDescription += \",(,\";\r\n            result.sqlStatement += \" ( \";\r\n          }\r\n        }\r\n        if (Object.keys(ifSkip.func).length > 0) {\r\n          //函数\r\n          result.when += ifSkip.func.name + \" (\";\r\n          result.sqlStatement += ifSkip.func.name + \" (\";\r\n          result.columDescription += ifSkip.func.funcKey + \",(,\"; //左括号\r\n          //参数\r\n          this.ruleUseFunctionList[this.ruleUseFunctionList.length] = {\r\n            functionName: ifSkip.func.name\r\n          };\r\n          if (ifSkip.function.param.length > 0) {\r\n            //通过参数遍历此时\r\n            for (var m = 0; m < ifSkip.function.param.length; m++) {\r\n              result = this.recursiveRuleParameters(\r\n                ifSkip.function.param[m].ifSkip,\r\n                result\r\n              );\r\n\r\n              //最后\r\n              if (m == ifSkip.function.param.length - 1) {\r\n                result.when += \" )\";\r\n                result.sqlStatement += \" )\";\r\n                result.columDescription += \",),\"; //右括号\r\n              } else {\r\n                result.columDescription += \",#,\";\r\n                result.when += \" , \";\r\n                result.sqlStatement += \" ,\";\r\n              }\r\n            }\r\n          }\r\n        } else if (ifSkip.constant.value) {\r\n          //常数\r\n          result.when += \" \" + ifSkip.constant.value + \" \";\r\n          result.sqlStatement += \" \" + ifSkip.constant.value + \" \";\r\n          result.columDescription += \",\" + ifSkip.constant.value + \",\";\r\n          if (ifSkip.rightParenthesis) {\r\n            for (var n = 0; n < ifSkip.rightParenthesisNumber; n++) {\r\n              result.when += \")\";\r\n              result.sqlStatement += \")\";\r\n              result.columDescription += \",),\";\r\n            }\r\n          }\r\n        } else {\r\n          if (ifSkip.bom.bomType == \"1\") {\r\n            //bom\r\n            //bom\r\n            result.when += ifSkip.bom.name + \".\";\r\n            result.sqlStatement += \" ?\" + ifSkip.bom.name + \".\";\r\n            result.columDescription += ifSkip.bom.bomKey + \",\";\r\n            result.when += ifSkip.bomItem.name + \" \";\r\n            result.sqlStatement += ifSkip.bomItem.name + \"?\";\r\n            result.columDescription +=\r\n              \"LINK_LINK_OF,\" + ifSkip.bomItem.bomItemKey + \",\";\r\n            if (ifSkip.rightParenthesis) {\r\n              for (var n = 0; n < ifSkip.rightParenthesisNumber; n++) {\r\n                result.when += \")\";\r\n                result.sqlStatement += \")\";\r\n                result.columDescription += \",),\";\r\n              }\r\n            }\r\n            this.ruleUseBomList[this.ruleUseBomList.length] = {\r\n              bomName: ifSkip.bom.name,\r\n              bomItemName: ifSkip.bomItem.name\r\n            };\r\n          }\r\n        }\r\n        if (\r\n          ifSkip.ruleCommand.resultType != \"end\" &&\r\n          ifSkip.ruleCommand.implenmation &&\r\n          ifSkip.ruleCommand.implenmation != \"multiple\"&&\r\n            ifSkip.ruleCommand.resultType != \"Boolean\"\r\n        ) {\r\n          result.when += ifSkip.ruleCommand.implenmation + \" \";\r\n          if (ifSkip.ruleCommand.implenmation == \"==\") {\r\n            result.sqlStatement += \" =\";\r\n          } else {\r\n            result.sqlStatement += ifSkip.ruleCommand.implenmation + \" \";\r\n          }\r\n          result.columDescription += ifSkip.ruleCommand.ruleCommandKey;\r\n          this.ruleUseCommandList[this.ruleUseCommandList.length] = {\r\n            commandId: ifSkip.ruleCommand.id\r\n          };\r\n        }\r\n      }\r\n      return result;\r\n    },\r\n\r\n    //决策表  async\r\n    async decisiontable() {\r\n      this.dynamicTableList.paramArr = [];\r\n      this.dynamicTableList.paramList = [];\r\n      this.columnName = [];\r\n      this.columnType = [];\r\n      this.ruleUseBomList = [];\r\n      this.ruleUseFunctionList = [];\r\n      this.ruleUseCommandList = [];\r\n      this.sqlStatement =\r\n        \"select Result,RuleId from $RuleData$ \" +\r\n        this.decisionRowname +\r\n        \" where \";\r\n      this.when = \" \";\r\n      this.multivaluedExpression =\" \";\r\n      var ruleState = true;\r\n      //规则表达式  与 描述\r\n      if (!this.showDynamicTable) {\r\n        //字段名与类型赋值给决策表对象\r\n        //显示表格\r\n        this.indexModel.treeRule = false;\r\n        this.updateState = true;\r\n        for (var i = 0; i < this.ruleList.length; i++) {\r\n          var ifSkipArray = this.ruleList[i].ifSkip; //纵\r\n          if (!ifSkipArray[ifSkipArray.length - 1].showEnd) {\r\n            ruleState = false;\r\n            break;\r\n          }\r\n          var column = this.decisionRowname + \".COLUMN\" + i + \" \";\r\n          var threeYuan = \"((@)?#:$)\";\r\n          //多个if\r\n          var commandType =\r\n            ifSkipArray[ifSkipArray.length - 1].ruleCommand.commandType;\r\n          var columDescription = \"\";\r\n          let show = true;\r\n          var option = [];\r\n          if (this.ruleList[i].ifConnType && i > 0) {\r\n            this.when += \" || \";\r\n            this.sqlStatement += \" or \";\r\n          } else if (!this.ruleList[i].ifConnType && i > 0) {\r\n            this.when += \" && \";\r\n            this.sqlStatement += \" and \";\r\n          }\r\n          var result = {\r\n            columDescription: \"\",\r\n            sqlStatement: \"\",\r\n            when: \"\"\r\n          };\r\n          result = this.recursiveRuleParameters(ifSkipArray, result); //一行\r\n          columDescription += result.columDescription;\r\n          this.sqlStatement += result.sqlStatement;\r\n          if (\r\n            ifSkipArray[ifSkipArray.length - 1].ruleCommand.commandType ==\r\n            \"String\"\r\n          ) {\r\n            if (\r\n              ifSkipArray[ifSkipArray.length - 1].bomItem.source &&\r\n              ifSkipArray[ifSkipArray.length - 1].bomItem.source != \"\" &&\r\n              ifSkipArray[ifSkipArray.length - 1].bomItem.commandType ==\r\n                \"String\" &&\r\n              ifSkipArray[ifSkipArray.length - 1].ruleCommand.paraNum > 0\r\n            ) {\r\n              this.columnType[this.columnType.length] = \"String\";\r\n              //获取下拉内容 (await getComboxData(ifSkip.bomItem.source)).data\r\n              const paramsMap = {\r\n                sql: ifSkipArray[ifSkipArray.length - 1].bomItem.source\r\n              };\r\n              //\r\n              var dataList = (\r\n                await getComboxData(this.buildRequestData(paramsMap))\r\n              ).data;\r\n              for (var j = 0; j < dataList.length; j++) {\r\n                option.push({\r\n                  value: dataList[j].code,\r\n                  label: dataList[j].code + \":\" + dataList[j].codeName\r\n                });\r\n              }\r\n              if (\r\n                ifSkipArray[ifSkipArray.length - 1].ruleCommand.implenmation ==\r\n                \"multiple\"\r\n              ) {\r\n                commandType = \"multiple\";\r\n              } else {\r\n                commandType = \"select\";\r\n              }\r\n            }\r\n          } else {\r\n            commandType =\r\n              ifSkipArray[ifSkipArray.length - 1].ruleCommand.commandType;\r\n            let preCheck = ifSkipArray[ifSkipArray.length - 1].bomItem.preCheck;\r\n            let type = \"\";\r\n            if (ifSkipArray[ifSkipArray.length - 1].ruleCommand.paraNum > 0) {\r\n              type = commandType;\r\n            }\r\n            if (\r\n              (preCheck == \"N02\" || preCheck == \"N03\") &&\r\n              ifSkipArray[ifSkipArray.length - 1].ruleCommand.paraNum > 0\r\n            ) {\r\n              type = \"Int\";\r\n            }\r\n            this.columnType[this.columnType.length] = type;\r\n          }\r\n          if (ifSkipArray[ifSkipArray.length - 1].ruleCommand.paraNum > 0) {\r\n            this.columnName[this.columnName.length] = \"COLUMN\" + i;\r\n          }\r\n\r\n          //decimal\r\n          if (commandType == \"multiple\") {\r\n            this.when +=\r\n              \"instrExt(\" +\r\n               column+\r\n              \",\" +\r\n              result.when +\r\n              \") > 0\";\r\n               this.multivaluedExpression +=  \"instrExt(\" + column+ \",(\" + result.expression + \" =null ? \"+column+\":\"+result.expression+\")) > 0\";\r\n          } else {\r\n            this.when += result.when;\r\n            if (ifSkipArray[ifSkipArray.length - 1].ruleCommand.paraNum > 0) {\r\n              this.when += ifSkipArray[ifSkipArray.length - 1].ruleCommand.implenmation + column;\r\n              threeYuan = threeYuan.replace(\"@\",result.prepareExpression);\r\n              threeYuan = threeYuan.replace(\"#\",column);\r\n              threeYuan = threeYuan.replace(\"$\",result.expression);\r\n              this.multivaluedExpression += threeYuan + ifSkipArray[ifSkipArray.length - 1].ruleCommand.implenmation  + column;\r\n            }\r\n          }\r\n          if (ifSkipArray[ifSkipArray.length - 1].endParenthesis) {\r\n            for (\r\n              let h = 0;\r\n              h < ifSkipArray[ifSkipArray.length - 1].endParenthesisNumber;\r\n              h++\r\n            ) {\r\n              this.when += \" ) \";\r\n              columDescription += \",),\";\r\n            }\r\n          }\r\n          if (\r\n            ifSkipArray[ifSkipArray.length - 1].ruleCommand &&\r\n            ifSkipArray[ifSkipArray.length - 1].ruleCommand.paraNum > 0\r\n          ) {\r\n            this.dynamicTableList.paramArr[\r\n              this.dynamicTableList.paramArr.length\r\n            ] = {\r\n              prop: columDescription,\r\n              keyId: columDescription,\r\n              commandType: commandType,\r\n              column: \"COLUMN\" + i,\r\n              options: option\r\n            };\r\n          }\r\n          this.ruleList[i].columDescription = columDescription;\r\n        }\r\n\r\n        if (!ruleState) {\r\n          this.$message.error(\"规则还未定义完成!\");\r\n          return;\r\n        }\r\n        // this.columnName[this.columnName.length] = \"RESULT\";\r\n        // this.columnName[this.columnName.length] = \"RULEID\";\r\n        // this.columnType[this.columnType.length] = \"String\";\r\n        // this.columnType[this.columnType.length] = \"button\";\r\n        /*this.dynamicTableList.paramArr[\r\n        this.dynamicTableList.paramArr.length\r\n        ] = {\r\n          prop: \"RESULT_RES_NOPASS\",\r\n          keyId: \"RESULT_RES_NOPASS\",\r\n          commandType: \"RESULT\",\r\n          column: \"RESULT\"\r\n        };*/\r\n        //待定\r\n        /*this.dynamicTableList.paramArr[\r\n          this.dynamicTableList.paramArr.length\r\n        ] = {\r\n          prop: \"RESULT_RES_MULTMSG\",\r\n          keyId: \"RESULT_RES_MULTMSG\",\r\n          commandType: \"RULEID\",\r\n          column: \"RULEID\"\r\n        };*/\r\n\r\n        var keyItemArr = this.dynamicTableList.paramArr;\r\n        var pushObj = {};\r\n        for (var i = 0; i < keyItemArr.length; i++) {\r\n          pushObj[keyItemArr[i].column] = \"\";\r\n        }\r\n        this.dynamicTableList.paramList.push(pushObj);\r\n        this.showDynamicTable = true;\r\n        this.delItemTemp = false;\r\n        this.addRuleTemp = false;\r\n        this.ruleOnly = true;\r\n        this.spanNodeEnabled = false;\r\n        this.btnState = \"2\";\r\n      }\r\n    },\r\n    //修改规则\r\n    updateRule() {\r\n      if (this.showDynamicTable) {\r\n        this.updateState = false;\r\n        this.btnState = \"2\";\r\n        this.showButton = true;\r\n        this.showDynamicTable = false;\r\n        this.delItemTemp = true;\r\n        this.addRuleTemp = true;\r\n        this.ruleOnly = false;\r\n        this.spanNodeEnabled = true;\r\n        this.btnState = \"1\";\r\n      }\r\n    },\r\n    normalLight(ob) {\r\n      if (!this.spanNodeEnabled) {\r\n        return;\r\n      } else {\r\n        ob.currentTarget.style.fontStyle = \"normal\";\r\n        ob.currentTarget.style.cursor = \"default\";\r\n        ob.currentTarget.style.textDecoration = \"\";\r\n      }\r\n    },\r\n    hightLight(ob) {\r\n      if (!this.spanNodeEnabled) {\r\n        return;\r\n      } else {\r\n        ob.currentTarget.style.fontStyle = \"italic\";\r\n        ob.currentTarget.style.cursor = \"hand\";\r\n        ob.currentTarget.style.textDecoration = \"blink\";\r\n      }\r\n    },\r\n    createSql(sql) {\r\n      sql = sql + this.when;\r\n    },\r\n    goBack() {\r\n      //返回到 规则属性\r\n      this.$parent.$parent.ruleDefinitionTo();\r\n      // this.$emit(\"ruleDefinitionTo\");\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.showrule {\r\n  margin-left: 25px;\r\n}\r\n\r\n.ruleBtn {\r\n  margin-left: 12px;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.header {\r\n  margin-left: 15px;\r\n  margin-top: 14px;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.indexHeader {\r\n}\r\n\r\n.project {\r\n  display: inline-block;\r\n  color: #6d6dea;\r\n}\r\n\r\n.rowheader {\r\n  display: inline-block;\r\n}\r\n\r\n.projectIndex {\r\n  display: inline-block;\r\n}\r\n\r\n.help {\r\n  margin-right: 12px;\r\n  margin-left: 12px;\r\n  cursor: pointer;\r\n}\r\n\r\n.if {\r\n  font-weight: bold;\r\n  color: #1d2a6d;\r\n}\r\n\r\n.thenSkip {\r\n  margin-top: 8px;\r\n}\r\n\r\n.ruleSelect {\r\n  width: 140px;\r\n}\r\n.param {\r\n  margin-top: 25px;\r\n}\r\n.param_rule {\r\n  margin-top: 25px;\r\n  margin-bottom: 50px;\r\n  width: 90%;\r\n}\r\n.end {\r\n  color: #dd0024;\r\n}\r\n.then {\r\n  font-weight: bold;\r\n  color: #1d2a6d;\r\n  margin-top: 10px !important;\r\n}\r\n.item {\r\n  padding: 10px;\r\n  color: #31a8a3;\r\n}\r\n.ruleReadOnly {\r\n  pointer-events: none;\r\n}\r\n.bomStyle {\r\n  color: #d37f20;\r\n}\r\n.add {\r\n  color: darkorchid;\r\n  padding-right: 5px;\r\n}\r\n.rule {\r\n  margin-left: 20px;\r\n  height: 100%;\r\n  font-size: 12px;\r\n  margin-top: 10px;\r\n}\r\n.rule_div {\r\n  margin-left: 50px;\r\n  margin-top: 55px;\r\n  width: 94%;\r\n  font-size: 12px !important;\r\n  min-height: 500px;\r\n}\r\n.rule_query {\r\n  margin-left: 20px;\r\n  margin-top: 20px;\r\n}\r\n.divider {\r\n  background-color: black;\r\n  margin-left: 4px;\r\n}\r\n\r\n.formtitle {\r\n  margin-top: 10px;\r\n  font-size: 12px !important;\r\n  font-weight: bold;\r\n}\r\n\r\n.titlelarge {\r\n  font-size: 12px !important;\r\n}\r\n.updateRule {\r\n  font-size: 8px !important;\r\n}\r\n.el-scrollbar__wrap {\r\n  overflow: auto !important;\r\n}\r\n.app-container {\r\n  margin-bottom: 20px !important;\r\n}\r\n</style>\r\n"]}]}