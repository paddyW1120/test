{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\customComponents\\Pagination\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\customComponents\\Pagination\\index.vue","mtime":1609847106346},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1706753193796},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgfile":"index.vue","sourceRoot":"src/customComponents/Pagination","sourcesContent":["<template>\r\n  <el-pagination\r\n    ref=\"pagination\"\r\n    :current-page.sync=\"page\"\r\n    :layout=\"layout\"\r\n    :page-size=\"pageSize_\"\r\n    :page-sizes=\"[5, 10, 50, 100]\"\r\n    :total=\"total\"\r\n    @current-change=\"handleCurrentChange\"\r\n    @size-change=\"handleSizeChange\"\r\n  >\r\n  </el-pagination>\r\n</template>\r\n\r\n<script>\r\n\r\nimport request from '../../utils/request'\r\n\r\nexport default {\r\n  name: 'Pagination',\r\n  props: {\r\n    /* 合并单元格相关（开始） */\r\n    autoBuild: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: true\r\n    },\r\n    needMerging: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    tableData: {\r\n      type: Array,\r\n      required: false,\r\n      default: function () {\r\n        return undefined\r\n      }\r\n    },\r\n    mergedAttrName: {\r\n      type: String | Array,\r\n      required: false,\r\n      default: undefined\r\n    },\r\n    orderIndexArrName: {\r\n      type: String,\r\n      required: false,\r\n      default: undefined\r\n    },\r\n    showMergedIndex: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    orderBy: {\r\n      type: Object,\r\n      required: false,\r\n      default: function () {\r\n        return {attrNames: [], orders: []}\r\n      }\r\n    },\r\n    /* 合并单元格相关（结束） */\r\n    url: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    params: {\r\n      type: Object,\r\n      required: true,\r\n      default: function () {\r\n        return {}\r\n      }\r\n    },\r\n    pageSize: {\r\n      type: Number,\r\n      required: false,\r\n      default: 10\r\n    },\r\n    // 紧凑型\r\n    small: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    // 刷新回调事件，参数为rows\r\n    refreshDone: {\r\n      type: Function,\r\n      required: false,\r\n      default: null\r\n    }\r\n  },\r\n  mounted() {\r\n    if (true === this.autoBuild) {\r\n      this.reload()\r\n    }\r\n  },\r\n  methods: {\r\n    handleSizeChange(val) {\r\n      this.pageSize_ = val\r\n      this.buildData()\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.page = val\r\n      this.buildData()\r\n    },\r\n    buildData() {\r\n      if (this.url) {\r\n        return new Promise((resolve, reject) => {\r\n          this.tableData_ = []\r\n          this.$emit('input', this.tableData_)\r\n          let data = {\r\n            'page': this.page,\r\n            'params': this.params,\r\n            'limit': this.pageSize_\r\n          }\r\n          request({\r\n            url: this.url,\r\n            method: 'post',\r\n            data\r\n          }).then(result => {\r\n            this.page = result.data.current\r\n            this.pageSize_ = result.data.size\r\n            this.total = result.data.total\r\n            this.tableData_ = result.data.records\r\n            if (true === this.needMerging) {\r\n              this.getOrderNumber()\r\n              this.$emit('input', this.tableData_)\r\n              this.$emit('updateOrderIndexArr', this.orderIndexArr_, this.orderIndexArrName)\r\n            } else {\r\n              this.$emit('input', this.tableData_)\r\n            }\r\n            this.$refs.pagination.internalCurrentPage = this.page\r\n            this.refreshDone && this.refreshDone(result.data)\r\n            resolve()\r\n          }).catch(error => {\r\n            reject(error)\r\n          })\r\n        })\r\n      }\r\n    },\r\n    reload() {\r\n      return new Promise((resolve, reject) => {\r\n        this.tableData_ = []\r\n        this.$emit('input', this.tableData_)\r\n        let data = {\r\n          \"page\": 1,\r\n          \"params\": this.params,\r\n          \"limit\": this.pageSize_\r\n        }\r\n        request({\r\n          url: this.url,\r\n          method: 'post',\r\n          data\r\n        }).then(result => {\r\n          this.page = result.data.current\r\n          this.pageSize_ = result.data.size\r\n          this.total = result.data.total\r\n          this.tableData_ = result.data.records\r\n          if (true === this.needMerging) {\r\n            this.getOrderNumber()\r\n            this.$emit('input', this.tableData_)\r\n            this.$emit('updateOrderIndexArr', this.orderIndexArr_, this.orderIndexArrName)\r\n          } else {\r\n            this.$emit('input', this.tableData_)\r\n          }\r\n          this.refreshDone && this.refreshDone(result.data)\r\n          resolve()\r\n        }).catch(error => {\r\n          reject(error)\r\n        })\r\n      })\r\n    },\r\n    query(data) {\r\n      request({\r\n        url: this.url,\r\n        method: 'post',\r\n        data\r\n      }).then(result => {\r\n        this.page = result.data.current\r\n        this.pageSize_ = result.data.size\r\n        this.total = result.data.total\r\n        // 回调\r\n        this.$emit('input', result.data.records)\r\n        this.refreshDone && this.refreshDone(result.data)\r\n      })\r\n    },\r\n    // 获取相同编号的数组（核心方法）\r\n    getOrderNumber() {\r\n      // 如果有排序的要求，且赋值合理，则按照用户的要求进行排序\r\n      let correctOrderBy = this.getCorrectOrderBy()\r\n      let attrNames = correctOrderBy.attrNames\r\n      let orders = correctOrderBy.orders\r\n      // 按照 attrNames 排序，将 attrNames 相同的数据连在一起\r\n      this.tableData_ = this._.orderBy(this.tableData_, attrNames, orders)\r\n      // 为构建 orderIndexArr 做前置准备\r\n      let orderObj = this.prepareForOrderIndexArr()\r\n      // 需要合并的行的 index 已经存在了同一个数组里，把这些数组存储到 this.orderIndexArr\r\n      this.orderIndexArr_ = []\r\n      for (const k in orderObj) {\r\n        this.orderIndexArr_.push(orderObj[k])\r\n      }\r\n      if (true === this.showMergedIndex) {\r\n        this.handleMergedRowIndex(this.tableData_, this.orderIndexArr_)\r\n      }\r\n    },\r\n    prepareForOrderIndexArr() {\r\n      let orderObj = {}\r\n      if (typeof this.mergedAttrName === 'string' || this.mergedAttrName instanceof String) {\r\n        this.tableData_.forEach((element, index) => {\r\n          element.rowIndex = index\r\n          if (orderObj[element[this.mergedAttrName]]) {\r\n            orderObj[element[this.mergedAttrName]].push(index)\r\n          } else {\r\n            orderObj[element[this.mergedAttrName]] = []\r\n            orderObj[element[this.mergedAttrName]].push(index)\r\n          }\r\n        })\r\n      } else if (this.mergedAttrName instanceof Array) {\r\n        this.tableData_.forEach((element, index) => {\r\n          element.rowIndex = index\r\n          let mergedValueArray = []\r\n          for (const mergedAttrName of this.mergedAttrName) {\r\n            mergedValueArray.push(element[mergedAttrName])\r\n          }\r\n          let mergedValue = mergedValueArray.join(',')\r\n          if (orderObj[mergedValue]) {\r\n            orderObj[mergedValue].push(index)\r\n          } else {\r\n            orderObj[mergedValue] = []\r\n            orderObj[mergedValue].push(index)\r\n          }\r\n        })\r\n      }\r\n      return orderObj\r\n    },\r\n    // 行序号改为合并后的行序号（合并单元格）\r\n    handleMergedRowIndex(tableData, orderIndexArr) {\r\n      a:for (const row of tableData) {\r\n        const rowIndex = row.rowIndex\r\n        for (let i = 0; i < orderIndexArr.length; i++) {\r\n          const val = orderIndexArr[i]\r\n          for (const number of val) {\r\n            if (rowIndex === number) {\r\n              row.mergedRowIndex = i\r\n              continue a\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // 无论用户给的排序规则是否合理，此方法将会处理得到正确的排序规则\r\n    // 说明：\r\n    // ① 排序规则必须服从于合并字段，因此，如果需要排序，排序字段中必须包含合并字段，且位于最前。\r\n    // ② 不需要排序或指定的排序规则不合理时，默认按照合并字段进行排序。\r\n    getCorrectOrderBy() {\r\n      let _orderBy = {attrNames: [], orders: []}\r\n      if (this.orderBy.attrNames.length * this.orderBy.orders.length <= 0 || this.orderBy.attrNames.length !== this.orderBy.orders.length) {\r\n        _orderBy = this.getDefaultOrderBy()\r\n      } else {\r\n        if (typeof this.mergedAttrName === 'string' || this.mergedAttrName instanceof String) {\r\n          if (this.orderBy.attrNames[0] === this.mergedAttrName) {\r\n            _orderBy.attrNames = this.orderBy.attrNames\r\n            _orderBy.orders = this.orderBy.orders\r\n          } else {\r\n            _orderBy = this.getDefaultOrderBy()\r\n          }\r\n        } else if (this.mergedAttrName instanceof Array) {\r\n          let flag = true\r\n          if (this.orderBy.attrNames.length < this.mergedAttrName.length) {\r\n            flag = false\r\n          } else {\r\n            let attrNamesToCheck = this.orderBy.attrNames.slice(0, this.mergedAttrName.length)\r\n            for (const attrNameBeingChecked of attrNamesToCheck) {\r\n              if (!this._.includes(this.mergedAttrName, attrNameBeingChecked)) {\r\n                flag = false\r\n                break\r\n              }\r\n            }\r\n          }\r\n          if (true === flag) {\r\n            _orderBy.attrNames = this.orderBy.attrNames\r\n            _orderBy.orders = this.orderBy.orders\r\n          } else {\r\n            _orderBy = this.getDefaultOrderBy()\r\n          }\r\n        } else {\r\n          _orderBy = this.getDefaultOrderBy()\r\n        }\r\n      }\r\n      return _orderBy\r\n    },\r\n    // 当用户给的排序规则和合并字段冲突时，处理得到默认的排序规则\r\n    getDefaultOrderBy() {\r\n      let _orderBy = {attrNames: [], orders: []}\r\n      if (typeof this.mergedAttrName === 'string' || this.mergedAttrName instanceof String) {\r\n        _orderBy.attrNames = [this.mergedAttrName]\r\n        _orderBy.orders = ['asc']\r\n      } else if (this.mergedAttrName instanceof Array) {\r\n        _orderBy.attrNames = this.mergedAttrName\r\n        for (let i = 0; i < this.mergedAttrName.length; i++) {\r\n          _orderBy.orders.push('asc')\r\n        }\r\n      }\r\n      return _orderBy\r\n    },\r\n    clearData(){\r\n      this.page =1;\r\n      this.pageSize_ = this.pageSize;\r\n      this.total =0;\r\n      this.orderIndexArr_ = [];\r\n      this.tableData_ =[];\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      page: 1,\r\n      pageSize_: this.pageSize,\r\n      total: 0,\r\n      orderIndexArr_: [],\r\n      tableData_: this.tableData\r\n    }\r\n  },\r\n  watch: {\r\n    sort(val) {\r\n      this.reload()\r\n    },\r\n    keyword(val) {\r\n      this.reload()\r\n    }\r\n  },\r\n  computed: {\r\n    layout() {\r\n      return this.small ? 'total, prev, pager, next' : 'total, sizes, prev, pager, next, jumper'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}