{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\product-definition\\pd-framework-def\\pd-structure-def\\payment-def\\prem-formula\\index.vue?vue&type=template&id=757b0754&scoped=true&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\product-definition\\pd-framework-def\\pd-structure-def\\payment-def\\prem-formula\\index.vue","mtime":1609847106897},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1706753192021},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxjdXMtd3JhcGVyPgoKICA8IS0tIOi/lOWbnue8tOi0ueWumuS5iSAtLT4KICA8Y3VzLXBhZ2UtdGl0bGUtYmFjayB2LWlmPSIhcHJvZHVjdENhbGNSZXZpc2lvblNob3dJTmZvXyIgOmlzRGlhbG9nPSJ0cnVlIgogICAgICAgICAgICAgICAgICAgICAgIDpsYWJlbD0icGRVd1NpVHlwZUR0T3B0aW9ucz8kdCgncHJlbUZvcm11bGEuZXh0UHJlbUNhbGNEZWYnKTokdCgncHJlbUZvcm11bGEucHJlbUNhbGNEZWYnKSIKICAgICAgICAgICAgICAgICAgICAgICBAYmFja1RvPSJiYWNrVG9QcmVtRGVmIi8+CiAgPCEtLSDku47liqDotLnlhazlvI/orqLmraPov5Tlm57lhazlvI/orqLmraPpppbpobUgLS0+CiAgPGN1cy1wYWdlLXRpdGxlLWJhY2sgdi1pZj0icmV2aXNpb25UeXBlID09PSAnZXh0UHJlbWl1bSciIDpsYWJlbD0iJHQoJ3JvdXRlLnBkRXh0UHJlbUZvcm11bGFSZXZpc2lvbicpIgogICAgICAgICAgICAgICAgICAgICAgIEBiYWNrVG89ImJhY2tUb0Zvcm11bGFSZXYiLz4KCiAgPGVsLWZvcm0gdi1pZj0iIXByb2R1Y3RDYWxjUmV2aXNpb25TaG93SU5mb18iIHJlZj0icHJvZHVjdEJuZnRGb3JtIiA6bW9kZWw9InByb2R1Y3RCbmZ0Rm9ybSIgbGFiZWwtd2lkdGg9ImF1dG8iPgogICAgPGVsLXJvdyA6Z3V0dGVyPSIxMCI+CiAgICAgIDxlbC1jb2wgOnNwYW49IjgiPgogICAgICAgIDxlbC1mb3JtLWl0ZW0gOmxhYmVsPSIkdCgncHJlbUZvcm11bGEucHJlbUl0ZW0nKSI+CiAgICAgICAgICA8ZWwtc2VsZWN0IHYtbW9kZWw9InByb2R1Y3RCbmZ0Rm9ybS5wcmVtIiA6cGxhY2Vob2xkZXI9IiR0KCdwZHRlbXBQZEJuZnQucGxlYXNlQ2hvb3NlJykiIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZCBmaWx0ZXJhYmxlIEBjaGFuZ2U9InNlbGVjdGVkUHJlbWl1bUNoYW5nZWQiPgogICAgICAgICAgICA8ZWwtb3B0aW9uIHYtZm9yPSJpdGVtIGluIE9wdGlvbnMxIiA6a2V5PSJpdGVtLnZhbHVlIiA6bGFiZWw9Iml0ZW0ubGFiZWwiIDp2YWx1ZT0iaXRlbS52YWx1ZSI+PC9lbC1vcHRpb24+CiAgICAgICAgICA8L2VsLXNlbGVjdD4KICAgICAgICA8L2VsLWZvcm0taXRlbT4KICAgICAgPC9lbC1jb2w+CiAgICAgIDxlbC1jb2wgOnNwYW49IjgiPgogICAgICAgIDxlbC1mb3JtLWl0ZW0gdi1pZj0icGRVd1NpVHlwZUR0T3B0aW9ucyIgOmxhYmVsPSIkdCgncHJlbUZvcm11bGEuZXh0UHJlbUl0ZW0nKSI+CiAgICAgICAgICA8ZWwtc2VsZWN0IHYtbW9kZWw9InByb2R1Y3RCbmZ0Rm9ybS5leHRQcmVtIiA6cGxhY2Vob2xkZXI9IiR0KCdwZHRlbXBQZEJuZnQucGxlYXNlQ2hvb3NlJykiIGNsZWFyYWJsZQogICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZCBmaWx0ZXJhYmxlIEBjaGFuZ2U9InNlbGVjdGVkRXh0UHJlbWl1bUNoYW5nZWQiPgogICAgICAgICAgICA8ZWwtb3B0aW9uIHYtZm9yPSJpdGVtIGluIE9wdGlvbnMyIiA6a2V5PSJpdGVtLnZhbHVlIiA6bGFiZWw9Iml0ZW0ubGFiZWwiIDp2YWx1ZT0iaXRlbS52YWx1ZSI+CiAgICAgICAgICAgIDwvZWwtb3B0aW9uPgogICAgICAgICAgPC9lbC1zZWxlY3Q+CiAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CiAgICAgIDwvZWwtY29sPgogICAgICA8ZWwtY29sIDpzcGFuPSI4Ij4KICAgICAgPC9lbC1jb2w+CiAgICA8L2VsLXJvdz4KICA8L2VsLWZvcm0+CgogIDwhLS0g57y06LS56KGo5qC8IC0tPgogIDxkaXYgdi1pZj0icmV2aXNpb25UeXBlID09PSAncHJlbWl1bSciPgogICAgPGN1cy10YWJsZS10aXRsZSA6bGFiZWw9IiR0KCdwcmVtRm9ybXVsYS5wZFByZW1JdGVtJykiLz4KICAgIDxlbC10YWJsZSA6ZGF0YT0idGFibGVEYXRhUHJlbWl1bSIgYm9yZGVyIGVsZW1lbnQtbG9hZGluZy10ZXh0PSJMb2FkaW5nIiBmaXQgaGlnaGxpZ2h0LWN1cnJlbnQtcm93CiAgICAgICAgICAgICAgbWF4LWhlaWdodD0iMzAwIiBzaXplPSJtaW5pIiBAcm93LWNsaWNrPSJyb3dDbGlja1ByZW1pdW0iPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3RhYmxlLnNlbGVjdCcpIiB3aWR0aD0iNTAiPgogICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICA8ZWwtcmFkaW8tZ3JvdXAgdi1tb2RlbD0ic2VsZWN0ZWRQcmVtaXVtSW5SZXYiIEBjaGFuZ2U9InNlbGVjdGVkUHJlbWl1bUluUmV2Q2hhbmdlZCI+CiAgICAgICAgICAgIDxlbC1yYWRpbyA6bGFiZWw9InNjb3BlLnJvdyI+e3sgJycgfX08L2VsLXJhZGlvPgogICAgICAgICAgPC9lbC1yYWRpby1ncm91cD4KICAgICAgICA8L3RlbXBsYXRlPgogICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgPGVsLXRhYmxlLWNvbHVtbiA6bGFiZWw9IiR0KCd0YWJsZS5kZXRhaWwnKSIgdHlwZT0iZXhwYW5kIiB3aWR0aD0iODAiPgogICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJwcm9wcyI+CiAgICAgICAgICA8ZWwtZm9ybSBjbGFzcz0iZGVtby10YWJsZS1leHBhbmQiIGlubGluZSBsYWJlbC1wb3NpdGlvbj0ibGVmdCI+CiAgICAgICAgICAgIDxlbC1mb3JtLWl0ZW0gOmxhYmVsPSIkdCgncGF5X2RlZi5wYXlfY2FsY19tZXRob2QnKSI+CiAgICAgICAgICAgICAgPHNwYW4+e3sgcHJvcHMucm93LnBkUHJlbUNhbE1vZGUgfCBmaWx0ZXJfY2FsY01ldGhvZCB9fTwvc3Bhbj4KICAgICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CiAgICAgICAgICAgIDxlbC1mb3JtLWl0ZW0gOmxhYmVsPSIkdCgncGF5X2RlZi5wYXlfemVybycpIj4KICAgICAgICAgICAgICA8c3Bhbj57eyBwcm9wcy5yb3cucGRQcmVtWmVyb0ZsYWcgfCBmaWx0ZXJfcGF5WmVybyB9fTwvc3Bhbj4KICAgICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CiAgICAgICAgICAgIDxlbC1mb3JtLWl0ZW0gOmxhYmVsPSIkdCgncGF5X2RlZi5wYXlfc3RhcnRfY2FsY19iYXNpcycpIj4KICAgICAgICAgICAgICA8c3Bhbj57eyBwcm9wcy5yb3cucGRQYXlTdGFydENhbFJ1bGUgfCBmaWx0ZXJfc3RhcnRDYWxjUnVsZSB9fTwvc3Bhbj4KICAgICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CiAgICAgICAgICAgIDxlbC1mb3JtLWl0ZW0gOmxhYmVsPSIkdCgncGF5X2RlZi5wYXlfc3RhcnRfY2FsY192YWx1ZXR5cGVzJykiPgogICAgICAgICAgICAgIDxzcGFuPnt7IHByb3BzLnJvdy5wZFBheVN0YXJ0Q2FsTW9kZSB8IGZpbHRlcl9zdGFydENhbGNNZXRob2QgfX08L3NwYW4+CiAgICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICAgICAgICA8ZWwtZm9ybS1pdGVtIDpsYWJlbD0iJHQoJ3BheV9kZWYucGF5X2VuZF9jYWxjX2Jhc2lzJykiPgogICAgICAgICAgICAgIDxzcGFuPnt7IHByb3BzLnJvdy5wZFBheUVuZENhbFJ1bGUgfCBmaWx0ZXJfZW5kQ2FsY1J1bGUgfX08L3NwYW4+CiAgICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICAgICAgICA8ZWwtZm9ybS1pdGVtIDpsYWJlbD0iJHQoJ3BheV9kZWYucGF5X2VuZF9jYWxjX21ldGhvZCcpIj4KICAgICAgICAgICAgICA8c3Bhbj57eyBwcm9wcy5yb3cucGRQYXlFbmRDYWxNb2RlIHwgZmlsdGVyX2VuZENhbGNNZXRob2QgfX08L3NwYW4+CiAgICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICAgICAgICA8ZWwtZm9ybS1pdGVtIDpsYWJlbD0iJHQoJ3BheV9kZWYucGF5X2NhbGNfZm9ybXVsYV9jb2RlJykiPgogICAgICAgICAgICAgIDxzcGFuPnt7IHByb3BzLnJvdy5wZFByZW1DYWxjQ29kZSB9fTwvc3Bhbj4KICAgICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CiAgICAgICAgICA8L2VsLWZvcm0+CiAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgIDxlbC10YWJsZS1jb2x1bW4gOmxhYmVsPSIkdCgndGFibGUuaWQnKSIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjUwIj4KICAgICAgICA8dGVtcGxhdGUgdi1zbG90PSJzY29wZSI+CiAgICAgICAgICB7eyBpbml0VGFibGVJbmRleCgncGFnZV9wcmVtaXVtJywgc2NvcGUuJGluZGV4KSB9fQogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3ByZW1Gb3JtdWxhLnBkUHJlbUNvZGUnKSIgYWxpZ249ImNlbnRlciIgbWluLXdpZHRoPSIyMDAiIHByb3A9InBkUHJlbUNvZGUiCiAgICAgICAgICAgICAgICAgICAgICAgc29ydGFibGU+PC9lbC10YWJsZS1jb2x1bW4+CiAgICAgIDxlbC10YWJsZS1jb2x1bW4gOmxhYmVsPSIkdCgncHJlbUZvcm11bGEucGRQYXlOYW1lJykiIGFsaWduPSJjZW50ZXIiIG1pbi13aWR0aD0iMjAwIgogICAgICAgICAgICAgICAgICAgICAgIHByb3A9InBkUGF5TmFtZSI+PC9lbC10YWJsZS1jb2x1bW4+CiAgICAgIDxlbC10YWJsZS1jb2x1bW4gOmxhYmVsPSIkdCgncHJlbUZvcm11bGEucGRSYXRlQ2hhbmdlRmxhZycpIiBhbGlnbj0iY2VudGVyIiBtaW4td2lkdGg9IjIwMCIKICAgICAgICAgICAgICAgICAgICAgICBwcm9wPSJwZFJhdGVDaGFuZ2VGbGFnIj48L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgPGVsLXRhYmxlLWNvbHVtbiA6bGFiZWw9IiR0KCdwcmVtRm9ybXVsYS5wZFByZW1BY2NSZWxhJykiIGFsaWduPSJjZW50ZXIiIG1pbi13aWR0aD0iMjAwIgogICAgICAgICAgICAgICAgICAgICAgIHByb3A9InBkUHJlbUFjY1JlbGEiPjwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3ByZW1Gb3JtdWxhLnBkUGF5RW5kUGVyaW9kJykiIGFsaWduPSJjZW50ZXIiIG1pbi13aWR0aD0iMjAwIj4KICAgICAgICA8dGVtcGxhdGUgdi1zbG90PSJzY29wZSI+CiAgICAgICAgICA8c3BhbiB2LWZvcj0iaXRlbSBpbiBzY29wZS5yb3cucGR0ZW1wUGRQcmVtUGVyaW9kTGlzdCI+CiAgICAgICAgICAgIHt7IGl0ZW0ucGRQYXlFbmRQZXJpb2QgfX0KICAgICAgICAgICAge3sgaXRlbS5wZFBheUVuZFVuaXQgfCBmaWx0ZXJfcGRQYXlFbmRVbml0IH19CiAgICAgICAgICAgIHt7CiAgICAgICAgICAgICAgc2NvcGUucm93LnBkdGVtcFBkUHJlbVBlcmlvZExpc3QuaW5kZXhPZihpdGVtKSA9PT0gc2NvcGUucm93LnBkdGVtcFBkUHJlbVBlcmlvZExpc3QubGVuZ3RoIC0gMSA/ICcnIDogJywnCiAgICAgICAgICAgIH19CiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgIDxlbC10YWJsZS1jb2x1bW4gOmxhYmVsPSIkdCgncnVsZS5wZENhbGNDb2RlJykiIGFsaWduPSJjZW50ZXIiIG1pbi13aWR0aD0iMjAwIgogICAgICAgICAgICAgICAgICAgICAgIHByb3A9InBkUHJlbUNhbGNDb2RlIj48L2VsLXRhYmxlLWNvbHVtbj4KICAgIDwvZWwtdGFibGU+CiAgICA8Y3VzLXBhZ2luYXRpb24gcmVmPSJwYWdlX3ByZW1pdW0iIHYtbW9kZWw9InRhYmxlRGF0YVByZW1pdW0iIDphdXRvQnVpbGQ9ImZhbHNlIiA6cGFnZVNpemU9IjUiCiAgICAgICAgICAgICAgICAgICAgOnBhcmFtcz0icGFyYW1zX3ByZW1pdW0iIHVybD0iL1ByZW1BbW91bnRGb3JtdWwvbGlzdC9nZXRBbGxQcmVtaXVtQnlQZEluZm9JZCIvPgogIDwvZGl2PgoKICA8IS0tIOWKoOi0ueihqOagvCAtLT4KICA8ZGl2IHYtaWY9InJldmlzaW9uVHlwZSA9PT0gJ2V4dFByZW1pdW0nIj4KICAgIDxjdXMtdGFibGUtdGl0bGUgOmxhYmVsPSIkdCgncHJlbUZvcm11bGEucGRFeHRQcmVtSXRlbScpIi8+CiAgICA8ZWwtdGFibGUgOmRhdGE9InRhYmxlRGF0YUV4dFByZW1pdW0iIGJvcmRlciBlbGVtZW50LWxvYWRpbmctdGV4dD0iTG9hZGluZyIgZml0IGhpZ2hsaWdodC1jdXJyZW50LXJvdwogICAgICAgICAgICAgIG1heC1oZWlnaHQ9IjMwMCIgc2l6ZT0ibWluaSIgQHJvdy1jbGljaz0icm93Q2xpY2tFeHRQcmVtaXVtIj4KICAgICAgPGVsLXRhYmxlLWNvbHVtbiA6bGFiZWw9IiR0KCd0YWJsZS5zZWxlY3QnKSIgd2lkdGg9IjUwIj4KICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAgPGVsLXJhZGlvLWdyb3VwIHYtbW9kZWw9InNlbGVjdGVkRXh0UHJlbWl1bUluUmV2IiBAY2hhbmdlPSJzZWxlY3RlZEV4dFByZW1pdW1JblJldkNoYW5nZWQiPgogICAgICAgICAgICA8ZWwtcmFkaW8gOmxhYmVsPSJzY29wZS5yb3ciPnt7ICcnIH19PC9lbC1yYWRpbz4KICAgICAgICAgIDwvZWwtcmFkaW8tZ3JvdXA+CiAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgIDxlbC10YWJsZS1jb2x1bW4gOmxhYmVsPSIkdCgndGFibGUuaWQnKSIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjUwIj4KICAgICAgICA8dGVtcGxhdGUgdi1zbG90PSJzY29wZSI+CiAgICAgICAgICB7eyBpbml0VGFibGVJbmRleCgncGFnZV9leHRQcmVtaXVtJywgc2NvcGUuJGluZGV4KSB9fQogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3ByZW1Gb3JtdWxhLnBkUHJlbUNvZGUnKSIgYWxpZ249ImNlbnRlciIgbWluLXdpZHRoPSIyMDAiIHByb3A9InBkUHJlbUNvZGUiCiAgICAgICAgICAgICAgICAgICAgICAgc29ydGFibGU+PC9lbC10YWJsZS1jb2x1bW4+CiAgICAgIDxlbC10YWJsZS1jb2x1bW4gOmxhYmVsPSIkdCgncHJlbUZvcm11bGEucGRQYXlOYW1lJykiIGFsaWduPSJjZW50ZXIiIG1pbi13aWR0aD0iMjAwIgogICAgICAgICAgICAgICAgICAgICAgIHByb3A9InBkUHJlbU5hbWUiPjwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3ByZW1Gb3JtdWxhLnBkRXh0UHJlbUNvZGUnKSIgYWxpZ249ImNlbnRlciIgbWluLXdpZHRoPSIyMDAiIHByb3A9InBkRXh0UHJlbUNvZGUiCiAgICAgICAgICAgICAgICAgICAgICAgc29ydGFibGU+PC9lbC10YWJsZS1jb2x1bW4+CiAgICAgIDxlbC10YWJsZS1jb2x1bW4gOmxhYmVsPSIkdCgncHJlbUZvcm11bGEucGRFeHRQcmVtTmFtZScpIiBhbGlnbj0iY2VudGVyIiBtaW4td2lkdGg9IjIwMCIKICAgICAgICAgICAgICAgICAgICAgICBwcm9wPSJwZEV4dFByZW1OYW1lIj48L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgPGVsLXRhYmxlLWNvbHVtbiA6bGFiZWw9IiR0KCdwcmVtRm9ybXVsYS5wZEV4dFByZW1PYmonKSIgYWxpZ249ImNlbnRlciIgbWluLXdpZHRoPSIyMDAiCiAgICAgICAgICAgICAgICAgICAgICAgcHJvcD0icGRFeHRQcmVtT2JqIj4KICAgICAgICA8dGVtcGxhdGUgdi1zbG90PSJzY29wZSI+CiAgICAgICAgICB7eyBzY29wZS5yb3cucGRFeHRQcmVtT2JqIHwgZmlsdGVyX3BkRXh0UHJlbU9iaiB9fQogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3ByZW1Gb3JtdWxhLnBkRXh0UHJlbVR5cGUnKSIgYWxpZ249ImNlbnRlciIgbWluLXdpZHRoPSIyMDAiCiAgICAgICAgICAgICAgICAgICAgICAgcHJvcD0icGRFeHRQcmVtVHlwZSI+CiAgICAgICAgPHRlbXBsYXRlIHYtc2xvdD0ic2NvcGUiPgogICAgICAgICAge3sgc2NvcGUucm93LnBkRXh0UHJlbVR5cGUgfCBmaWx0ZXJfcGRFeHRQcmVtVHlwZSB9fQogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3ByZW1Gb3JtdWxhLnBkRXh0UHJlbU1vZGUnKSIgYWxpZ249ImNlbnRlciIgbWluLXdpZHRoPSIyMDAiCiAgICAgICAgICAgICAgICAgICAgICAgcHJvcD0icGRFeHRQcmVtTW9kZSI+CiAgICAgICAgPHRlbXBsYXRlIHYtc2xvdD0ic2NvcGUiPgogICAgICAgICAge3sgc2NvcGUucm93LnBkRXh0UHJlbU1vZGUgfCBmaWx0ZXJfcGRFeHRQcmVtTW9kZSB9fQogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3J1bGUucGRDYWxjQ29kZScpIiBhbGlnbj0iY2VudGVyIiBtaW4td2lkdGg9IjIwMCIKICAgICAgICAgICAgICAgICAgICAgICBwcm9wPSJwZEV4dFByZW1DYWxjQ29kZSI+PC9lbC10YWJsZS1jb2x1bW4+CiAgICA8L2VsLXRhYmxlPgogICAgPGN1cy1wYWdpbmF0aW9uIHJlZj0icGFnZV9leHRQcmVtaXVtIiB2LW1vZGVsPSJ0YWJsZURhdGFFeHRQcmVtaXVtIiA6YXV0b0J1aWxkPSJmYWxzZSIgOnBhZ2VTaXplPSI1IgogICAgICAgICAgICAgICAgICAgIDpwYXJhbXM9InBhcmFtc19leHRQcmVtaXVtIiB1cmw9Ii9QcmVtQW1vdW50Rm9ybXVsL2xpc3QvZ2V0QWxsRXh0UHJlbWl1bUJ5UGRJbmZvSWQiLz4KICA8L2Rpdj4KCiAgPCEtLSDlt7LpgInmi6nlhazlvI8gLS0+CiAgPGRpdgogICAgdi1pZj0iIXByb2R1Y3RDYWxjUmV2aXNpb25TaG93SU5mb18gfHwgcHJvZHVjdENhbGNSZXZpc2lvblNob3dJTmZvXyAmJiAoT2JqZWN0LmtleXMoc2VsZWN0ZWRQcmVtaXVtSW5SZXYpLmxlbmd0aCA+IDAgfHwgT2JqZWN0LmtleXMoc2VsZWN0ZWRFeHRQcmVtaXVtSW5SZXYpLmxlbmd0aCA+IDApIj4KICAgIDxjdXMtZm9ybS10aXRsZSB2LWlmPSIhcHJvZHVjdENhbGNSZXZpc2lvblNob3dJTmZvXyIgOmZpcnN0PSJ0cnVlIgogICAgICAgICAgICAgICAgICAgIDpsYWJlbD0icGRVd1NpVHlwZUR0T3B0aW9ucz8kdCgncHJlbUZvcm11bGEuc2VsZWN0ZWRFeHRQcmVtRm9ybXVsYScpOiR0KCdwcmVtRm9ybXVsYS5zZWxlY3RlZFByZW1Gb3JtdWxhJykiPjwvY3VzLWZvcm0tdGl0bGU+CiAgICA8Y3VzLWZvcm0tdGl0bGUgdi1pZj0icHJvZHVjdENhbGNSZXZpc2lvblNob3dJTmZvXyIgOmZpcnN0PSJ0cnVlIgogICAgICAgICAgICAgICAgICAgIDpsYWJlbD0icmV2aXNpb25UeXBlPT09J2V4dFByZW1pdW0nPyR0KCdwcmVtRm9ybXVsYS5zZWxlY3RlZEV4dFByZW1Gb3JtdWxhJyk6JHQoJ3ByZW1Gb3JtdWxhLnNlbGVjdGVkUHJlbUZvcm11bGEnKSI+PC9jdXMtZm9ybS10aXRsZT4KICAgIDxjdXMtdGFibGUtdGl0bGUgdi1pZj0iIXByb2R1Y3RDYWxjUmV2aXNpb25TaG93SU5mb18iCiAgICAgICAgICAgICAgICAgICAgIDpsYWJlbD0icGRVd1NpVHlwZUR0T3B0aW9ucz8kdCgncHJlbUZvcm11bGEucGRFeHRQcmVtRm9ybXVsYScpOiR0KCdwcmVtRm9ybXVsYS5wZFByZW1Gb3JtdWxhJykiLz4KICAgIDxjdXMtdGFibGUtdGl0bGUgdi1pZj0icHJvZHVjdENhbGNSZXZpc2lvblNob3dJTmZvXyIKICAgICAgICAgICAgICAgICAgICAgOmxhYmVsPSJyZXZpc2lvblR5cGU9PT0nZXh0UHJlbWl1bSc/JHQoJ3ByZW1Gb3JtdWxhLnBkRXh0UHJlbUZvcm11bGEnKTokdCgncHJlbUZvcm11bGEucGRQcmVtRm9ybXVsYScpIi8+CiAgICA8ZWwtdGFibGUgOmRhdGE9InRhYmxlRGF0YUZvcm11bGEiIGJvcmRlciBlbGVtZW50LWxvYWRpbmctdGV4dD0iTG9hZGluZyIgZml0CiAgICAgICAgICAgICAgaGlnaGxpZ2h0LWN1cnJlbnQtcm93IG1heC1oZWlnaHQ9IjMwMCIgc2l6ZT0ibWluaSIgQHJvdy1jbGljaz0icm93Q2xpY2siPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3RhYmxlLnNlbGVjdCcpIiB3aWR0aD0iNTAiPgogICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICA8ZWwtcmFkaW8tZ3JvdXAgdi1tb2RlbD0ic2VsZWN0ZWRGb3JtdWxhIiBAY2hhbmdlPSJzZWxlY3RlZEZvcm11bGFDaGFuZ2VkIj4KICAgICAgICAgICAgPGVsLXJhZGlvIDpsYWJlbD0ic2NvcGUucm93Ij57eyAnJyB9fTwvZWwtcmFkaW8+CiAgICAgICAgICA8L2VsLXJhZGlvLWdyb3VwPgogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3RhYmxlLmRldGFpbCcpIiBhbGlnbj0iY2VudGVyIiB3aWR0aD0iODAiPgogICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICA8ZWwtYnV0dG9uIHNpemU9InNtYWxsIiB0eXBlPSJ0ZXh0IiBAY2xpY2s9InNob3dGb3JtdWxhKHNjb3BlLnJvdykiPj4+PC9lbC1idXR0b24+CiAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgIDxlbC10YWJsZS1jb2x1bW4gdi1pZj0iIXBkVXdTaVR5cGVEdE9wdGlvbnMiIDpsYWJlbD0iJHQoJ3ByZW1Gb3JtdWxhLnByZW1JdGVtJykiIGFsaWduPSJjZW50ZXIiIG1pbi13aWR0aD0iMjAwIgogICAgICAgICAgICAgICAgICAgICAgIHNvcnRhYmxlPgogICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICB7eyBzY29wZS5yb3cucHJlbWl1bUNvZGUgPyBzY29wZS5yb3cucHJlbWl1bUNvZGUgKyAnOicgKyBzY29wZS5yb3cucHJlbWl1bU5hbWUgOiAnJyB9fQogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIHYtaWY9InBkVXdTaVR5cGVEdE9wdGlvbnMgfHwgcHJvZHVjdENhbGNSZXZpc2lvblNob3dJTmZvXyIKICAgICAgICAgICAgICAgICAgICAgICA6bGFiZWw9IiR0KCdwcmVtRm9ybXVsYS5leHRQcmVtSXRlbScpIgogICAgICAgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiCiAgICAgICAgICAgICAgICAgICAgICAgbWluLXdpZHRoPSIyMDAiIHNvcnRhYmxlPgogICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICB7eyBzY29wZS5yb3cuZXh0UHJlbWl1bUNvZGUgPyBzY29wZS5yb3cuZXh0UHJlbWl1bUNvZGUgKyAnOicgKyBzY29wZS5yb3cuZXh0UHJlbWl1bU5hbWUgOiAnJyB9fQogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3J1bGUucGRCdXNzRGV0YWlsVHlwZScpIiBhbGlnbj0iY2VudGVyIiBtaW4td2lkdGg9IjIwMCIgcHJvcD0icGRFeHRQcmVtQ29kZSIKICAgICAgICAgICAgICAgICAgICAgICBzb3J0YWJsZT4KICAgICAgICA8dGVtcGxhdGUgdi1zbG90PSJzY29wZSI+CiAgICAgICAgICB7eyBzY29wZS5yb3cucGRCdXNzRGV0YWlsVHlwZSB8IGZpbHRlcl9wZEJ1c3NEZXRhaWxUeXBlIH19CiAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgIDxlbC10YWJsZS1jb2x1bW4gOmxhYmVsPSJwZFV3U2lUeXBlRHRPcHRpb25zPyR0KCdwcmVtRm9ybXVsYS5leHRQcmVtQ2FsY0NvZGUnKTokdCgncHJlbUZvcm11bGEucHJlbUNhbGNDb2RlJykiCiAgICAgICAgICAgICAgICAgICAgICAgYWxpZ249ImNlbnRlciIgbWluLXdpZHRoPSIyMDAiIHByb3A9InBkQ2FsY0NvZGUiIHNvcnRhYmxlPjwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0icGRVd1NpVHlwZUR0T3B0aW9ucz8kdCgncHJlbUZvcm11bGEuZXh0UHJlbUNhbGNEZXNjJyk6JHQoJ3ByZW1Gb3JtdWxhLnByZW1DYWxjRGVzYycpIgogICAgICAgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiIG1pbi13aWR0aD0iMjAwIiBwcm9wPSJwZENhbGNEZXNjIj48L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgPGVsLXRhYmxlLWNvbHVtbiA6bGFiZWw9IiR0KCdydWxlLnJ1bGVBdHRyJykiIGFsaWduPSJjZW50ZXIiIG1pbi13aWR0aD0iMjAwIj4KICAgICAgICA8dGVtcGxhdGUgdi1zbG90PSJzY29wZSI+CiAgICAgICAgICB7ewogICAgICAgICAgICBzY29wZS5yb3cucnVsZUF0dHIgPT09ICcxJyA/ICR0KCdydWxlLmdlbmVyYWwnKSA6IChzY29wZS5yb3cucnVsZUF0dHIgPT09ICcyJyA/ICR0KCdydWxlLmluZGl2aWR1YWwnKSA6ICcnKQogICAgICAgICAgfX0KICAgICAgICA8L3RlbXBsYXRlPgogICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgPGVsLXRhYmxlLWNvbHVtbiA6bGFiZWw9IiR0KCd0YWJsZS5hY3Rpb25zJykiIGFsaWduPSJjZW50ZXIiIGZpeGVkPSJyaWdodCIgd2lkdGg9IjEyMCI+CiAgICAgICAgPHRlbXBsYXRlIHNsb3Qtc2NvcGU9InNjb3BlIj4KICAgICAgICAgIDxjdXMtZGVsLWJ0biB2LWF1dGg9IidQcmVtQW1vdW50Rm9ybXVsOmRlbGV0ZSciIEBvaz0iZGVsZXRlRm9ybXVsYShzY29wZS5yb3cpIj48L2N1cy1kZWwtYnRuPgogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgPC9lbC10YWJsZT4KICAgIDxjdXMtcGFnaW5hdGlvbiByZWY9InBhZ2VfY3VycmVudCIgdi1tb2RlbD0idGFibGVEYXRhRm9ybXVsYSIgOmF1dG9CdWlsZD0iZmFsc2UiIDpwYWdlU2l6ZT0iNSIKICAgICAgICAgICAgICAgICAgICA6cGFyYW1zPSJwYXJhbXNfY3VycmVudCIgdXJsPSIvUHJlbUFtb3VudEZvcm11bC9saXN0L2N1cnJlbnRGb3JtdWxhIi8+CiAgPC9kaXY+CgogIDwhLS0g5Yaz562W6KGo6KGo5qC8IC0tPgogIDxkaXYgdi1pZj0ic2hvd0ZsYWciPgogICAgPGN1cy1mb3JtLXRpdGxlIDpsYWJlbD0iJHQoJ3ByZW1Gb3JtdWxhLnByZW1SYXRlQ29uZmlnJykiLz4KICAgIDxlbC1mb3JtIHJlZj0icmF0ZUZvcm0iIDptb2RlbD0icmF0ZUZvcm0iIDpydWxlcz0icmF0ZUZvcm1SdWxlcyIgbGFiZWwtd2lkdGg9ImF1dG8iPgogICAgICA8ZWwtcm93IDpndXR0ZXI9IjEwIiB0eXBlPSJmbGV4Ij4KICAgICAgICA8ZWwtY29sIDpzcGFuPSI2Ij4KICAgICAgICAgIDxlbC1mb3JtLWl0ZW0gOmxhYmVsPSIkdCgncHJlbUZvcm11bGEuZWRpdFByZW1SYXRlQ29uZmlnJykiPgogICAgICAgICAgICA8ZWwtc3dpdGNoIHYtbW9kZWw9InJhdGVFZGl0RmxhZyIgQGNoYW5nZT0icmF0ZUVkaXRGbGFnQ2hhbmdlZCI+PC9lbC1zd2l0Y2g+CiAgICAgICAgICA8L2VsLWZvcm0taXRlbT4KICAgICAgICA8L2VsLWNvbD4KICAgICAgICA8ZWwtY29sIDpzcGFuPSI2Ij4KICAgICAgICAgIDxlbC1mb3JtLWl0ZW0gOmxhYmVsPSIkdCgncHJlbUZvcm11bGEudmFyaWFibGVSYXRlRmxhZycpIj4KICAgICAgICAgICAgPGVsLXN3aXRjaCB2LW1vZGVsPSJ2YXJpYWJsZVJhdGVGbGFnIiA6ZGlzYWJsZWQ9IiFyYXRlRWRpdEZsYWciPjwvZWwtc3dpdGNoPgogICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CiAgICAgICAgPC9lbC1jb2w+CiAgICAgIDwvZWwtcm93PgogICAgICA8ZWwtcm93IDpndXR0ZXI9IjEwIiB0eXBlPSJmbGV4Ij4KICAgICAgICA8ZWwtY29sIDpzcGFuPSI2Ij4KICAgICAgICAgIDxlbC1mb3JtLWl0ZW0gbGFiZWw9IlZQVSIgcHJvcD0idnB1Ij4KICAgICAgICAgICAgPGVsLWlucHV0IHYtbW9kZWw9InJhdGVGb3JtLnZwdSIgOmRpc2FibGVkPSIhcmF0ZUVkaXRGbGFnIgogICAgICAgICAgICAgICAgICAgICAgOnBsYWNlaG9sZGVyPSIkdCgnZm9ybS5wbGVhc2VfZW50ZXInKSskdCgnZm9ybS5udW1iZXInKSIgY2xlYXJhYmxlIGZpbHRlcmFibGUKICAgICAgICAgICAgICAgICAgICAgIHR5cGU9Im51bWJlciI+PC9lbC1pbnB1dD4KICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICAgIDwvZWwtY29sPgogICAgICAgIDxlbC1jb2wgOnNwYW49IjYiPgogICAgICAgICAgPGVsLWZvcm0taXRlbSA6bGFiZWw9IiR0KCdwcmVtRm9ybXVsYS5lZGl0aW9uJykiIHByb3A9InJhdGVFZGl0aW9uIj4KICAgICAgICAgICAgPGVsLWlucHV0IHYtbW9kZWw9InJhdGVGb3JtLnJhdGVFZGl0aW9uIiA6ZGlzYWJsZWQ9IiFyYXRlRWRpdEZsYWciIGNsZWFyYWJsZT48L2VsLWlucHV0PgogICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CiAgICAgICAgPC9lbC1jb2w+CiAgICAgICAgPGVsLWNvbCA6c3Bhbj0iNiI+CiAgICAgICAgICA8ZWwtZm9ybS1pdGVtIDpsYWJlbD0iJHQoJ3ByZW1Gb3JtdWxhLnN0YXJ0RGF0ZScpIgogICAgICAgICAgICAgICAgICAgICAgICA6cnVsZXM9IntyZXF1aXJlZDogdmFyaWFibGVSYXRlRmxhZywgbWVzc2FnZTogdGhpcy4kdCgncHJlbUZvcm11bGEucGxlYXNlU2VsZWN0U3RhcnREYXRlJyksIHRyaWdnZXI6ICdjaGFuZ2UnfSIKICAgICAgICAgICAgICAgICAgICAgICAgcHJvcD0ic3RhcnREYXRlIj4KICAgICAgICAgICAgPGVsLWRhdGUtcGlja2VyIHYtbW9kZWw9InJhdGVGb3JtLnN0YXJ0RGF0ZSIgOmRpc2FibGVkPSIhcmF0ZUVkaXRGbGFnIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWUtZm9ybWF0PSJ5eXl5LU1NLWRkIj48L2VsLWRhdGUtcGlja2VyPgogICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CiAgICAgICAgPC9lbC1jb2w+CiAgICAgICAgPGVsLWNvbCA6c3Bhbj0iNiI+CiAgICAgICAgICA8ZWwtZm9ybS1pdGVtIDpsYWJlbD0iJHQoJ3ByZW1Gb3JtdWxhLmVuZERhdGUnKSIKICAgICAgICAgICAgICAgICAgICAgICAgOnJ1bGVzPSJ7cmVxdWlyZWQ6IHZhcmlhYmxlUmF0ZUZsYWcsIG1lc3NhZ2U6IHRoaXMuJHQoJ3ByZW1Gb3JtdWxhLnBsZWFzZVNlbGVjdEVuZERhdGUnKSwgdHJpZ2dlcjogJ2NoYW5nZSd9IgogICAgICAgICAgICAgICAgICAgICAgICBwcm9wPSJlbmREYXRlIj4KICAgICAgICAgICAgPGVsLWRhdGUtcGlja2VyIHYtbW9kZWw9InJhdGVGb3JtLmVuZERhdGUiIDpkaXNhYmxlZD0iIXJhdGVFZGl0RmxhZyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlLWZvcm1hdD0ieXl5eS1NTS1kZCI+PC9lbC1kYXRlLXBpY2tlcj4KICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICAgIDwvZWwtY29sPgogICAgICA8L2VsLXJvdz4KICAgIDwvZWwtZm9ybT4KCiAgICA8ZWwtcm93PgogICAgICA8ZWwtYnV0dG9uLWdyb3VwPgogICAgICAgIDxlbC1idXR0b24gaWNvbj0iZWwtaWNvbi11cGxvYWQiIHNpemU9InNtYWxsIiB0eXBlPSJwcmltYXJ5IiBAY2xpY2s9InVuZGVyd3JpdGluZ1Nob3cgPSB0cnVlIj4KICAgICAgICAgIHt7ICR0KCdwcmVtRm9ybXVsYS51cGxvYWRSYXRlVGFibGUnKSB9fQogICAgICAgIDwvZWwtYnV0dG9uPgogICAgICA8L2VsLWJ1dHRvbi1ncm91cD4KICAgIDwvZWwtcm93PgoKICAgIDxjdXMtdGFibGUtdGl0bGUgOmxhYmVsPSIkdCgncHJlbUZvcm11bGEucmF0ZVRhYmxlJykiLz4KICAgIDxlbC10YWJsZSByZWY9InRhYmxlRGF0YUZvcm11bGFQYXJhbXMiIDpkYXRhPSJ0YWJsZURhdGFGb3JtdWxhUGFyYW1zIiBib3JkZXIgZWxlbWVudC1sb2FkaW5nLXRleHQ9IkxvYWRpbmciIGZpdAogICAgICAgICAgICAgIGhpZ2hsaWdodC1jdXJyZW50LXJvdyBtYXgtaGVpZ2h0PSIzMDAiIHNpemU9Im1pbmkiPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3RhYmxlLmlkJykiIGFsaWduPSJjZW50ZXIiIHR5cGU9ImluZGV4Ij48L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgPGVsLXRhYmxlLWNvbHVtbiB2LWZvcj0iaXRlbSBpbiBkYXRhR2V0LnBhcmFtQXJyIiA6bGFiZWw9Iml0ZW0ucHJvcCIgOnByb3A9Iml0ZW0uY29sdW1uIiBhbGlnbj0iY2VudGVyIj4KICAgICAgICA8dGVtcGxhdGUgdi1zbG90PSJzY29wZSI+CiAgICAgICAgICA8ZWwtaW5wdXQgdi1pZj0iaXRlbS5jb21tYW5kVHlwZSA9PT0gJ1N0cmluZycgfHwgaXRlbS5jb21tYW5kVHlwZSA9PT0gJ1JFU1VMVCciCiAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0ic2NvcGUucm93W2l0ZW0uY29sdW1uXSI+PC9lbC1pbnB1dD4KICAgICAgICAgIDxlbC1pbnB1dC1udW1iZXIgdi1pZj0iaXRlbS5jb21tYW5kVHlwZSA9PT0gJ051bWJlcicgfHwgaXRlbS5jb21tYW5kVHlwZSA9PT0gJ0ludCciCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InNjb3BlLnJvd1tpdGVtLmNvbHVtbl0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogMTAwJSI+PC9lbC1pbnB1dC1udW1iZXI+CiAgICAgICAgICA8ZWwtc2VsZWN0IHYtaWY9Iml0ZW0uY29tbWFuZFR5cGUgPT09ICdzZWxlY3QnIiB2LW1vZGVsPSJzY29wZS5yb3dbaXRlbS5jb2x1bW5dIj4KICAgICAgICAgICAgPGVsLW9wdGlvbiB2LWZvcj0ib3B0aW9uIGluIGl0ZW0ub3B0aW9ucyIgOmxhYmVsPSJvcHRpb24ubGFiZWwiIDp2YWx1ZT0ib3B0aW9uLnZhbHVlIj48L2VsLW9wdGlvbj4KICAgICAgICAgIDwvZWwtc2VsZWN0PgogICAgICAgICAgPGVsLXNlbGVjdCB2LWlmPSJpdGVtLmNvbW1hbmRUeXBlID09PSAnbXVsdGlwbGUnIiB2LW1vZGVsPSJzY29wZS5yb3dbaXRlbS5jb2x1bW5dIiBtdWx0aXBsZT4KICAgICAgICAgICAgPGVsLW9wdGlvbiB2LWZvcj0ib3B0aW9uIGluIGl0ZW0ub3B0aW9ucyIgOmxhYmVsPSJvcHRpb24ubGFiZWwiIDp2YWx1ZT0ib3B0aW9uLnZhbHVlIj48L2VsLW9wdGlvbj4KICAgICAgICAgIDwvZWwtc2VsZWN0PgogICAgICAgICAgPGVsLWRhdGUtcGlja2VyIHYtaWY9Iml0ZW0uY29tbWFuZFR5cGUgPT09ICdEYXRlJyIgdi1tb2RlbD0ic2NvcGUucm93W2l0ZW0uY29sdW1uXSIKICAgICAgICAgICAgICAgICAgICAgICAgICA6cGxhY2Vob2xkZXI9IiR0KCdkeW5hbWljVGFibGUuc2VsZWN0RGF0ZScpIiB0eXBlPSJkYXRlIgogICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlLWZvcm1hdD0ieXl5eS1NTS1kZCI+PC9lbC1kYXRlLXBpY2tlcj4KICAgICAgICAgIDxlbC1idXR0b24gdi1pZj0iaXRlbS5jb21tYW5kVHlwZSA9PT0gJ1JVTEVJRCciIHNpemU9Im1pbmkiPnt7ICR0KCdyb3V0ZS5tdWx0aWxpbmd1YWxfaW5mb3JtYXRpb24nKSB9fQogICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgPC9lbC10YWJsZS1jb2x1bW4+CiAgICAgIDxlbC10YWJsZS1jb2x1bW4gOmxhYmVsPSIkdCgndGFibGUuYWN0aW9ucycpIiA6d2lkdGg9InRhYmxlRGF0YUZvcm11bGFQYXJhbXMubGVuZ3RoID4gMCA/IDE1MCA6IHVuZGVmaW5lZCIKICAgICAgICAgICAgICAgICAgICAgICBhbGlnbj0iY2VudGVyIj4KICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAgPGVsLWJ1dHRvbiBzaXplPSJtaW5pIiB0eXBlPSJkYW5nZXIiIEBjbGljaz0iZGVsZXRlRm9ybXVsYVBhcmFtKHNjb3BlLnJvdykiPi08L2VsLWJ1dHRvbj4KICAgICAgICA8L3RlbXBsYXRlPgogICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgIDwvZWwtdGFibGU+CiAgICA8ZWwtYnV0dG9uIHNpemU9Im1pbmkiIHR5cGU9InByaW1hcnkiIEBjbGljaz0iYWRkRGF0YVJvdyI+KzwvZWwtYnV0dG9uPgogICAgPGVsLWZvcm0+CiAgICAgIDxlbC1mb3JtLWl0ZW0gc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0Ij4KICAgICAgICA8ZWwtYnV0dG9uIGljb249ImVsLWljb24tc3VjY2VzcyIgc2l6ZT0ic21hbGwiIHR5cGU9InByaW1hcnkiIEBjbGljaz0ic2F2ZUZvcm11bGFQYXJhbSI+CiAgICAgICAgICB7eyAkdCgncGR0ZW1wUGRDbG1CbmZ0LnNhdmUnKSB9fQogICAgICAgIDwvZWwtYnV0dG9uPgogICAgICAgIDxlbC1idXR0b24gaWNvbj0iZWwtaWNvbi1yZWZyZXNoIiBzaXplPSJzbWFsbCIgdHlwZT0icHJpbWFyeSIgQGNsaWNrPSJyZWZyZXNoRm9ybXVsYVBhcmFtIj4KICAgICAgICAgIHt7ICR0KCdwZHRlbXBQZENsbUJuZnQuY2xlYW4nKSB9fQogICAgICAgIDwvZWwtYnV0dG9uPgogICAgICA8L2VsLWZvcm0taXRlbT4KICAgIDwvZWwtZm9ybT4KICA8L2Rpdj4KCiAgPCEtLSDlj6/pgInmi6nlhazlvI8gLS0+CiAgPGRpdgogICAgdi1pZj0iIXByb2R1Y3RDYWxjUmV2aXNpb25TaG93SU5mb18gfHwgcHJvZHVjdENhbGNSZXZpc2lvblNob3dJTmZvXyAmJiAoT2JqZWN0LmtleXMoc2VsZWN0ZWRQcmVtaXVtSW5SZXYpLmxlbmd0aCA+IDAgfHwgT2JqZWN0LmtleXMoc2VsZWN0ZWRFeHRQcmVtaXVtSW5SZXYpLmxlbmd0aCA+IDApIj4KICAgIDxjdXMtZm9ybS10aXRsZSB2LWlmPSIhcHJvZHVjdENhbGNSZXZpc2lvblNob3dJTmZvXyIgOmZpcnN0PSJ0cnVlIgogICAgICAgICAgICAgICAgICAgIDpsYWJlbD0icGRVd1NpVHlwZUR0T3B0aW9ucz8kdCgncHJlbUZvcm11bGEuc2VsZWN0YWJsZUV4dFByZW1Gb3JtdWxhJyk6JHQoJ3ByZW1Gb3JtdWxhLnNlbGVjdGFibGVQcmVtRm9ybXVsYScpIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tdG9wOiA1MHB4Ij48L2N1cy1mb3JtLXRpdGxlPgogICAgPGN1cy1mb3JtLXRpdGxlIHYtaWY9InByb2R1Y3RDYWxjUmV2aXNpb25TaG93SU5mb18iIDpmaXJzdD0idHJ1ZSIKICAgICAgICAgICAgICAgICAgICA6bGFiZWw9InJldmlzaW9uVHlwZT09PSdleHRQcmVtaXVtJz8kdCgncHJlbUZvcm11bGEuc2VsZWN0YWJsZUV4dFByZW1Gb3JtdWxhJyk6JHQoJ3ByZW1Gb3JtdWxhLnNlbGVjdGFibGVQcmVtRm9ybXVsYScpIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tdG9wOiA1MHB4Ij48L2N1cy1mb3JtLXRpdGxlPgoKICAgIDxlbC1yb3cgc3R5bGU9InRleHQtYWxpZ246IHJpZ2h0Ij4KICAgICAgPGVsLWJ1dHRvbiBpY29uPSJlbC1pY29uLWNvbm5lY3Rpb24iIHNpemU9InNtYWxsIiB0eXBlPSJwcmltYXJ5IiBAY2xpY2s9InRvRm9ybXVsYVNlbGVjdCI+CiAgICAgICAge3sgJHQoJ3J1bGUubW9yZUZvcm11bGEnKSB9fQogICAgICA8L2VsLWJ1dHRvbj4KICAgICAgPGVsLWJ1dHRvbiBpY29uPSJlbC1pY29uLWNpcmNsZS1wbHVzIGVsLWljb24tLWxlZnQiIHNpemU9InNtYWxsIiB0eXBlPSJwcmltYXJ5IiBAY2xpY2s9InRvQWRkRm9ybXVsYSI+CiAgICAgICAge3sgJHQoJ3J1bGUudG9BZGRGb3JtdWxhJykgfX0KICAgICAgPC9lbC1idXR0b24+CiAgICA8L2VsLXJvdz4KCiAgICA8Y3VzLXRhYmxlLXRpdGxlIHYtaWY9IiFwcm9kdWN0Q2FsY1JldmlzaW9uU2hvd0lOZm9fIgogICAgICAgICAgICAgICAgICAgICA6bGFiZWw9InBkVXdTaVR5cGVEdE9wdGlvbnM/JHQoJ3ByZW1Gb3JtdWxhLmV4dFByZW1Gb3JtdWxhJyk6JHQoJ3ByZW1Gb3JtdWxhLnByZW1Gb3JtdWxhJykiPjwvY3VzLXRhYmxlLXRpdGxlPgogICAgPGN1cy10YWJsZS10aXRsZSB2LWlmPSJwcm9kdWN0Q2FsY1JldmlzaW9uU2hvd0lOZm9fIgogICAgICAgICAgICAgICAgICAgICA6bGFiZWw9InJldmlzaW9uVHlwZT09PSdleHRQcmVtaXVtJz8kdCgncHJlbUZvcm11bGEuZXh0UHJlbUZvcm11bGEnKTokdCgncHJlbUZvcm11bGEucHJlbUZvcm11bGEnKSI+PC9jdXMtdGFibGUtdGl0bGU+CiAgICA8ZWwtdGFibGUgOmRhdGE9InRhYmxlRGF0YUJyaWVmRm9ybXVsYSIgYm9yZGVyIGVsZW1lbnQtbG9hZGluZy10ZXh0PSJMb2FkaW5nIiBmaXQgaGlnaGxpZ2h0LWN1cnJlbnQtcm93CiAgICAgICAgICAgICAgc2l6ZT0ibWluaSI+CiAgICAgIDxlbC10YWJsZS1jb2x1bW4gOmxhYmVsPSIkdCgndGFibGUuaWQnKSIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjUwIj4KICAgICAgICA8dGVtcGxhdGUgdi1zbG90PSJzY29wZSI+CiAgICAgICAgICB7eyBpbml0VGFibGVJbmRleCgncGFnZV9icmllZicsIHNjb3BlLiRpbmRleCkgfX0KICAgICAgICA8L3RlbXBsYXRlPgogICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgPGVsLXRhYmxlLWNvbHVtbiA6bGFiZWw9IiR0KCd0YWJsZS5kZXRhaWwnKSIgYWxpZ249ImNlbnRlciIgd2lkdGg9IjgwIj4KICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAgPGVsLWJ1dHRvbiBzaXplPSJzbWFsbCIgdHlwZT0idGV4dCIgQGNsaWNrPSJzaG93Rm9ybXVsYShzY29wZS5yb3cpIj4+PjwvZWwtYnV0dG9uPgogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpmaWx0ZXItbWV0aG9kPSJmaWx0ZXJfcGRDb2RlIiA6ZmlsdGVycz0iZmlsdGVyc19wZENvZGUiIDpsYWJlbD0iJHQoJ3J1bGUucHJvZHVjdCcpIgogICAgICAgICAgICAgICAgICAgICAgIGFsaWduPSJjZW50ZXIiIG1pbi13aWR0aD0iMjAwIj4KICAgICAgICA8dGVtcGxhdGUgc2xvdC1zY29wZT0ic2NvcGUiPgogICAgICAgICAge3sgc2NvcGUucm93LnBkQ29kZSA/IHNjb3BlLnJvdy5wZENvZGUgKyAnOicgKyBzY29wZS5yb3cucGROYW1lIDogJycgfX0KICAgICAgICA8L3RlbXBsYXRlPgogICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgPGVsLXRhYmxlLWNvbHVtbiB2LWlmPSJjYWxjdWxhdGlvbkZvcm11bGFUeXBlID09PSAnMTcnIHx8IHByb2R1Y3RDYWxjUmV2aXNpb25TaG93SU5mb18iCiAgICAgICAgICAgICAgICAgICAgICAgOmxhYmVsPSIkdCgncHJlbUZvcm11bGEucHJlbUl0ZW0nKSIgYWxpZ249ImNlbnRlciIgbWluLXdpZHRoPSIyMDAiPgogICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICB7eyBzY29wZS5yb3cucHJlbWl1bUNvZGUgPyBzY29wZS5yb3cucHJlbWl1bUNvZGUgKyAnOicgKyBzY29wZS5yb3cucHJlbWl1bU5hbWUgOiAnJyB9fQogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIHYtaWY9ImNhbGN1bGF0aW9uRm9ybXVsYVR5cGUgPT09ICcxOScgfHwgcmV2aXNpb25UeXBlID09PSAnZXh0UHJlbWl1bSciCiAgICAgICAgICAgICAgICAgICAgICAgOmxhYmVsPSIkdCgncHJlbUZvcm11bGEuZXh0UHJlbUl0ZW0nKSIgYWxpZ249ImNlbnRlciIgbWluLXdpZHRoPSIyMDAiPgogICAgICAgIDx0ZW1wbGF0ZSBzbG90LXNjb3BlPSJzY29wZSI+CiAgICAgICAgICB7eyBzY29wZS5yb3cuZXh0UHJlbWl1bUNvZGUgPyBzY29wZS5yb3cuZXh0UHJlbWl1bUNvZGUgKyAnOicgKyBzY29wZS5yb3cuZXh0UHJlbWl1bU5hbWUgOiAnJyB9fQogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3J1bGUucGRCdXNzRGV0YWlsVHlwZScpIiBhbGlnbj0iY2VudGVyIiBtaW4td2lkdGg9IjIwMCIgcHJvcD0icGRCdXNzRGV0YWlsVHlwZSI+CiAgICAgICAgPHRlbXBsYXRlIHYtc2xvdD0ic2NvcGUiPgogICAgICAgICAge3sgc2NvcGUucm93LnBkQnVzc0RldGFpbFR5cGUgfCBmaWx0ZXJfcGRCdXNzRGV0YWlsVHlwZSB9fQogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3J1bGUucGRDYWxjQ29kZScpIiBhbGlnbj0iY2VudGVyIiBtaW4td2lkdGg9IjIwMCIKICAgICAgICAgICAgICAgICAgICAgICBwcm9wPSJwZENhbGNDb2RlIj48L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgPGVsLXRhYmxlLWNvbHVtbiA6bGFiZWw9IiR0KCdydWxlLnBkQ2FsY0Rlc2MnKSIgYWxpZ249ImNlbnRlciIgcHJvcD0icGRDYWxjRGVzYyIKICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD0iMTIwIj48L2VsLXRhYmxlLWNvbHVtbj4KICAgICAgPGVsLXRhYmxlLWNvbHVtbiA6bGFiZWw9IiR0KCdydWxlLnJ1bGVBdHRyJykiIGFsaWduPSJjZW50ZXIiIHdpZHRoPSIxMDAiPgogICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q9InNjb3BlIj4KICAgICAgICAgIHt7CiAgICAgICAgICAgIHNjb3BlLnJvdy5ydWxlQXR0ciA9PT0gJzEnID8gJHQoJ3J1bGUuZ2VuZXJhbCcpIDogKHNjb3BlLnJvdy5ydWxlQXR0ciA9PT0gJzInID8gJHQoJ3J1bGUuaW5kaXZpZHVhbCcpIDogJycpCiAgICAgICAgICB9fQogICAgICAgIDwvdGVtcGxhdGU+CiAgICAgIDwvZWwtdGFibGUtY29sdW1uPgogICAgICA8ZWwtdGFibGUtY29sdW1uIDpsYWJlbD0iJHQoJ3RhYmxlLmFjdGlvbnMnKSIgYWxpZ249ImNlbnRlciIgZml4ZWQ9InJpZ2h0IiB3aWR0aD0iMTIwIj4KICAgICAgICA8dGVtcGxhdGUgdi1zbG90PSJzY29wZSI+CiAgICAgICAgICA8ZWwtYnV0dG9uIHYtYXV0aD0iJ1ByZW1BbW91bnRGb3JtdWw6YXNzb2NpYXRlJyIgaWNvbj0iZWwtaWNvbi1jb25uZWN0aW9uIgogICAgICAgICAgICAgICAgICAgICBzaXplPSJtaW5pIiB0eXBlPSJwcmltYXJ5IiBAY2xpY2s9ImhhbmRsZVNlbGVjdEZvcm11bGEoc2NvcGUucm93KSI+CiAgICAgICAgICAgIHt7ICR0KCdmb3JtLnNlbGVjdCcpIH19CiAgICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICA8L3RlbXBsYXRlPgogICAgICA8L2VsLXRhYmxlLWNvbHVtbj4KICAgIDwvZWwtdGFibGU+CiAgICA8Y3VzLXBhZ2luYXRpb24gcmVmPSJwYWdlX2JyaWVmIiB2LW1vZGVsPSJ0YWJsZURhdGFCcmllZkZvcm11bGEiIDphdXRvQnVpbGQ9ImZhbHNlIiA6cGFnZVNpemU9IjUiCiAgICAgICAgICAgICAgICAgICAgOnBhcmFtcz0icGFyYW1zX2JyaWVmIiB1cmw9Ii9QcmVtQW1vdW50Rm9ybXVsL2xpc3QvYnJpZWZGb3JtdWxhIi8+CiAgPC9kaXY+CgogIDwhLS3kuIrkvKDotLnnjofooagtLT4KICA8ZWwtZGlhbG9nIHYtZGlhbG9nLWRyYWcgOmFwcGVuZC10by1ib2R5PSJ0cnVlIiA6Y2xvc2Utb24tY2xpY2stbW9kYWw9ImZhbHNlIiA6Y2xvc2Utb24tcHJlc3MtZXNjYXBlPSJmYWxzZSIKICAgICAgICAgICAgIDp2aXNpYmxlLnN5bmM9InVuZGVyd3JpdGluZ1Nob3ciIGNlbnRlciB3aWR0aD0iNzAlIj4KICAgIDxjdXMtcGFnZS10aXRsZS1iYWNrIDppc0RpYWxvZz0idHJ1ZSIgOmxhYmVsPSIkdCgncHJlbUZvcm11bGEudXBsb2FkUmF0ZVRhYmxlJykiCiAgICAgICAgICAgICAgICAgICAgICAgICBAYmFja1RvPSJ1bmRlcndyaXRpbmdTaG93ID0gZmFsc2UiLz4KICAgIDxlbC1yb3c+CiAgICAgIDxlbC1idXR0b24tZ3JvdXA+CiAgICAgICAgPGVsLWJ1dHRvbiB2LWF1dGg9IidwZHRlbXAtcGQtY3Y6ZG93bmxvYWRDdlRhYmxlJyIgc2l6ZT0ic21hbGwiIHR5cGU9InByaW1hcnkiIEBjbGljaz0iZG93bmxvYWRDdlRhYmxlIj4KICAgICAgICAgIHt7ICR0KCdwcmVtRm9ybXVsYS5kb3dubG9hZFJhdGVUYWJsZScpIH19CiAgICAgICAgPC9lbC1idXR0b24+CiAgICAgIDwvZWwtYnV0dG9uLWdyb3VwPgogICAgPC9lbC1yb3c+CgogICAgPGVsLWZvcm0gaWQ9InVwbG9hZEZvcm0iIHN0eWxlPSJtYXJnaW4tdG9wOiA1cHgiPgogICAgICA8ZWwtZm9ybS1pdGVtPgogICAgICAgIDxlbC11cGxvYWQgcmVmPSJ1cGxvYWQiIDphdXRvLXVwbG9hZD0idHJ1ZSIgOmJlZm9yZS11cGxvYWQ9ImhhbmRsZUJlZm9yZVVwbG9hZCIgOmZpbGUtbGlzdD0iZmlsZUxpc3QiCiAgICAgICAgICAgICAgICAgICA6b24tcmVtb3ZlPSJoYW5kbGVSZW1vdmUiIGFjdGlvbj0idXJsIiBjbGFzcz0idXBsb2FkLWRlbW8iIGRyYWcgbXVsdGlwbGU+CiAgICAgICAgICA8aSBjbGFzcz0iZWwtaWNvbi11cGxvYWQiPjwvaT4KICAgICAgICAgIDxkaXYgY2xhc3M9ImVsLXVwbG9hZF9fdGV4dCI+e3sgJHQoJ3ByZW1Gb3JtdWxhLnRleHQwMScpIH19PC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJlbC11cGxvYWRfX3RleHQiPnt7ICR0KCdwcmVtRm9ybXVsYS50ZXh0MDInKSB9fTxlbT57eyAkdCgncHJlbUZvcm11bGEudGV4dDAzJykgfX08L2VtPjwvZGl2PgogICAgICAgICAgPGRpdiBzbG90PSJ0aXAiIGNsYXNzPSJlbC11cGxvYWRfX3RpcCI+e3sgJHQoJ3ByZW1Gb3JtdWxhLnRleHQwNCcpIH19PC9kaXY+CiAgICAgICAgPC9lbC11cGxvYWQ+CiAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgPC9lbC1mb3JtPgogIDwvZWwtZGlhbG9nPgoKICA8IS0tIOW8ueeql++8iOWFrOW8j+mAieaLqe+8jOWKoOi0ueiuouato+aXtuS9v+eUqO+8iSAtLT4KICA8ZWwtZGlhbG9nIHYtaWY9ImZvcm11bGFTZWxlY3RWaXNpYmxlIiB2LWRpYWxvZy1kcmFnIDpjbG9zZS1vbi1jbGljay1tb2RhbD0iZmFsc2UiCiAgICAgICAgICAgICA6dmlzaWJsZS5zeW5jPSJmb3JtdWxhU2VsZWN0VmlzaWJsZSIgYXBwZW5kLXRvLWJvZHkgY2VudGVyIHdpZHRoPSI3MCUiPgogICAgPHByZW1BbW91bnRGb3JtdWxhU2VsZWN0IDpjYWxjdWxhdGlvbkZvcm11bGFUeXBlPSJwcm9kdWN0Qm5mdEZvcm0uRXhwcmVzc2lvblR5cGUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnBkVXdTaVR5cGVEdE9wdGlvbnM9InByb2R1Y3RCbmZ0Rm9ybS5leHRQcmVtIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpwZFV3U2lUeXBlT3B0aW9ucz0icHJvZHVjdEJuZnRGb3JtLnByZW0iIGd1YXJhbnRlZURldGFpbHM9IjEiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGJyaW5nSW5DYWxjQ29kZT0iYnJpbmdJbkNhbGNDb2RlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBjaGFuZ2VEaWFsb2dWaXNpYmxlX2Zvcm11bGFTZWxlY3Q9ImNoYW5nZURpYWxvZ1Zpc2libGVfZm9ybXVsYVNlbGVjdCI+PC9wcmVtQW1vdW50Rm9ybXVsYVNlbGVjdD4KICA8L2VsLWRpYWxvZz4KCiAgPCEtLSDop4TliJnlvJXmk47lhazlvI/lrprkuYnlvLnnqpcgLS0+CiAgPGN1cy1ydWxlLWRlZmluaXRpb24gOmF0dHJpYnV0ZU9iaj0iYXR0cmlidXRlT2JqIiA6cnVsZURlZmluaXRpb25DbG9zZWQ9InJ1bGVNb2R1bGVDbG9zZWQiCiAgICAgICAgICAgICAgICAgICAgICAgOnZpc2libGU9ImZvcm11bGFWaXNpYmxlIj48L2N1cy1ydWxlLWRlZmluaXRpb24+CgogIDwhLS0g5YWs5byP5p+l55yL5ZKM5Yaz562W5qCR57yW6L6R5by556qXIC0tPgogIDxjdXMtcnVsZS1tb2RpZnkgOmZsYWc9ImZvcm11bGFWaWV3LmZsYWciIDpwZXJmb3JtVHlwZT0iZm9ybXVsYVZpZXcucGVyZm9ybVR5cGUiIDpydWxlQ29kZT0iZm9ybXVsYVZpZXcucnVsZUNvZGUiCiAgICAgICAgICAgICAgICAgICA6cnVsZU1vZGlmeUNsb3NlZD0iZm9ybXVsYVZpZXdDbG9zZWQiIDpydWxlVHlwZT0iJzInIgogICAgICAgICAgICAgICAgICAgOnZpc2libGU9ImZvcm11bGFWaWV3LnZpc2libGUiPjwvY3VzLXJ1bGUtbW9kaWZ5PgoKPC9jdXMtd3JhcGVyPgo="},null]}