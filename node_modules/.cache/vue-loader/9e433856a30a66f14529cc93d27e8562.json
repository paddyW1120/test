{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\ibrms\\ruleManagement\\dynamicTable\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\ibrms\\ruleManagement\\dynamicTable\\index.vue","mtime":1609847106754},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1706753193796},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"index.vue","sourceRoot":"src/views/ibrms/ruleManagement/dynamicTable","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"dynamicTable\"  style=\"width:100%;\">\r\n       <cus-table-title :label=\"$t('dynamicTable.tableName')\"></cus-table-title>\r\n       <el-button-group>\r\n          <el-button  size=\"mini\"\r\n            type=\"primary\"\r\n            v-if=\"isLawEnabled!='Y'\"\r\n            @click=\"decisionTableImport('incremental')\"\r\n          ><i class=\"el-icon-upload\"></i>{{$t('dynamicTable.deltaImport')}}</el-button>\r\n          <el-button  size=\"mini\"\r\n            type=\"primary\"\r\n            v-if=\"isLawEnabled!='Y'\"\r\n            @click=\"decisionTableImport('fullAmount')\"\r\n          ><i class=\"el-icon-upload\"></i>{{$t('dynamicTable.fullAmountImport')}}</el-button>\r\n       </el-button-group>\r\n      <br/>\r\n      <br/>\r\n      <el-form  label-width=\"auto\">\r\n        <el-table :data=\"dataList.paramList.slice((currentPage-1)*pagesize,currentPage*pagesize)\" :row-style=\"rowStyle\"  ref=\"multipleSelection\" align=\"center\" border class=\"wraper-table\" fit highlight-current-row  @selection-change=\"handleSelectionChange\">\r\n              <el-table-column\r\n              type=\"selection\"\r\n              @change=\"selectChange(scope.$index)\"\r\n              width=\"55\">\r\n            </el-table-column>\r\n          <el-table-column  align=\"center\" prop=\"index\" :width=\"numWidth\" :label=\"$t('dynamicTable.num')\">\r\n             <template  scope=\"scope\" :label=\"$t('dynamicTable.num')\">{{(currentPage-1) * pagesize + scope.$index + 1}}</template>\r\n          </el-table-column>\r\n          <el-table-column  v-for=\"(item,index) in dataList.paramArr\"\r\n            :key=\"index\"\r\n            :prop=\"`'${index}'`\"\r\n            :label=\"`${item.prop}`\" v-if=\"showMessage? true : item.commandType != 'RULEID'\" align=\"center\">\r\n             <template slot-scope=\"scope\">\r\n              <el-form-item  v-if=\"item.commandType == 'Number' || item.commandType == 'Int'\">\r\n                <el-input  :disabled=\"isLawEnabled=='Y'\" type=\"number\" :placeholder=\"$t('dynamicTable.pleaseEnterNumber')\" @input=\"preventPoint(dataList.paramList.slice((currentPage-1)*pagesize,currentPage*pagesize)[scope.$index][item.column],item.commandType,dataList.paramList.slice((currentPage-1)*pagesize,currentPage*pagesize)[scope.$index],item.column)\" v-model=\"dataList.paramList.slice((currentPage-1)*pagesize,currentPage*pagesize)[scope.$index][item.column]\" :change=\"judgeParam()\">\r\n                </el-input>\r\n              </el-form-item>\r\n\r\n           <div v-else-if=\"item.commandType == 'String'\">\r\n                <el-form-item  >\r\n                <el-input :disabled=\"isLawEnabled=='Y'\" :placeholder=\"$t('dynamicTable.pleaseEnter')\" v-model=\"dataList.paramList.slice((currentPage-1)*pagesize,currentPage*pagesize)[scope.$index][item.column]\" :change=\"judgeParam()\" :maxlength=\"item.length ? item.length : 255\" show-word-limit>\r\n                </el-input>\r\n              </el-form-item>\r\n           </div>\r\n            <div v-else-if=\"item.commandType == 'Date'\">\r\n               <el-form-item >\r\n                <el-date-picker  :disabled=\"isLawEnabled=='Y'\"  value-format=\"yyyy-MM-dd\" v-model=\"dataList.paramList.slice((currentPage-1)*pagesize,currentPage*pagesize)[scope.$index][item.column]\" :placeholder=\"$t('dynamicTable.selectDate')\" type=\"date\" :change=\"judgeParam()\">\r\n                </el-date-picker>\r\n              </el-form-item>\r\n            </div>\r\n            <div v-else-if=\"item.commandType == 'select'\">\r\n              <el-form-item >\r\n                  <el-select\r\n                   v-model=\"dataList.paramList.slice((currentPage-1)*pagesize,currentPage*pagesize)[scope.$index][item.column]\"\r\n                    :disabled=\"isLawEnabled=='Y'\"\r\n                    :placeholder=\"$t('dynamicTable.pleaseSelect')\"\r\n                  >\r\n                    <el-option\r\n                      v-for=\"item in item.options\"\r\n                      :key=\"item.value\"\r\n                      :label=\"item.label\"\r\n                      :value=\"item.value\"\r\n                    ></el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n            </div>\r\n            <div v-else-if=\"item.commandType == 'multiple'\">\r\n              <el-form-item >\r\n                 <el-select\r\n                    v-model=\"dataList.paramList.slice((currentPage-1)*pagesize,currentPage*pagesize)[scope.$index][item.column]\"\r\n                    :disabled=\"isLawEnabled=='Y'\"\r\n                    multiple\r\n                    :placeholder=\"$t('dynamicTable.pleaseSelect')\"\r\n                  >\r\n                    <el-option\r\n                      v-for=\"item in item.options\"\r\n                      :key=\"item.value\"\r\n                      :label=\"item.label\"\r\n                      :value=\"item.value\"\r\n                    ></el-option>\r\n                  </el-select>\r\n              </el-form-item>\r\n            </div>\r\n             <div v-else-if=\"item.commandType == 'RESULT'\">\r\n                <el-form-item >\r\n                      <el-input  :placeholder=\"$t('dynamicTable.pleaseEnter')\" :disabled=\"isLawEnabled=='Y'\" v-model=\"dataList.paramList.slice((currentPage-1)*pagesize,currentPage*pagesize)[scope.$index][item.column]\" :maxlength=\"item.length ? item.length : 255\" show-word-limit>\r\n                      </el-input>\r\n                </el-form-item>\r\n            </div>\r\n             <div v-else-if=\"item.commandType == 'RULEID'\">\r\n                <el-form-item>\r\n                       <el-button  size=\"mini\"\r\n                          v-model=\"dataList.paramList.slice((currentPage-1)*pagesize,currentPage*pagesize)[scope.$index][item.column]\"\r\n                          :disabled=\"isLawEnabled=='Y'\"\r\n                          clearable\r\n                        >{{$t('route.multilingual_information')}}</el-button>\r\n                </el-form-item>\r\n            </div>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column v-if=\"isLawEnabled !='Y'\" :label=\"$t('dynamicTable.action')\" align=\"center\"  width=\"80px\">\r\n               <template slot-scope=\"scope\">\r\n                <el-button   @click=\"deleteHandle(scope.$index)\" size=\"mini\" type=\"danger\">-</el-button>\r\n              </template>\r\n          </el-table-column>\r\n        </el-table>\r\n       <el-row>\r\n        <el-button\r\n          type=\"primary\"\r\n          v-if=\"isLawEnabled!='Y'\"\r\n          size=\"mini\"\r\n          @click=\"addQualiList()\"\r\n        >+</el-button>\r\n        <el-button-group   style=\"float: right;\" v-if=\"isLawEnabled !='Y'\">\r\n          <el-button  @click=\"deleteSelected\" size=\"mini\" type=\"warning\" ><svg-icon icon-class=\"remove\"/>\r\n          {{$t('dynamicTable.emptySelected')}}</el-button>\r\n          <el-button  @click=\"deleteAll\" size=\"mini\" type=\"warning\"><svg-icon icon-class=\"remove\"/>\r\n          {{$t('dynamicTable.cleanAll')}}</el-button>\r\n        </el-button-group>\r\n      </el-row>\r\n      <el-row>\r\n       <div class=\"pagination\">\r\n          <el-pagination\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"currentPage\"\r\n            :page-sizes=\"[5,10,50, 100]\"\r\n            :page-size=\"pagesize\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"total\"\r\n          ></el-pagination>\r\n        </div>\r\n       </el-row>\r\n       <br/>\r\n      </el-form>\r\n    </div>\r\n    <el-dialog  :visible.sync=\"importShow\" v-dialog-drag  center :close-on-click-modal=\"false\"  width=\"70%\" :show-close=\"false\" :append-to-body=\"true\">\r\n        <cus-page-title-back @backTo=\"importShow = false\" :isDialog=\"true\" :label=\"$t('dynamicTable.decisionTableUpload')\"/>\r\n      <el-row>\r\n        <el-button-group>\r\n          <el-button  size=\"mini\" @click=\"downloadCvTable('template')\" icon=\"el-icon-download\" type=\"primary\">\r\n             {{$t('dynamicTable.dataTemplateDownload')}}\r\n          </el-button>\r\n           <el-button  size=\"mini\" @click=\"downloadCvTable('data')\" icon=\"el-icon-download\" type=\"primary\">\r\n           {{$t('dynamicTable.dataFileDownload')}}\r\n          </el-button>\r\n        </el-button-group>\r\n      </el-row>\r\n      <br>\r\n      <el-form id=\"uploadForm\">\r\n        <el-form-item>\r\n          <el-upload class=\"upload-demo\" :auto-upload=\"true\" :file-list=\"fileList\"\r\n                     :on-remove=\"handleRemove\" :before-upload = \"handleBeforeUpload\" :on-change=\"handleChange\"\r\n                     action=\"url\" drag  ref=\"upload\">\r\n            <i class=\"el-icon-upload\"></i>\r\n            <div class=\"el-upload__text\"> {{$t('dynamicTable.uploadText')}}</div>\r\n            <div class=\"el-upload__text\">{{$t('dynamicTable.uploadText1')}}<em>{{$t('dynamicTable.uploadText2')}}</em></div>\r\n            <div class=\"el-upload__tip\" slot=\"tip\">{{$t('dynamicTable.uploadText3')}}</div>\r\n          </el-upload>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport XLSX from 'xlsx'\r\nlet _this\r\nexport default {\r\n  data() {\r\n    _this = this\r\n    return {\r\n      showLawEnabled: \"N\",\r\n      showColum:false,\r\n      dataList: {\r\n        paramArr: [],\r\n        paramList: []\r\n      },\r\n      currentPage: 1,\r\n      pagesize: 10,\r\n      total:1,\r\n      isLawEnabled: \"\",\r\n      // 符合规则规则的参数判断\r\n      paramFlag: {},\r\n      ruleId: 0,\r\n      ruleCount: \"\",\r\n      ruleMessageInfoBom: {},\r\n      language: \"\",\r\n      fileList: [],\r\n      dataConfigs:[],\r\n      importShow:false,\r\n      importType:\"\",\r\n      ruleCode:\"\",\r\n      multipleSelection: [],\r\n      numWidth:'60px',\r\n      multipleIndex:[],\r\n      pricing:''\r\n    };\r\n  },\r\n  props: [\"list\", \"treeRule\", \"number\", \"ruleMessageInfo\", \"languages\",'code','showMessage'],\r\n  mounted() {\r\n    // list--->传回来的数据\r\n\r\n    this.dataList = this.list;\r\n    if(this.dataList.paramArr.length == 0){\r\n       this.numWidth ='auto';\r\n    }\r\n    if(this.dataList.paramList.length > 0){\r\n       for(var i = 0; i < this.dataList.paramList.length; i++){\r\n           for(var k = 0; k < this.dataList.paramArr.length; k++){\r\n                if( this.dataList.paramArr[k].commandType == \"multiple\"){\r\n                    let value = this.dataList.paramList[i][this.dataList.paramArr[k].column];\r\n                    if(value && value != \"\" && !Array.isArray(value)){\r\n                      this.dataList.paramList[i][this.dataList.paramArr[k].column] =value.split(\",\");\r\n                    }\r\n\r\n                }\r\n           }\r\n\r\n       }\r\n\r\n    }\r\n    console.log(\"this.dataList\",this.dataList);\r\n    this.ruleCode = this.code;\r\n    this.ruleMessageInfoBom = this.ruleMessageInfo;\r\n    this.language =this.languages;\r\n    // 如果是规则树的查看页面 则不能操作\r\n    if (this.treeRule) {\r\n         this.isLawEnabled = \"Y\";\r\n     }else{\r\n        this.isLawEnabled = \"N\";\r\n     }\r\n    this.ruleMessage();\r\n    this.total = this.dataList.paramList.length;\r\n  },\r\n  created() {\r\n\r\n  },\r\n  watch:{\r\n   treeRule(val, oldVal){//普通的watch监听\r\n        if(val) {\r\n            this.isLawEnabled = \"Y\";\r\n         }else{\r\n            this.isLawEnabled = \"N\";\r\n         }\r\n    },\r\n\r\n  },\r\n  methods: {\r\n    // 保存参数\r\n    saveParmas() {\r\n      this.ruleMessage();\r\n      if (true) {\r\n          console.log(this.dataList);\r\n      } else {\r\n        this.$message.error(this.$t('dynamicTable.parmasInfo'));\r\n      }\r\n    },\r\n    // 删除一条数据\r\n    deleteHandle(index) {\r\n      if( this.dataList.paramList.length > 0){\r\n          this.ruleMessage();\r\n          this.dataList.paramList.splice(index, 1);\r\n          this.total = this.total - 1;\r\n        }\r\n\r\n    },\r\n    ruleMessage() {\r\n      var columArray = this.dataList.paramArr;\r\n      //解析决策表生成多语言数据\r\n      for (var i = 0; i < columArray.length; i++) {\r\n       if(columArray[i].keyId != \"\" && columArray[i].keyId){\r\n          var columArrayKey = columArray[i].keyId.split(\",\");\r\n          var columDescription = \"\";\r\n          for (var j = 0; j < columArrayKey.length; j++) {\r\n            if (\r\n              this.ruleMessageInfoBom[\r\n                (this.language + \"_\" + columArrayKey[j]).toUpperCase()\r\n              ]\r\n            ) {\r\n              columDescription += this.ruleMessageInfoBom[\r\n                (this.language + \"_\" + columArrayKey[j]).toUpperCase()\r\n              ];\r\n            } else if (columArrayKey[j] == \"#\") {\r\n              columDescription += \",\";\r\n            } else {\r\n              columDescription += columArrayKey[j];\r\n            }\r\n          }\r\n          this.dataList.paramArr[i].prop = columDescription;\r\n       }\r\n      }\r\n    },\r\n    // 添加一行数据\r\n    addQualiList(value) {\r\n      //value 一行数据 一个对象\r\n      var pushObj = {};\r\n      var keyItemArr = this.dataList.paramArr;\r\n      this.ruleMessage();\r\n      this.total = this.total + 1;\r\n      for (var i = 0; i < keyItemArr.length; i++) {\r\n            if(value && value != '' && typeof value != 'undefined' && Object.keys(value).length > 0){\r\n               pushObj[keyItemArr[i].column] = value[keyItemArr[i].column];\r\n            }else{\r\n               pushObj[keyItemArr[i].column] = \"\";\r\n            }\r\n\r\n      }\r\n\r\n      this.dataList.paramList.push(pushObj);\r\n    },\r\n    dateFrom(index, column) {\r\n      var date = new Date(this.dataList.paramList[index][column]);\r\n      this.dataList.paramList[index][column] =\r\n        date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\r\n    },\r\n    handleSizeChange(val) {\r\n      this.pagesize = val;\r\n    },\r\n    handleCurrentChange(val) {\r\n      this.currentPage = val;\r\n    },\r\n     handleBeforeUpload(file){\r\n\r\n        console.log(file)\r\n        this.$confirm(this.$t('dynamicTable.beforeUploadInfo'), this.$t('dynamicTable.prompt'), {\r\n          confirmButtonText:this.$t('dynamicTable.confirm'),\r\n          cancelButtonText: this.$t('dynamicTable.cancel'),\r\n          type: 'warning'\r\n        }).then(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: this.$t('dynamicTable.continue')\r\n          });\r\n          this.fileList = []\r\n          this.fileList.push(file)\r\n          let files = {0: file}\r\n          console.info(files)\r\n          this.readExcel1(files);\r\n          return true\r\n        }).catch(() => {\r\n          this.$message({\r\n            type: 'info',\r\n            message: this.$t('dynamicTable.cancelOperation')\r\n          });\r\n          return false\r\n        });\r\n        return false\r\n      },\r\n      //文件状态改变，添加文件、上传成功和上传失败时都会被调用\r\n      handleChange(file, fileList) {\r\n        /*this.fileList = fileList;\r\n        //判断文件大小\r\n        if (!(file.size / 1024 / 1024 < 10)) {\r\n          this.notifyError('上传文件大小不能超过 10MB!')\r\n        }\r\n        let files = {0: file.raw}\r\n        this.readExcel1(files);*/\r\n      },\r\n      handleRemove(file, fileList) {\r\n        this.fileList = fileList;\r\n      },\r\n       //下载\r\n      downloadCvTable(type) {\r\n\r\n        this.dataConfigs = [];\r\n        if(type ==\"data\"){\r\n            //获取当前决策表数据\r\n            for (let i = 0; i < this.dataList.paramList.length; i++) {\r\n                  let data = [];\r\n                  for (let n = 0; n < this.dataList.paramArr.length; n++) {\r\n                        let row = this.dataList.paramList[i];\r\n                        let key = this.dataList.paramArr[n].column;\r\n                        let value = row[key];\r\n                        if(this.dataList.paramArr[n].commandType == \"Date\" && value != \"\"){\r\n                            value = this.formatDate(new Date(value), 'yyyy-MM-dd')\r\n                         }\r\n                        data[n] = value;\r\n                  }\r\n                this.dataConfigs[i] =data;\r\n            }\r\n        }\r\n        //获取决策表数据\r\n        let columns = [];\r\n        for (let i = 0; i < this.dataList.paramArr.length; i++) {\r\n              columns.push({\r\n                            title: this.dataList.paramArr[i].column,\r\n                            key: String(i)\r\n                          })\r\n          }\r\n        this.export2Excel(columns, this.dataConfigs, 'DTT_RU_' +this.ruleCode+\"_\"+ this.formatDate(new Date(), 'yyyy-MM-dd hh:mm:ss'))\r\n     },\r\n      readExcel1(files) {//表格导入\r\n        if (files.length <= 0) {//如果没有文件名\r\n          return false;\r\n        } else if (!/\\.(xls|xlsx)$/.test(files[0].name.toLowerCase())) {\r\n          this.$Message.error(this.$t('dynamicTable.uploadFormat'));\r\n          return false;\r\n        }\r\n        const fileReader = new FileReader();\r\n        fileReader.onload = (ev) => {\r\n          try {\r\n            const data = ev.target.result;\r\n            const workbook = XLSX.read(data, {\r\n              type: 'binary'\r\n            });\r\n            const wsname = workbook.SheetNames[0];//取第一张表\r\n            const ws = XLSX.utils.sheet_to_json(workbook.Sheets[wsname]);//生成json表格内容\r\n            console.log(ws);\r\n            //重写数据\r\n            try {\r\n            } catch (err) {\r\n              console.log(err)\r\n            }\r\n            this.$refs.upload.value = '';\r\n          } catch (e) {\r\n            return false;\r\n          }\r\n        };\r\n        fileReader.readAsBinaryString(files[0]);\r\n        //加载成功后\r\n        fileReader.onload = function (evt) {\r\n          if (evt.target.readyState == FileReader.DONE) {\r\n              var data = fileReader.result;\r\n              var workbook = XLSX.read(data, {type: 'binary', cellDates: true});\r\n            }\r\n          var sheet_name_list = workbook.SheetNames;\r\n          var result = XLSX.utils.sheet_to_json(workbook.Sheets[sheet_name_list[0]], {header: 1});\r\n          var arr = [];\r\n          var dataList=[];\r\n          console.log('result',result);\r\n          console.log('_this.dataList.paramArr',_this.dataList.paramArr);\r\n          for (let i = 0; i < result.length; i++) {\r\n            if (i != 0) {\r\n                  let row = {};\r\n                  for (let n = 0; n < result[0].length; n++) {\r\n                        let key = result[0][n];\r\n                        let value = result[i][n];\r\n                        //根据key 判断当前列类型\r\n                        if( _this.dataList.paramArr[n].commandType == \"multiple\"){\r\n                              value = value.split(\",\");\r\n                        }else if(_this.dataList.paramArr[n].commandType == \"Date\"){\r\n                             let reg = /-/g;\r\n                             if (reg.test(value)) {\r\n                                  value =  value.replace(reg, \"\\/\");\r\n                              }\r\n                              value = new Date(value);\r\n                         }\r\n                        row[key]= value;\r\n                      }\r\n                  arr[i - 1] = result[i];\r\n                  dataList[i-1] = row;\r\n               }\r\n\r\n          }\r\n          console.log('feilArr',dataList);\r\n          _this.dataConfigs = arr;\r\n          _this.addData(dataList);\r\n        }\r\n\r\n      },\r\n      decisionTableImport(type){\r\n        this.importShow =true;\r\n        this.importType =type;\r\n      },\r\n      addData(dataList){\r\n        console.log('addData',dataList);\r\n        if(this.importType == \"incremental\"){//增量导入\r\n            for(var i= 0;i < dataList.length;i++){\r\n                this.addQualiList(dataList[i]);\r\n            }\r\n        }else{//全量导入\r\n              this.dataList.paramList = dataList;\r\n              this.total = dataList.length;\r\n        }\r\n\r\n\r\n      },\r\n      judgeParam() {\r\n          this.ruleMessage();\r\n          this.$emit(\"getList\", this.dataList); //将数据传给父组件\r\n      },\r\n      deleteSelected(){\r\n          let num = 0;\r\n          this.multipleSelection.forEach((item,i) => {\r\n            console.log(\"this.multipleSelection\",this.multipleSelection);\r\n            this.dataList.paramList.forEach((param,n) => {\r\n                 console.log(\"param\",param);\r\n                 if(item.rowIndex== param.rowIndex){\r\n                    this.dataList.paramList.splice(n,1);\r\n                    num++;\r\n                 }\r\n            });\r\n\r\n        })\r\n       this.total = this.total-num;\r\n      },\r\n      deleteAll(){\r\n        this.dataList.paramList =[];\r\n        this.total = 0;\r\n      },\r\n      handleSelectionChange(val){\r\n           this.multipleSelection = val;\r\n      },\r\n      rowStyle({row,rowIndex}) {\r\n            Object.defineProperty(row, 'rowIndex', { //给每一行添加不可枚举属性rowIndex来标识当前行\r\n                value: rowIndex,\r\n                writable: true,\r\n                enumerable: false\r\n                })\r\n       },\r\n       preventPoint(val,type,item,colum) {\r\n          var reg = /^-?[1-9]\\d*$/;\r\n          if(!reg.test(val) && type == \"Int\"){\r\n             this.$message(this.$t('dynamicTable.integerCheck'))\r\n             item[colum] = '';\r\n          }\r\n       }\r\n\r\n\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.rule_num{\r\n  width: 60px;\r\n\r\n}\r\n</style>\r\n"]}]}