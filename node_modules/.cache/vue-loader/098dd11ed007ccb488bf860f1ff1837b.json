{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\ibrms\\ruleManagement\\ruleCalculatorMake\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\ibrms\\ruleManagement\\ruleCalculatorMake\\index.vue","mtime":1609847106764},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1706753193796},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"index.vue","sourceRoot":"src/views/ibrms/ruleManagement/ruleCalculatorMake","sourcesContent":["<template>\r\n  <cus-wraper>\r\n    <div style=\"min-height:520px\">\r\n      <template v-if=\"!query && menu\">\r\n        <cus-page-title-back\r\n          @backTo=\"goBack\"\r\n          :isDialog=\"true\"\r\n          :label=\"$t('ruleCalculatorMake.info')\"\r\n        />\r\n      </template>\r\n      <!-- <template v-if=\"!query && !menu\">\r\n           <div>\r\n              <el-row>\r\n                <el-col :span=\"24\">\r\n                  <label>{{$t('ruleCalculatorMake.info')}}</label>\r\n                </el-col>\r\n              </el-row>\r\n              <hr />\r\n            </div>\r\n        </template>\r\n        <br/>\r\n      <br />-->\r\n      <el-row>\r\n        <span class=\"formtitle\">\r\n          <el-divider direction=\"vertical\" class=\"divider\"></el-divider>\r\n          <span>{{ruleName}}</span>\r\n        </span>\r\n        <span style=\"margin-left: 5px;\">\r\n          <el-link\r\n            v-if=\"!query && !updateDynamic\"\r\n            class=\"updateRule\"\r\n            type=\"primary\"\r\n            style=\"border-bottom:dashed 1px;\"\r\n            :disabled=\"(updateState ? false:'disabled')\"\r\n            @click=\"updateRule()\"\r\n          >{{$t('ruleCalculatorMake.updateDecisiontables')}}</el-link>\r\n        </span>\r\n      </el-row>\r\n      <br />\r\n      <div class=\"rule\">\r\n        <span class=\"then\">{{$t('ruleCalculatorMake.algorithm')}}</span>\r\n        <div class=\"thenSkip\" :class=\"[ruleOnly === true ? 'ruleReadOnly' : '']\">\r\n          <!--项目+规则+算法 模块-->\r\n          <div class=\"header\" v-for=\"(items,indexItems) in calculator.cal\">\r\n            <ruleParameter\r\n              :params=\"items\"\r\n              :ruleList=\"calculator.cal\"\r\n              :RuleCacheData=\"RuleCacheData\"\r\n              :ruleMessageInfoBom=\"ruleMessageInfoBom\"\r\n              :paramIndexItems=\"indexItems\"\r\n              :paramLanguage=\"language\"\r\n            ></ruleParameter>\r\n            <template v-if=\"delItemTemp\">\r\n              <i\r\n                class=\"el-icon-circle-close\"\r\n                type=\"primary\"\r\n                size=\"mini\"\r\n                v-if=\"indexItems>=0\"\r\n                @click=\"delItem(calculator.cal,indexItems)\"\r\n              ></i>\r\n            </template>\r\n          </div>\r\n          <template v-if=\"addRuleTemp\">\r\n            <div class=\"ruleBtn\">\r\n              <i\r\n                class=\"el-icon-circle-plus-outline\"\r\n                size=\"mini\"\r\n                @click=\"addRule(calculator.cal, '', 'then')\"\r\n              ></i>\r\n            </div>\r\n          </template>\r\n        </div>\r\n        <div class=\"if\">{{$t('ruleCalculatorMake.conditions')}}</div>\r\n        <div class=\"ifSkip\" :class=\"[ruleOnly === true ? 'ruleReadOnly': '']\">\r\n          <!--项目+规则+算法 模块-->\r\n          <div class=\"header\" v-for=\"(items,indexItems) in calculator.rule\">\r\n            <span\r\n              class=\"add\"\r\n              @click=\"findConnType(items)\"\r\n              v-if=\"indexItems!=0\"\r\n            >{{items.ifConnType?$t('ruleCalculatorMake.or'):$t('ruleCalculatorMake.add')}}</span>\r\n            <ruleParameter\r\n              :params=\"items\"\r\n              :ruleList=\"calculator.rule\"\r\n              :RuleCacheData=\"RuleCacheData\"\r\n              :ruleMessageInfoBom=\"ruleMessageInfoBom\"\r\n              :paramIndexItems=\"indexItems\"\r\n              :paramLanguage=\"language\"\r\n            ></ruleParameter>\r\n            <template v-if=\"delItemTemp\">\r\n              <i\r\n                class=\"el-icon-circle-close\"\r\n                type=\"primary\"\r\n                size=\"mini\"\r\n                v-if=\"indexItems>=0\"\r\n                @click=\"delItem(calculator.rule,indexItems)\"\r\n              ></i>\r\n            </template>\r\n          </div>\r\n          <template v-if=\"addRuleTemp\">\r\n            <div class=\"ruleBtn\">\r\n              <i class=\"el-icon-circle-plus-outline\" size=\"mini\" @click=\"addRule(calculator.rule)\"></i>\r\n            </div>\r\n          </template>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <cus-form-title :label=\"$t('ruleCalculatorMake.dynamicModule')\" :first=\"true\"></cus-form-title>\r\n        <template v-if=\"showButton\">\r\n          <el-button\r\n            size=\"mini\"\r\n            class=\"el-icon\"\r\n            type=\"primary\"\r\n            :disabled=\"(btnState === '1' ? false:'disabled')\"\r\n            @click=\"decisiontable()\"\r\n          >\r\n            <svg-icon icon-class=\"createDecisiontable\" />\r\n            {{$t('ruleCalculatorMake.generateDecisiontables')}}\r\n          </el-button>\r\n        </template>\r\n        <div>\r\n          <template v-if=\"showDynamicTable\">\r\n            <div class=\"param\">\r\n              <dynamicTable\r\n                :list=\"dynamicTableList\"\r\n                :treeRule=\"indexModel.treeRule\"\r\n                :ruleMessageInfo=\"ruleMessageInfoBom\"\r\n                :languages=\"language\"\r\n                :code=\"code\"\r\n                :showMessage=\"showMessage\"\r\n              ></dynamicTable>\r\n            </div>\r\n            <template v-if=\"showButton || updateDynamic || ruleFlag == '3' \">\r\n              <br />\r\n              <br />\r\n              <el-button size=\"mini\" style=\"float: right;\" @click=\"dataFormSubmit()\" type=\"primary\">\r\n                <i class=\"el-icon-success el-icon--left\"></i>\r\n                {{ruleMain.id == ''|| this.flag == '3'?$t('ruleCalculatorMake.save'):$t('ruleCalculatorMake.update')}}\r\n              </el-button>\r\n            </template>\r\n          </template>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </cus-wraper>\r\n</template>\r\n\r\n<script>\r\nimport SelectSearch from \"@/views/ibrms/ruleManagement/selectSearch\";\r\nimport dynamicTable from \"@/views/ibrms/ruleManagement/dynamicTable\";\r\nimport ruleParameter from \"@/views/ibrms/ruleManagement/ruleParameter\";\r\nimport {\r\n  findBomByLanguage,\r\n  findBomItemByLanguageAndBomId,\r\n  findRuleCommandByLanguageAndCommandType,\r\n  ruleMakeSave,\r\n  getComboxData,\r\n  ruleInit\r\n} from \"@/api/ibrms/ruleMake\";\r\nimport { mapGetters } from \"vuex\";\r\n\r\nfunction requiredTip(info) {\r\n  return [\r\n    {\r\n      required: true,\r\n      message: info,\r\n      trigger: \"blur\"\r\n    }\r\n  ];\r\n}\r\nexport default {\r\n  name: \"ruleCalculatorMake\",\r\n  data() {\r\n    return {\r\n      btnState: \"1\",\r\n      ruleName: \"\",\r\n      language: \"\",\r\n      visible: false,\r\n      showMessage: false,\r\n      tID: \"\",\r\n      wid: \"100%\",\r\n      loading: false,\r\n      indexModel: {\r\n        treeRule: false\r\n      },\r\n      showDynamicTable: false,\r\n      dataForm: {},\r\n      calculator: {\r\n        rule: [],\r\n        cal: []\r\n      },\r\n      loading: false,\r\n      ifSkipParam: [],\r\n      dynamicTableList: {\r\n        paramArr: [],\r\n        paramList: []\r\n      },\r\n      itemCommandType: \"empty\",\r\n      delItemTemp: true,\r\n      addRuleTemp: true,\r\n      when: \"\",\r\n      whenDescribe: \"\",\r\n      then: \"\",\r\n      thenDescribe: \"\",\r\n      columnName: [],\r\n      columnType: [],\r\n      ruleOnly: false,\r\n      showButton: true,\r\n      decisionRowname: \"dRow\",\r\n      RuleCacheData: {\r\n        ruleBomList: [],\r\n        ruleBomItemList: [],\r\n        ruleCommandList: [],\r\n        ruleFunctionList: []\r\n      },\r\n      ruleMessageInfoBom: {},\r\n      ruleUseBomList: [],\r\n      ruleUseFunctionList: [],\r\n      ruleUseCommandList: [],\r\n      sqlStatement: \"\",\r\n      code: \"\",\r\n      ruleFlag: \"\",\r\n      query: false,\r\n      updateState: false,\r\n      newCode: \"\",\r\n      ruleMain: {\r\n        id: \"\"\r\n      },\r\n      updateDynamic: false,\r\n      menu: false,\r\n      multivaluedExpression:\"\"\r\n    };\r\n  },\r\n  watch: {},\r\n  computed: {\r\n    ...mapGetters([\"ruleMessage\"])\r\n  },\r\n  components: {\r\n    dynamicTable,\r\n    SelectSearch,\r\n    ruleParameter\r\n  },\r\n  created() {\r\n    this.language = this.$store.state.app.language;\r\n    this.ruleMessageInfoBom = this.$store.state.ruleMessage.ruleMessages;\r\n    this.RuleCacheData = this.$store.state.ruleCache.ruleCacheData;\r\n    this.init();\r\n  },\r\n  props: [\r\n    \"ruleCode\",\r\n    \"flag\",\r\n    \"ruleQuery\",\r\n    \"copyCode\",\r\n    \"updateDynamicTable\",\r\n    \"menuPage\",\r\n    \"performType\"\r\n  ],\r\n  methods: {\r\n    init() {\r\n      //缓存数据 与多语言信息\r\n      if (this.updateDynamicTable) {\r\n        this.updateDynamic = this.updateDynamicTable;\r\n      }\r\n      this.menu = this.menuPage;\r\n      let code = this.ruleCode;\r\n      this.ruleFlag = this.flag;\r\n      this.query = this.ruleQuery;\r\n      this.code = code;\r\n      this.ruleName = this.$t(\"ruleCalculatorMake.ruleInfo\");\r\n      if (this.updateDynamic || this.query) {\r\n        this.ruleName = this.$t(\"ruleCalculatorMake.ruleInfo1\");\r\n      }\r\n      switch (this.flag) {\r\n        case \"3\":\r\n          code = this.copyCode;\r\n          break;\r\n        case \"7\":\r\n          this.ruleOnly = true;\r\n          this.showButton = false;\r\n          break;\r\n      }\r\n      let param = {\"code\":code,\"performType\":this.performType}\r\n      ruleInit(this.buildRequestData(param)).then(response => {\r\n        //0 是定义  1是查看\r\n        if (response.code == 200 && response.data.ruleShow) {\r\n          //查询 根据规则编码展示规则\r\n          var ruleData = response.data.ruleShow;\r\n          this.ruleMain = response.data.ruleShow;\r\n          this.calculator.cal = JSON.parse(ruleData.thenDesctiption);\r\n          this.calculator.rule = JSON.parse(ruleData.whenDescription);\r\n          this.dynamicTableList = JSON.parse(response.data.ruleShow.dataGet);\r\n          this.showDynamicTable = true;\r\n          this.sqlStatement = ruleData.datatableSource;\r\n          this.whenDescription = ruleData.whenDescription;\r\n          this.when = ruleData.whenExperssion;\r\n          this.then = ruleData.thenExperssion;\r\n          this.multivaluedExpression = ruleData.whenSpecialExperssion;\r\n          this.thenDesctiption = ruleData.thenDesctiption;\r\n          this.columnName = ruleData.columnNames.split(\",\");\r\n          this.columnType = ruleData.columnTypes.split(\",\");\r\n          this.ruleUseBomList = response.data.ruleUseBomList;\r\n          this.ruleUseFunctionList = response.data.ruleUseFunctionList;\r\n          this.ruleUseCommandList = response.data.ruleUseCommandList;\r\n          this.ruleOnly = true;\r\n          this.btnState = \"2\";\r\n          this.showButton = false;\r\n          if (!this.updateDynamic) {\r\n            this.indexModel.treeRule = true;\r\n          }\r\n          this.updateState = true;\r\n          if (this.ruleFlag == \"2\") {\r\n            this.codeVersion = ruleData.codeVersion;\r\n          }\r\n          this.delItemTemp = false;\r\n          this.addRuleTemp = false;\r\n          this.ruleOnly = true;\r\n          this.spanNodeEnabled = false;\r\n        } else {\r\n          this.visible = true;\r\n          this.addRules();\r\n        }\r\n      });\r\n      console.log(\"updateDynamic\", this.updateDynamic + \"_\" + this.showButton);\r\n    },\r\n    clear() {\r\n      this.clearDataForm();\r\n      this.visible = false;\r\n    },\r\n    clearDataForm() {\r\n      for (var a in this.dataForm) {\r\n        this.dataForm[a] = \"\";\r\n      }\r\n    },\r\n    dataRule() {},\r\n    addRules() {\r\n      this.calculator.rule.push({\r\n        ifConnType: false,\r\n        columDescription: \"\",\r\n        ifSkip: [\r\n          {\r\n            LeftParenthesis: false,\r\n            LeftParenthesisNumber: 0,\r\n            rightParenthesis: false,\r\n            rightParenthesisNumber: 0,\r\n            constant: {},\r\n            constantShow: true,\r\n            funcState: false,\r\n            showFuncTemp: false,\r\n            funcList: [],\r\n            funcShow: false,\r\n            func: {},\r\n            function: {\r\n              param: []\r\n            },\r\n            backupBom: {\r\n              bomKey: \"\"\r\n            },\r\n            backupBomItem: {},\r\n            backupFunc: {},\r\n            bomList: [],\r\n            bomItemList: [],\r\n            bom: {\r\n              bomKey: \"\"\r\n            },\r\n            bomItem: {\r\n              bomItemKey: \"\"\r\n            },\r\n            bomShow: true,\r\n            bomItemShow: true,\r\n            showEnd: false,\r\n            showEndTemp: false,\r\n            ruleCommand: {\r\n              ruleCommandKey: \"\",\r\n              commandType: \"\"\r\n            },\r\n            ruleCommands: [],\r\n            ruleCommandShow: false,\r\n            //是否展示 项目模块\r\n            showBomTemp: true,\r\n            //是否展示连接词\r\n            showConnTemp: false,\r\n            //是否展示规则\r\n            showBomItemTemp: false,\r\n            //是否展示计算类型\r\n            showRuleCommandTemp: false,\r\n            type: \"1\", //1代表正常 bom  2 函数bom\r\n            paramType: \"\",\r\n            ruleType: \"rule\",\r\n            endParenthesis: false,\r\n            ruleEnds: [],\r\n            endParenthesisNumber: 0\r\n          }\r\n        ]\r\n      });\r\n\r\n      this.calculator.cal.push({\r\n        ifConnType: false,\r\n        columDescription: \"\",\r\n        ifSkip: [\r\n          {\r\n            LeftParenthesis: false,\r\n            LeftParenthesisNumber: 0,\r\n            rightParenthesis: false,\r\n            rightParenthesisNumber: 0,\r\n            constant: {},\r\n            constantShow: true,\r\n            funcState: false,\r\n            showFuncTemp: false,\r\n            funcList: [],\r\n            funcShow: false,\r\n            func: {},\r\n            function: {\r\n              param: []\r\n            },\r\n            backupBom: {\r\n              bomKey: \"\"\r\n            },\r\n            backupBomItem: {},\r\n            backupFunc: {},\r\n            bomList: [],\r\n            bomItemList: [],\r\n            bom: {\r\n              bomKey: \"\"\r\n            },\r\n            bomItem: {\r\n              bomItemKey: \"\"\r\n            },\r\n            bomShow: true,\r\n            bomItemShow: true,\r\n            showEnd: false,\r\n            showEndTemp: false,\r\n            ruleCommand: {\r\n              ruleCommandKey: \"\",\r\n              commandType: \"\"\r\n            },\r\n            ruleCommands: [],\r\n            ruleCommandShow: false,\r\n            //是否展示 项目模块\r\n            showBomTemp: true,\r\n            //是否展示连接词\r\n            showConnTemp: false,\r\n            //是否展示规则\r\n            showBomItemTemp: false,\r\n            //是否展示计算类型\r\n            showRuleCommandTemp: false,\r\n            type: \"1\", //1代表正常 bom  2 函数bom\r\n            paramType: \"\",\r\n            ruleType: \"cal\",\r\n            endParenthesis: false,\r\n            ruleEnds: [],\r\n            endParenthesisNumber: 0\r\n          }\r\n        ]\r\n      });\r\n    },\r\n\r\n    //新增一个如果模块\r\n    addRule(rule, module, then) {\r\n      if (then) {\r\n        if (rule.length >= 1) {\r\n          return;\r\n        }\r\n        rule.push({\r\n          ifConnType: false,\r\n          columDescription: \"\",\r\n          ifSkip: [\r\n            {\r\n              LeftParenthesis: false,\r\n              LeftParenthesisNumber: 0,\r\n              rightParenthesis: false,\r\n              rightParenthesisNumber: 0,\r\n              constant: {},\r\n              constantShow: true,\r\n              funcState: false,\r\n              showFuncTemp: false,\r\n              funcList: [],\r\n              funcShow: false,\r\n              func: {},\r\n              function: {\r\n                param: []\r\n              },\r\n              backupBom: {\r\n                bomKey: \"\"\r\n              },\r\n              backupBomItem: {},\r\n              backupFunc: {},\r\n              bomList: [],\r\n              bomItemList: [],\r\n              bom: {\r\n                bomKey: \"\"\r\n              },\r\n              bomItem: {\r\n                bomItemKey: \"\"\r\n              },\r\n              bomShow: true,\r\n              bomItemShow: true,\r\n              showEnd: false,\r\n              showEndTemp: false,\r\n              ruleCommand: {\r\n                ruleCommandKey: \"\",\r\n                commandType: \"\"\r\n              },\r\n              ruleCommands: [],\r\n              ruleCommandShow: false,\r\n              //是否展示 项目模块\r\n              showBomTemp: true,\r\n              //是否展示连接词\r\n              showConnTemp: false,\r\n              //是否展示规则\r\n              showBomItemTemp: false,\r\n              //是否展示计算类型\r\n              showRuleCommandTemp: false,\r\n              type: \"1\", //1代表正常 bom  2 函数bom\r\n              paramType: \"\",\r\n              ruleType: \"cal\",\r\n              endParenthesis: false,\r\n              ruleEnds: [],\r\n              endParenthesisNumber: 0\r\n            }\r\n          ]\r\n        });\r\n      } else {\r\n        rule.push({\r\n          ifConnType: false,\r\n          columDescription: \"\",\r\n          ifSkip: [\r\n            {\r\n              LeftParenthesis: false,\r\n              LeftParenthesisNumber: 0,\r\n              rightParenthesis: false,\r\n              rightParenthesisNumber: 0,\r\n              constant: {},\r\n              constantShow: true,\r\n              funcState: false,\r\n              showFuncTemp: false,\r\n              funcList: [],\r\n              funcShow: false,\r\n              func: {},\r\n              function: {\r\n                param: []\r\n              },\r\n              backupBom: {\r\n                bomKey: \"\"\r\n              },\r\n              backupBomItem: {},\r\n              backupFunc: {},\r\n              bomList: [],\r\n              bomItemList: [],\r\n              bom: {\r\n                bomKey: \"\"\r\n              },\r\n              bomItem: {\r\n                bomItemKey: \"\"\r\n              },\r\n              bomShow: true,\r\n              bomItemShow: true,\r\n              showEnd: false,\r\n              showEndTemp: false,\r\n              ruleCommand: {\r\n                ruleCommandKey: \"\",\r\n                commandType: \"\"\r\n              },\r\n              ruleCommands: [],\r\n              ruleCommandShow: false,\r\n              //是否展示 项目模块\r\n              showBomTemp: true,\r\n              //是否展示连接词\r\n              showConnTemp: false,\r\n              //是否展示规则\r\n              showBomItemTemp: false,\r\n              //是否展示计算类型\r\n              showRuleCommandTemp: false,\r\n              type: \"1\", //1代表正常 bom  2 函数bom\r\n              paramType: \"\",\r\n              ruleType: \"rule\",\r\n              endParenthesis: false,\r\n              ruleEnds: [],\r\n              endParenthesisNumber: 0\r\n            }\r\n          ]\r\n        });\r\n      }\r\n    },\r\n    delItem(items, index) {\r\n      this.dynamicTableList.paramArr.splice(index, 1);\r\n      items.splice(index, 1); //删除index为i,位置的数组元素\r\n    },\r\n    findConnType(item) {\r\n      item.ifConnType = !item.ifConnType;\r\n    },\r\n    //提交保存结果\r\n    dataFormSubmit() {\r\n      //封装最外层对象\r\n      var ruleMake = {\r\n        ruleFlag: this.ruleFlag,\r\n        ruleMain: {},\r\n        ruleElement: {},\r\n        ruleData: {},\r\n        ruleUseBomList: [],\r\n        ruleUseFunctionList: [],\r\n        ruleUseCommandList: []\r\n      };\r\n      ruleMake.ruleData.dataGet = JSON.stringify(this.dynamicTableList);\r\n      var dataType = \"JSON\";\r\n      if (this.dynamicTableList.paramList.length > 50) {\r\n          //解析数据 传入后台\r\n          dataType = \"SQL\";\r\n      }\r\n      ruleMake.ruleData.dataType = dataType;\r\n      ruleMake.ruleData.columnNames = this.columnName.join(\",\");\r\n      ruleMake.ruleData.columnTypes = this.columnType.join(\",\");\r\n      //封装规则信息\r\n      ruleMake.ruleMain.codeVersion = 0;\r\n      ruleMake.ruleMain.code = this.code;\r\n      ruleMake.ruleMain.decisionTablename = \"ruledata\";\r\n      ruleMake.ruleMain.decisionRowname = this.decisionRowname;\r\n      ruleMake.ruleMain.performType = this.performType;\r\n      //明细信息\r\n      ruleMake.ruleMain.whenThenNum = this.calculator.rule.length;\r\n      ruleMake.ruleElement.whenDescription = JSON.stringify(\r\n        this.calculator.rule\r\n      );\r\n      ruleMake.ruleElement.whenExperssion = this.when;\r\n      ruleMake.ruleElement.whenSpecialExperssion = this.multivaluedExpression;\r\n      ruleMake.ruleElement.thenDesctiption = \"\";\r\n      ruleMake.ruleElement.thenExperssion = this.then;\r\n      ruleMake.ruleElement.thenDesctiption = JSON.stringify(\r\n        this.calculator.cal\r\n      );\r\n      ruleMake.ruleElement.showOrder = 1;\r\n      //如果是复制则去掉 Id\r\n      if (this.flag == \"3\") {\r\n        this.ruleUseFunctionList.forEach(val => {\r\n          val.id = \"\";\r\n        });\r\n        this.ruleUseBomList.forEach(val => {\r\n          val.id = \"\";\r\n        });\r\n        this.ruleUseCommandList.forEach(val => {\r\n          val.id = \"\";\r\n        });\r\n      }\r\n      ruleMake.ruleUseFunctionList = this.ruleUseFunctionList;\r\n      ruleMake.ruleUseBomList = this.ruleUseBomList;\r\n      ruleMake.ruleUseCommandList = this.ruleUseCommandList;\r\n      //提交数据 到后台\r\n      var pageName = this.$route.params.pageName;\r\n      console.log(\"ruleMake\", JSON.stringify(ruleMake));\r\n      let back = ruleMakeSave(ruleMake);\r\n      back.then(response => {\r\n        //返回 跳转之后处理\r\n        if (response.code == 200) {\r\n          switch (response.data.type) {\r\n            case \"isRepeat\":\r\n              this.$message.error(\r\n                this.$t(\"ruleCalculatorMake.first\") +\r\n                  response.data.rows +\r\n                  this.$t(\"ruleCalculatorMake.information1\")\r\n              );\r\n              break;\r\n            case \"isNull\":\r\n              this.$message.error(\r\n                this.$t(\"ruleCalculatorMake.first\") +\r\n                  response.data.row +\r\n                  this.$t(\"ruleCalculatorMake.information\")\r\n              );\r\n              break;\r\n            case \"fail\":\r\n              this.$message.error(this.$t(\"ruleCalculatorMake.fail\"));\r\n              break;\r\n            case \"attr\":\r\n              this.$message.error(this.$t(\"ruleMake.attrInfo\"));\r\n              break;\r\n            default:\r\n              if (!this.updateDynamic) {\r\n                this.$parent.$parent.setRuleMaking(true);\r\n              }\r\n              this.ruleOnly = true;\r\n              this.showButton = false;\r\n              this.indexModel.treeRule = true;\r\n              this.notifySuccess(response.message);\r\n          }\r\n        } else {\r\n          this.$message.error(response.message);\r\n        }\r\n      });\r\n      this.updateState = true;\r\n    },\r\n    //决策表\r\n    async decisiontable() {\r\n      this.dynamicTableList.paramArr = [];\r\n      this.dynamicTableList.paramList = [];\r\n      this.columnName = [];\r\n      this.columnType = [];\r\n      this.ruleUseBomList = [];\r\n      this.ruleUseFunctionList = [];\r\n      this.ruleUseCommandList = [];\r\n      this.sqlStatement =\r\n        \"select Result,RuleId from $RuleData$ \" +\r\n        this.decisionRowname +\r\n        \" where \";\r\n      this.when = \" \";\r\n      this.then = \" \";\r\n      this.multivaluedExpression =\" \";\r\n      var ruleState = true;\r\n      var calState = true;\r\n\r\n      //规则表达式  与 when描述\r\n      if (!this.showDynamicTable) {\r\n        //字段名与类型赋值给决策表对象\r\n        this.indexModel.treeRule = false;\r\n        this.updateState = true;\r\n        for (var i = 0; i < this.calculator.rule.length; i++) {\r\n          var ifSkipArray = this.calculator.rule[i].ifSkip; //纵\r\n          //多个if\r\n          var column =  this.decisionRowname + \".COLUMN\" + i + \" \";\r\n          var threeYuan = \"((@)?#:$)\";\r\n          var commandType =\r\n            ifSkipArray[ifSkipArray.length - 1].ruleCommand.commandType;\r\n          var columDescription = \"\";\r\n          let show = true;\r\n          var option = [];\r\n          var result = {\r\n            expression: \"\",\r\n            columDescription: \"\",\r\n            sqlStatement: \"\",\r\n            prepareExpression:\"\"\r\n          };\r\n          if (this.calculator.rule[i].ifConnType && i > 0) {\r\n            this.when += \" || \";\r\n            this.multivaluedExpression += \" || \";\r\n          } else if (!this.calculator.rule[i].ifConnType && i > 0) {\r\n            this.when += \" && \";\r\n            this.multivaluedExpression += \" && \";\r\n          }\r\n          var result = this.recursiveRuleParameters(ifSkipArray, result);\r\n          columDescription += result.columDescription; //一行\r\n          this.sqlStatement += result.sqlStatement;\r\n          if (\r\n            ifSkipArray[ifSkipArray.length - 1].ruleCommand.commandType ==\r\n            \"String\"\r\n          ) {\r\n            if (\r\n              ifSkipArray[ifSkipArray.length - 1].bomItem.source &&\r\n              ifSkipArray[ifSkipArray.length - 1].bomItem.source != \"\" &&\r\n              ifSkipArray[ifSkipArray.length - 1].bomItem.commandType ==\r\n                \"String\" &&\r\n              ifSkipArray[ifSkipArray.length - 1].ruleCommand.paraNum > 0\r\n            ) {\r\n              this.columnType[this.columnType.length] = \"String\";\r\n              //获取下拉内容\r\n              const paramsMap = {\r\n                sql: ifSkipArray[ifSkipArray.length - 1].bomItem.source\r\n              };\r\n              var dataList = (\r\n                await getComboxData(this.buildRequestData(paramsMap))\r\n              ).data;\r\n              for (var j = 0; j < dataList.length; j++) {\r\n                option.push({\r\n                  value: dataList[j].code,\r\n                  label: dataList[j].code + \":\" + dataList[j].codeName\r\n                });\r\n              }\r\n              if (\r\n                ifSkipArray[ifSkipArray.length - 1].ruleCommand.implenmation ==\r\n                \"multiple\"\r\n              ) {\r\n                commandType = \"multiple\";\r\n              } else {\r\n                commandType = \"select\";\r\n              }\r\n            }\r\n          } else {\r\n            commandType =\r\n              ifSkipArray[ifSkipArray.length - 1].ruleCommand.commandType;\r\n            let preCheck = ifSkipArray[ifSkipArray.length - 1].bomItem.preCheck;\r\n            let type = \"\";\r\n            if (ifSkipArray[ifSkipArray.length - 1].ruleCommand.paraNum > 0) {\r\n              type = commandType;\r\n            }\r\n            if (\r\n              (preCheck == \"N02\" || preCheck == \"N03\") &&\r\n              ifSkipArray[ifSkipArray.length - 1].ruleCommand.paraNum > 0\r\n            ) {\r\n              type = \"Int\";\r\n            }\r\n            this.columnType[this.columnType.length] = type;\r\n          }\r\n          if (commandType == \"multiple\") {\r\n                this.when += \"instrExt(\" + column+ \",\" + result.expression + \") > 0\";\r\n                this.multivaluedExpression +=  \"instrExt(\" + column+ \",(\" + result.expression + \" =null ? \"+column+\":\"+result.expression+\")) > 0\";\r\n                                                                \r\n          } else {\r\n                this.when += result.expression;\r\n                if (ifSkipArray[ifSkipArray.length - 1].ruleCommand.paraNum > 0) {\r\n                    this.when += ifSkipArray[ifSkipArray.length - 1].ruleCommand.implenmation + column;\r\n                    threeYuan = threeYuan.replace(\"@\",result.prepareExpression);\r\n                    threeYuan = threeYuan.replace(\"#\",column);\r\n                    threeYuan = threeYuan.replace(\"$\",result.expression);\r\n                    this.multivaluedExpression += threeYuan + ifSkipArray[ifSkipArray.length - 1].ruleCommand.implenmation  + column;\r\n                }\r\n          }\r\n          this.ruleUseCommandList[this.ruleUseCommandList.length] = {\r\n                commandId: ifSkipArray[ifSkipArray.length - 1].ruleCommand.id\r\n          };\r\n          if (ifSkipArray[ifSkipArray.length - 1].ruleCommand.paraNum > 0) {\r\n                this.columnName[this.columnName.length] = \"COLUMN\" + i;\r\n          }\r\n          if (ifSkipArray[ifSkipArray.length - 1].endParenthesis) {\r\n            for (\r\n              let h = 0;\r\n              h < ifSkipArray[ifSkipArray.length - 1].endParenthesisNumber;\r\n              h++\r\n            ) {\r\n              this.when += \" ) \";\r\n              columDescription += \",),\";\r\n            }\r\n          }\r\n          if (\r\n            ifSkipArray[ifSkipArray.length - 1].ruleCommand &&\r\n            ifSkipArray[ifSkipArray.length - 1].ruleCommand.paraNum > 0\r\n          ) {\r\n            this.dynamicTableList.paramArr[\r\n              this.dynamicTableList.paramArr.length\r\n            ] = {\r\n              prop: columDescription,\r\n              keyId: columDescription,\r\n              commandType: commandType,\r\n              column:\"COLUMN\" + i,\r\n              options: option\r\n            };\r\n          }\r\n\r\n          this.calculator.rule[i].columDescription = columDescription;\r\n        }\r\n        //算法表达式生成\r\n        for (var i = 0; i < this.calculator.cal.length; i++) {\r\n          var thenSkipArray = this.calculator.cal[i].ifSkip; //纵\r\n          var result = {\r\n            expression: \"\",\r\n            columDescription: \"\",\r\n            sqlStatement: \"\"\r\n          };\r\n          var result = this.recursiveRuleParameters(thenSkipArray, result);\r\n          columDescription += result.columDescription; //一行\r\n          this.then += result.expression;\r\n          this.calculator.cal[i].columDescription = result.columDescription;\r\n          //完成sql拼接  算法循环一次\r\n          this.sqlStatement = this.sqlStatement.replace(\r\n            \"Result\",\r\n            result.sqlStatement\r\n          );\r\n        }\r\n        if (\r\n          thenSkipArray[thenSkipArray.length - 1].ruleCommand.resultType !=\r\n          \"end\"\r\n        ) {\r\n          this.$message.error(\"算法定义还未结束！\");\r\n          return;\r\n        }\r\n        if (!ifSkipArray[ifSkipArray.length - 1].showEnd) {\r\n          this.$message.error(\"规则定义还未完成!\");\r\n          return;\r\n        }\r\n        this.columnName[this.columnName.length] = \"RESULT\";\r\n        //  this.columnName[this.columnName.length] = \"RULEID\";\r\n        this.columnType[this.columnType.length] = \"String\";\r\n        //this.columnType[this.columnType.length] = \"button\";\r\n        this.dynamicTableList.paramArr[\r\n          this.dynamicTableList.paramArr.length\r\n        ] = {\r\n          prop: \"RESULT_BOMDTTABLE_DTRATE\",\r\n          keyId: \"RESULT_BOMDTTABLE_DTRATE\",\r\n          commandType: \"RESULT\",\r\n          column: \"RESULT\"\r\n        };\r\n        //待定\r\n        /*this.dynamicTableList.paramArr[\r\n          this.dynamicTableList.paramArr.length\r\n        ] = {\r\n          prop: \"RESULT_RES_MULTMSG\",\r\n          keyId: \"RESULT_RES_MULTMSG\",\r\n          commandType: \"RULEID\",\r\n          column: \"RULEID\"\r\n        };*/\r\n        var keyItemArr = this.dynamicTableList.paramArr;\r\n        var pushObj = {};\r\n        for (var i = 0; i < keyItemArr.length; i++) {\r\n          pushObj[keyItemArr[i].column] = \"\";\r\n        }\r\n        this.dynamicTableList.paramList.push(pushObj);\r\n        this.showDynamicTable = true;\r\n        this.delItemTemp = false;\r\n        this.addRuleTemp = false;\r\n        this.ruleOnly = true;\r\n        this.spanNodeEnabled = false;\r\n        this.btnState = \"2\";\r\n      }\r\n    },\r\n    //修改规则\r\n    updateRule() {\r\n      if (this.showDynamicTable) {\r\n        this.updateState = false;\r\n        this.btnState = \"2\";\r\n        this.showButton = true;\r\n        this.showDynamicTable = false;\r\n        this.delItemTemp = true;\r\n        this.addRuleTemp = true;\r\n        this.ruleOnly = false;\r\n        this.btnState = \"1\";\r\n      }\r\n    },\r\n    getMultilingual(key, name) {\r\n      //若缓存取不到值则使用定义的name\r\n      var result = name;\r\n      if (key && key !== \"\" && key != \"undefined\") {\r\n        var value = this.language + \"_\" + key;\r\n\r\n        if (this.ruleMessageInfoBom[value]) {\r\n          result = this.ruleMessageInfoBom[value];\r\n        }\r\n      }\r\n      return result;\r\n    },\r\n    //递归取值 param\r\n    recursiveRuleParameters(ifSkipArray, result) {\r\n      //一行 多个数据  bom bomItem 运算符 | function 运算符\r\n      //第一个节点  也就是 bom 或 func 左括号\r\n      for (var j = 0; j < ifSkipArray.length; j++) {\r\n        //横\r\n\r\n        var ifSkip = ifSkipArray[j];\r\n        if (j > 0) {\r\n          result.columDescription += \",\";\r\n        }\r\n        if (ifSkip.LeftParenthesis) {\r\n          for (var c = 0; c < ifSkip.LeftParenthesisNumber; c++) {\r\n            result.expression += \"(\";\r\n            result.columDescription += \",(,\";\r\n            result.sqlStatement += \" ( \";\r\n          }\r\n        }\r\n        if (Object.keys(ifSkip.func).length > 0) {\r\n          //函数\r\n          result.expression += ifSkip.func.name + \" (\";\r\n          result.sqlStatement += ifSkip.func.name + \" (\";\r\n          result.columDescription += ifSkip.func.funcKey + \",(,\"; //左括号\r\n          //参数\r\n          this.ruleUseFunctionList[this.ruleUseFunctionList.length] = {\r\n            functionName: ifSkip.func.name\r\n          };\r\n          if (ifSkip.function.param.length > 0) {\r\n            //通过参数遍历此时\r\n            for (var m = 0; m < ifSkip.function.param.length; m++) {\r\n              result = this.recursiveRuleParameters(\r\n                ifSkip.function.param[m].ifSkip,\r\n                result\r\n              );\r\n              result.columDescription;\r\n              //最后\r\n              if (m == ifSkip.function.param.length - 1) {\r\n                result.expression += \" )\";\r\n                result.sqlStatement += \" )\";\r\n                result.columDescription += \",),\"; //右括号\r\n              } else {\r\n                result.columDescription += \",#,\";\r\n                result.expression += \" , \";\r\n                result.sqlStatement += \" ,\";\r\n              }\r\n            }\r\n          }\r\n        } else if (ifSkip.constant.value) {\r\n          //常数\r\n          result.expression += \" \" + ifSkip.constant.value + \" \";\r\n          result.columDescription += \",\" + ifSkip.constant.value + \",\";\r\n          result.sqlStatement += \" \" + ifSkip.constant.value + \" \";\r\n          if (ifSkip.rightParenthesis) {\r\n            for (var n = 0; n < ifSkip.rightParenthesisNumber; n++) {\r\n              result.expression += \")\";\r\n              result.columDescription += \",),\";\r\n              result.sqlStatement += \")\";\r\n            }\r\n          }\r\n        } else {\r\n          if (ifSkip.bom.bomType == \"1\") {\r\n            //bom\r\n            //bom  如果是结果集\r\n            if (ifSkip.bom.name == \"BOMDTTable\") {\r\n              result.expression += this.decisionRowname + \".RESULT \";\r\n              result.sqlStatement += this.decisionRowname + \".RESULT \";\r\n              result.columDescription += ifSkip.bom.bomKey + \",\";\r\n              result.columDescription +=\r\n                \"LINK_LINK_OF,\" + ifSkip.bomItem.bomItemKey + \",\";\r\n            } else {\r\n              result.expression += ifSkip.bom.name + \".\";\r\n              result.sqlStatement += \" ?\" + ifSkip.bom.name + \".\";\r\n              result.columDescription += ifSkip.bom.bomKey + \",\";\r\n              result.expression += ifSkip.bomItem.name + \" \";\r\n              result.sqlStatement += ifSkip.bomItem.name + \"?\";\r\n              result.columDescription +=\r\n                \"LINK_LINK_OF,\" + ifSkip.bomItem.bomItemKey + \",\";\r\n            }\r\n\r\n            if (ifSkip.rightParenthesis) {\r\n              for (var n = 0; n < ifSkip.rightParenthesisNumber; n++) {\r\n                result.expression += \")\";\r\n                result.sqlStatement += \")\";\r\n                result.columDescription += \",),\";\r\n              }\r\n            }\r\n            if(ifSkip.bom.name && result.prepareExpression != \"\"){\r\n                  result.prepareExpression =  result.prepareExpression+\" || \";\r\n             }\r\n            result.prepareExpression = result.prepareExpression +\" \"+ifSkip.bom.name+\".\"+ifSkip.bomItem.name+\" == null\";\r\n            this.ruleUseBomList[this.ruleUseBomList.length] = {\r\n              bomName: ifSkip.bom.name,\r\n              bomItemName: ifSkip.bomItem.name\r\n            };\r\n          }\r\n        }\r\n        if (\r\n          ifSkip.ruleCommand.resultType != \"end\" &&\r\n          ifSkip.ruleCommand.implenmation &&\r\n          ifSkip.ruleCommand.implenmation != \"multiple\"&&\r\n           ifSkip.ruleCommand.resultType != \"Boolean\"\r\n        ) {\r\n          result.expression += ifSkip.ruleCommand.implenmation + \" \";\r\n          if (ifSkip.ruleCommand.implenmation == \"==\") {\r\n            result.sqlStatement += \" =\";\r\n          } else {\r\n            result.sqlStatement += ifSkip.ruleCommand.implenmation + \" \";\r\n          }\r\n          result.columDescription += ifSkip.ruleCommand.ruleCommandKey;\r\n          this.ruleUseCommandList[this.ruleUseCommandList.length] = {\r\n            commandId: ifSkip.ruleCommand.id\r\n          };\r\n        }\r\n      }\r\n      return result;\r\n    },\r\n    goBack() {\r\n      //返回到 规则属性\r\n      this.$parent.$parent.ruleDefinitionTo();\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.showrule {\r\n  margin-left: 25px;\r\n}\r\n\r\n.ruleBtn {\r\n  margin-left: 12px;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.header {\r\n  margin-left: 15px;\r\n  margin-top: 14px;\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.indexHeader {\r\n}\r\n\r\n.project {\r\n  display: inline-block;\r\n}\r\n\r\n.rowheader {\r\n  display: inline-block;\r\n}\r\n\r\n.projectIndex {\r\n  display: inline-block;\r\n}\r\n\r\n.help {\r\n  margin-right: 12px;\r\n  margin-left: 12px;\r\n}\r\n\r\n.if {\r\n  font-weight: bold;\r\n  color: #1d2a6d;\r\n  margin-top: 10px;\r\n}\r\n\r\n.thenSkip {\r\n  margin-top: 8px;\r\n}\r\n\r\n.ruleSelect {\r\n  width: 140px;\r\n}\r\n.param {\r\n  margin-top: 25px;\r\n}\r\n.end {\r\n  color: #dd0024;\r\n}\r\n.then {\r\n  font-weight: bold;\r\n  color: #1d2a6d;\r\n}\r\n.item {\r\n  padding: 10px;\r\n  color: #31a8a3;\r\n}\r\n.ruleReadOnly {\r\n  pointer-events: none;\r\n}\r\n.bomStyle {\r\n  color: #d37f20;\r\n}\r\n.add {\r\n  color: darkorchid;\r\n  padding-right: 5px;\r\n}\r\n.rule {\r\n  margin-left: 20px;\r\n  height: 100%;\r\n  font-size: 12px;\r\n  margin-top: 10px;\r\n}\r\n.rule_div {\r\n  margin-left: 50px;\r\n  margin-top: 55px;\r\n  width: 94%;\r\n  font-size: 12px !important;\r\n  min-height: 500px;\r\n}\r\n.rule_query {\r\n  margin-left: 20px;\r\n  margin-top: 20px;\r\n}\r\n.divider {\r\n  background-color: black;\r\n  margin-left: 4px;\r\n}\r\n\r\n.formtitle {\r\n  margin-top: 10px;\r\n  font-size: 12px !important;\r\n  font-weight: bold;\r\n}\r\n\r\n.titlelarge {\r\n  font-size: 12px !important;\r\n}\r\n.updateRule {\r\n  font-size: 8px !important;\r\n}\r\n.el-scrollbar__wrap {\r\n  overflow: auto !important;\r\n}\r\n.app-container {\r\n  margin-bottom: 20px !important;\r\n}\r\n</style>\r\n"]}]}