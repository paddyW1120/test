{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\test\\workflow.vue?vue&type=style&index=0&id=1e5b5a1c&scoped=true&lang=css&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\test\\workflow.vue","mtime":1609847107209},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":1706753188288},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1706753191924},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\postcss-loader\\src\\index.js","mtime":1706753189537},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYm94X2ZpeGVkIHsKICB3aWR0aDogODAwcHg7CiAgaGVpZ2h0OiA0MHB4OwogIGJvcmRlci1yYWRpdXM6IDIwcHg7CiAgbGluZS1oZWlnaHQ6IDQwcHg7CiAgYmFja2dyb3VuZDogI2VlZTsKfQoKLmlzX2ZpeGVkIHsKICBwb3NpdGlvbjogZml4ZWQ7CiAgdG9wOiAwOwogIHotaW5kZXg6IDk5OTsKfQo="},{"version":3,"sources":["workflow.vue"],"names":[],"mappingswtBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"workflow.vue","sourceRoot":"src/views/test","sourcesContent":["<template>\r\n  <div class=\"box\">\r\n\r\n    <el-divider content-position=\"left\">{{$t('i18nView.workflowTest')}}</el-divider>\r\n\r\n    <div style=\"margin-left:30px\">\r\n      {{$t('i18nView.flowID')}}:\r\n      <el-tag>{{form.processInstanceId}}</el-tag>\r\n      {{$t('i18nView.pdFlowState')}}:\r\n      <el-tag>{{form.statusVo.actName}}</el-tag>\r\n\r\n      {{$t('i18nView.pdFlowType')}}:\r\n      <el-tag>{{form.type}}</el-tag>\r\n\r\n      <el-form :inline=\"true\" :model=\"form\" style=\"margin-top: 20px\">\r\n\r\n        <el-form-item :label=\"$t('i18nView.rentUserId')\">\r\n          <el-input v-model=\"form.tenantId\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('i18nView.userCode')\">\r\n          <el-input v-model=\"form.userCode\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('i18nView.pdCode')\">\r\n          <el-input v-model=\"form.pdCode\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item :label=\"$t('Releasedstatistics.pdVerId')\">\r\n          <el-input v-model=\"form.pdEdition\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n\r\n      <el-card shadow=\"always\" style=\"margin-top: 10px;width: 800px\">\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"doChange\">{{$t('i18nView.applyAlter')}}</el-button>\r\n\r\n          <br>\r\n        <el-radio-group v-model=\"form.flowtype\" style=\"margin-left:10px;margin-top:10px\">\r\n                  <el-radio label=\"1\">{{$t('i18nView.operationInfo')}}</el-radio>\r\n                  <el-radio label=\"0\">{{$t('i18nView.ruleFormula')}}</el-radio>\r\n                  <el-radio label=\"2\">{{ $t('route.productDiscontinuation') }}</el-radio>\r\n        </el-radio-group>\r\n\r\n        <el-checkbox-group v-model=\"form.changeCheckList\" style=\"margin-left:10px;margin-top:10px\">\r\n          <el-checkbox v-if=\"form.flowtype==='0'\" label=\"productRuleFlag\">{{ $t('route.productRuleRevision') }}</el-checkbox>\r\n          <el-checkbox v-if=\"form.flowtype==='0'\" label=\"productFormulaFlag\">{{ $t('route.productCalcRevision') }}</el-checkbox>\r\n          <el-checkbox v-if=\"form.flowtype==='1'\" label=\"productInfoFlag\">{{$t('route.productMain')}}</el-checkbox>\r\n          <el-checkbox v-if=\"form.flowtype==='1'\" v-for=\"item in form.options3\" :label=\"item.key\" >{{item.label}}</el-checkbox>\r\n        </el-checkbox-group>\r\n      </el-card>\r\n\r\n\r\n      <el-card shadow=\"always\" style=\"margin-top: 10px;width: 800px\">\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"getType\">{{$t('i18nView.flowType')}}</el-button>\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"doDeploy\">{{$t('i18nView.postFlow')}}</el-button>\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"getStatus\">{{$t('i18nView.pdFlowState')}}</el-button>\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"doApply\">{{$t('i18nView.pdApply')}}</el-button>\r\n      </el-card>\r\n\r\n\r\n      <el-card shadow=\"always\"  style=\"margin-top: 10px;width: 800px\">\r\n        <el-button  size=\"small\" type=\"primary\" v-if=\"form.type=='0'\" @click=\"finishRuleDef\">{{$t('i18nView.ruleCorrectOver')}}</el-button>\r\n        <el-button  size=\"small\" type=\"primary\" v-if=\"form.type=='0'\" @click=\"finishFormulaDef\">{{$t('i18nView.formulaCorrectover')}}</el-button>\r\n        <el-button  size=\"small\" type=\"primary\"  v-if=\"form.type=='2'\" @click=\"finishDiscontinued\">{{$t('i18nView.pdStopSale')}}</el-button>\r\n      </el-card>\r\n\r\n\r\n\r\n\r\n\r\n\r\n      <el-card shadow=\"always\" style=\"margin-top: 10px;width: 800px\">\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"finishProductInfoDef\">{{$t('route.productMain')}}-结束</el-button>\r\n        <el-select v-model=\"form.selectValue\" class=\"filter-item\" clearable filterable style=\"margin-left: 10px\">\r\n          <el-option v-for=\"item in form.options\" :key=\"item.key\" :label=\"item.label\"\r\n                     :value=\"item.key\" :disabled=\"item.disabled\"></el-option>\r\n        </el-select>\r\n      </el-card>\r\n\r\n\r\n      <el-card shadow=\"always\" style=\"margin-top: 10px;width: 1000px\">\r\n\r\n        {{$t('i18nView.opertionDef')}}:\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"executeOperationalDistribution\">{{$t('route.productSaleDefinition')}}</el-button>\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"executeOperationalCover\">{{$t('route.productUnderwritingDefinition')}}</el-button>\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"executeOperationalUnderwriting\">{{$t('route.underwriting')}}</el-button>\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"executeOperationalRenewal\">{{$t('route.pdtempPdRnInfo_applyList')}}</el-button>\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"executeOperationalPreservation\">{{$t('route.pdPreservationDef')}}</el-button>\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"executeOperationalHePei\">{{$t('route.pdCompensationDef')}}</el-button>\r\n      </el-card>\r\n\r\n\r\n      <el-card shadow=\"always\" style=\"margin-top: 20px;width: 1200px\">\r\n                <el-checkbox-group v-model=\"form.interrupCheckList\">\r\n                  <el-checkbox v-if=\"form.type==='1'\" label=\"productInfoFlag\">{{$t('route.productMain')}}</el-checkbox>\r\n\r\n                  <el-checkbox v-if=\"form.type==='1'\" v-for=\"item in form.options3\"  :label=\"item.key\">{{item.label}}</el-checkbox>\r\n\r\n<!--                  <el-checkbox v-if=\"form.type==='0'\" label=\"productFormulaFlag\">公式订正</el-checkbox>-->\r\n<!--                  <el-checkbox v-if=\"form.type==='0'\" label=\"productRuleFlag\">规则订正</el-checkbox>-->\r\n<!--                  <el-checkbox v-if=\"form.type==='2'\" label=\"productDiscontinued\">产品停售</el-checkbox>-->\r\n                </el-checkbox-group>\r\n        <el-button  size=\"small\" type=\"danger\" @click=\"interrupTestSignal\" style=\"margin-top: 10px\">{{$t('i18nView.stopMiddleTest')}}</el-button>\r\n<!--        <el-radio-group v-model=\"form.checkList\" style=\"margin-left:10px\">-->\r\n<!--          <el-radio v-if=\"form.type==='0'\" label=\"productFormulaFlag\">公式订正</el-radio>-->\r\n<!--          <el-radio v-if=\"form.type==='0'\" label=\"productRuleFlag\">规则订正</el-radio>-->\r\n<!--          <el-radio v-if=\"form.type==='1'\" label=\"productInfoFlag\">产品框架定义</el-radio>-->\r\n<!--          <el-radio  v-if=\"form.type==='1'\" label=\"productOperatingFlag\">产品营运定义</el-radio>-->\r\n<!--          <el-select v-show=\"form.checkList == 'productOperatingFlag'\" v-model=\"form.selectValue3\" class=\"filter-item\" clearable multiple filterable style=\"margin-left: 10px\">-->\r\n<!--            <el-option v-for=\"item in form.options3\" :key=\"item.key\" :label=\"item.label\"-->\r\n<!--                       :value=\"item.key\"></el-option>-->\r\n<!--          </el-select>-->\r\n<!--        </el-radio-group>-->\r\n      </el-card>\r\n\r\n      <el-card shadow=\"always\" style=\"margin-top: 20px;width: 800px\">\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"passNewOrderTest\">{{$t('i18nView.newTest_pass')}}</el-button>\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"passRenewalRenewalTest\">{{$t('i18nView.renewal_pass')}}</el-button>\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"passPreservationTest\">{{$t('i18nView.preservationTest_pass')}}</el-button>\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"passClaimsTest\">{{$t('i18nView.productTestingClaim_pass')}}</el-button>\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"passRuleTest\">{{$t('i18nView.ruleTest_pass')}}</el-button>\r\n      </el-card>\r\n\r\n\r\n      <el-card shadow=\"always\" style=\"margin-top: 20px;width: 600px\">\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"productAudit('1')\" style=\"margin-top: 10px\">{{$t('i18nView.productAudit_pass')}}</el-button>\r\n        <el-button  size=\"small\" type=\"danger\" @click=\"productAudit('0')\" style=\"margin-top: 10px\">{{$t('i18nView.productAudit_notpass')}}</el-button>\r\n        <el-checkbox-group v-model=\"form.auditCheckList\" style=\"margin-left:10px\">\r\n          <el-checkbox v-if=\"form.type==='1'\" label=\"productInfoFlag\">{{$t('route.productMain')}}</el-checkbox>\r\n          <el-checkbox v-if=\"form.type==='1'\" v-for=\"item in form.options3\"  :label=\"item.key\">{{item.label}}</el-checkbox>\r\n          <el-checkbox v-if=\"form.type==='0'\" label=\"productFormulaFlag\">{{$t('i18nView.formulaCorrect')}}</el-checkbox>\r\n          <el-checkbox v-if=\"form.type==='0'\" label=\"productRuleFlag\">{{$t('i18nView.ruleCorrect')}}</el-checkbox>\r\n          <el-checkbox v-if=\"form.type==='2'\" label=\"productDiscontinued\">{{$t('route.productDiscontinuation')}}</el-checkbox>\r\n<!--          <el-select v-show=\"form.checkList == 'productOperatingFlag'\" v-model=\"form.selectValue3\" class=\"filter-item\" clearable multiple filterable style=\"margin-left: 10px\">-->\r\n<!--            <el-option v-for=\"item in form.options3\" :key=\"item.key\" :label=\"item.label\"-->\r\n<!--                       :value=\"item.key\"></el-option>-->\r\n<!--          </el-select>-->\r\n        </el-checkbox-group>\r\n      </el-card>\r\n\r\n      <el-card shadow=\"always\" style=\"margin-top: 20px;width: 600px\">\r\n        <el-button  size=\"small\" type=\"primary\" @click=\"productRelease\" style=\"margin-top: 10px\">{{$t('route.ProductionRelease')}}</el-button>\r\n        <el-button  size=\"small\" type=\"danger\" @click=\"rollbackAudit\" style=\"margin-top: 10px\">{{$t('route.reBackAudit')}}</el-button>\r\n      </el-card>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n\r\n  import {\r\n    deploy,\r\n    applyProduct,\r\n    finishProductInfoDef,\r\n    finishProductOperationalDef,\r\n    passNewOrderTest,\r\n    passRenewalRenewalTest,\r\n    passPreservationTest,\r\n    passClaimsTest,\r\n    passRuleTest,\r\n    productAudit,\r\n    productRelease,\r\n    rollbackAudit,\r\n    assignTask,\r\n    getLeftTaskCount,\r\n    executeOperationalDistribution,\r\n    executeOperationalPreservation,\r\n    executeOperationalUnderwriting,\r\n    executeOperationalRenewal,\r\n    executeOperationalCover,\r\n    executeOperationalHePei,\r\n    finishFormulaDef,\r\n    finishRuleDef,\r\n    changeToDiscontinued,\r\n    finishDiscontinued,\r\n    changeToOperationalOrInfoDefinition,\r\n    changeToFormulaOrRule,\r\n    interrupTestSignal,\r\n    getProductStatus,\r\n    getType,\r\n    testmaxno,\r\n  } from '@/api/workflow/workflow'\r\n\r\n  export default {\r\n    name: 'workflow',\r\n    data() {\r\n      return {\r\n        params2: {\r\n          userCode: 'zxf',\r\n          tenantId: '1'\r\n        },\r\n        configs2: [],\r\n        params: {\r\n          tenantId: '1'\r\n        },\r\n        configs: [],\r\n        form: {\r\n          type: '',\r\n          infoFlag: true,\r\n          statusVo: '',\r\n          options: [{ 'key': 'productOperatingFlag', 'label': '产品营运定义' }, {\r\n            'key': 'productTestFlag',\r\n            'label': '产品测试'\r\n          }, { 'key': 'productAuditFlag', 'label': '产品审核' }],\r\n          options2: [{ 'key': 'productTestFlag', 'label': '产品测试' }, { 'key': 'productAuditFlag', 'label': '产品审核' }],\r\n          options3: [\r\n                     { 'key': 'productDistributionFlag', 'label': '产品销售定义' },\r\n                     { 'key': 'productCoverFlag', 'label': '产品承保定义' },\r\n                     { 'key': 'productUnderwritingFlag', 'label': '产品核保定义' },\r\n                     { 'key': 'productRenewalFlag', 'label': '产品续期续保定义' },\r\n                     { 'key': 'productPreservationFlag', 'label': '产品保全定义' },\r\n                     { 'key': 'productHePeiFlag', 'label': '产品核赔定义' }\r\n                     ],\r\n          options4: [\r\n            { 'key': 'newSingleFlag', 'label': '新单测试' },\r\n            { 'key': 'renewalFlag', 'label': '续期续保测试' },\r\n            { 'key': 'preservationFlag', 'label': '保全测试' },\r\n            { 'key': 'claimsFlag', 'label': '理赔测试' },\r\n          ],\r\n          selectValue: '',\r\n          selectValue2: '',\r\n          selectValue3: [],\r\n          userCode: '',\r\n          tenantId: '',\r\n          checkList: '',\r\n          flowtype: '',\r\n          interrupCheckList: [],\r\n          auditCheckList: [],\r\n          changeCheckList: [],\r\n          businessKey: '',\r\n          pdCode: '',\r\n          pdEdition: '',\r\n          processInstanceId: '6367efa2-73fc-11ea-906a-1263c8728199',\r\n          operationalFlag: '1',\r\n          testFlag: '0',\r\n          leftSubProcess: 0\r\n        }\r\n\r\n      }\r\n    },\r\n    created() {\r\n\r\n    },\r\n    mounted() {\r\n      this.form.processInstanceId = sessionStorage.getItem('processInstanceId')\r\n      if (this.form.processInstanceId){\r\n        this.getType()\r\n        this.getStatus()\r\n      }\r\n    },\r\n    methods: {\r\n      testmaxno(){\r\n        testmaxno().then(res=>{\r\n\r\n        })\r\n      },\r\n      doDeploy() {\r\n        if (this.form.tenantId === '') {\r\n          this.messageError('请输入租户Id')\r\n        } else {\r\n          let data = {\r\n            'tenantId': this.form.tenantId\r\n          }\r\n          deploy(data).then(res => {\r\n            this.notifySuccess('部署完成')\r\n          })\r\n        }\r\n\r\n      },\r\n      getStatus(){\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        getProductStatus(data).then(res=>{\r\n          this.form.statusVo= res.data\r\n        })\r\n      },\r\n      getType(){\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        getType(data).then(res=>{\r\n          this.form.infoFlag = false\r\n          this.form.type= res.data.type\r\n          let backFlag= res.data.backFlag\r\n          for (let i = 0; i < this.form.options.length; i++) {\r\n            if (backFlag == '1' &&  this.form.options[i].key !='productOperatingFlag'){\r\n              this.form.options[i].disabled = true\r\n            }\r\n          }\r\n\r\n          // let variables = res.data.variables\r\n          // ff:for (let i = 0; i < this.form.options3.length; i++) {\r\n          //   let key = this.form.options3[i].key\r\n          //   for (let j = 0; j < variables.length; j++) {\r\n          //     if (key == variables[j].name) {\r\n          //       if (variables[j].value == '0') {\r\n          //         this.form.infoFlag = true\r\n          //         break ff\r\n          //       } else {\r\n          //         break\r\n          //       }\r\n          //\r\n          //     }\r\n          //   }\r\n          // }\r\n\r\n\r\n\r\n        })\r\n      },\r\n      doApply() {\r\n        if (this.form.tenantId === '' || this.form.userCode === '') {\r\n          this.messageError('请输入租户Id或用户编码')\r\n        } else {\r\n          let data = {\r\n            'tenantId': this.form.tenantId,\r\n            'userCode': this.form.userCode,\r\n            'pdCode': this.form.pdCode,\r\n            'pdEdition': this.form.pdEdition\r\n          }\r\n          applyProduct(data).then(res => {\r\n            this.form.processInstanceId = res.data.ProcessInstanceId\r\n            sessionStorage.setItem('processInstanceId', this.form.processInstanceId)\r\n            this.notifySuccess('流程已经启动')\r\n          })\r\n        }\r\n\r\n      },\r\n      doChange(){\r\n\r\n        if (this.form.flowtype=='1'){   //信息定义\r\n          if (this.form.changeCheckList.length<0){\r\n            this.messageError('请选择下一个流程')\r\n            return\r\n          }\r\n          let data = {\r\n            'userCode': this.form.userCode,\r\n            'tenantId': this.form.tenantId,\r\n            'pdCode': this.form.pdCode,\r\n            'pdEdition': this.form.pdEdition,\r\n            'subProcess': this.form.changeCheckList,\r\n          }\r\n          changeToOperationalOrInfoDefinition(data).then(res =>{\r\n            this.notifySuccess('变更成功')\r\n            this.form.processInstanceId = res.data.ProcessInstanceId\r\n            sessionStorage.setItem('processInstanceId', this.form.processInstanceId)\r\n          })\r\n        }else if (this.form.flowtype=='0'){ //产品规则\r\n          let data = {\r\n            'userCode': this.form.userCode,\r\n            'tenantId': this.form.tenantId,\r\n            'pdCode': this.form.pdCode,\r\n            'pdEdition': this.form.pdEdition,\r\n            'variables': this.form.changeCheckList,\r\n          }\r\n          changeToFormulaOrRule(data).then(res =>{\r\n            this.notifySuccess('变更成功')\r\n            this.form.processInstanceId = res.data.ProcessInstanceId\r\n            sessionStorage.setItem('processInstanceId', this.form.processInstanceId)\r\n          })\r\n        }else if(this.form.flowtype=='2'){\r\n          let data = {\r\n            'userCode': this.form.userCode,\r\n            'tenantId': this.form.tenantId,\r\n            'pdCode': this.form.pdCode,\r\n            'pdEdition': this.form.pdEdition,\r\n          }\r\n          changeToDiscontinued(data).then(res =>{\r\n            this.notifySuccess('变更成功')\r\n            this.form.processInstanceId = res.data.ProcessInstanceId\r\n            sessionStorage.setItem('processInstanceId', this.form.processInstanceId)\r\n          })\r\n        }\r\n\r\n      },\r\n      finishProductInfoDef() {\r\n        if (this.form.selectValue === '') {\r\n          this.messageError('请选择下一个流程')\r\n          return\r\n        }\r\n\r\n        let data = {\r\n          'productTestFlag': '1',\r\n          'productOperatingFlag': '1',\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        data[this.form.selectValue] = '0'\r\n        finishProductInfoDef(data).then(res => {\r\n          this.notifySuccess('success')\r\n        })\r\n      },\r\n      finishRuleDef() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId,\r\n          'productTestFlag': '1'\r\n        }\r\n        getLeftTaskCount(data).then(res => {\r\n          let count = res.data\r\n          if (count == 1) {\r\n            this.confirmWarning('是否进入测试流程？').then(() => {\r\n              data['productTestFlag'] = '0'\r\n              finishRuleDef(data).then(res => {\r\n                this.notifySuccess('success')\r\n              })\r\n            }).catch(() => {\r\n              data['productTestFlag'] = '1'\r\n              finishRuleDef(data).then(res => {\r\n                this.notifySuccess('success')\r\n              })\r\n            })\r\n          } else {\r\n            finishRuleDef(data).then(res => {\r\n              this.notifySuccess('success')\r\n            })\r\n          }\r\n        })\r\n      },\r\n      finishDiscontinued() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        finishDiscontinued(data).then(res => {\r\n          this.notifySuccess('success')\r\n        })\r\n\r\n      },\r\n      finishFormulaDef() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n\r\n        finishFormulaDef(data).then(res => {\r\n          this.notifySuccess('success')\r\n        })\r\n\r\n\r\n        // getLeftTaskCount(data).then(res => {\r\n        //   let count = res.data\r\n        //   console.log(\"count:\"+count)\r\n        //   if (count == 1) {\r\n        //     this.confirmWarning('是否进入测试流程？').then(() => {\r\n        //       data['productTestFlag'] = '0'\r\n        //       finishFormulaDef(data).then(res => {\r\n        //         this.notifySuccess('success')\r\n        //       })\r\n        //     }).catch(() => {\r\n        //       data['productTestFlag'] = '1'\r\n        //       finishFormulaDef(data).then(res => {\r\n        //         this.notifySuccess('success')\r\n        //       })\r\n        //     })\r\n        //   } else {\r\n        //     finishFormulaDef(data).then(res => {\r\n        //       this.notifySuccess('success')\r\n        //     })\r\n        //   }\r\n        // })\r\n      },\r\n      executeOperationalDistribution() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        getLeftTaskCount(data).then(res => {\r\n          let count = res.data\r\n          if (count == 1) {\r\n            this.confirmWarning('是否进入测试流程？').then(() => {\r\n              data['productTestFlag'] = '0'\r\n              executeOperationalDistribution(data).then(res => {\r\n                this.notifySuccess('success')\r\n              })\r\n            }).catch(() => {\r\n              data['productTestFlag'] = '1'\r\n              executeOperationalDistribution(data).then(res => {\r\n                this.notifySuccess('success')\r\n              })\r\n            })\r\n          } else {\r\n            executeOperationalDistribution(data).then(res => {\r\n              this.notifySuccess('success')\r\n            })\r\n          }\r\n        })\r\n      },\r\n      executeOperationalPreservation() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        getLeftTaskCount(data).then(res => {\r\n          let count = res.data\r\n          if (count == 1) {\r\n            this.confirmWarning('是否进入测试流程？').then(() => {\r\n              data['productTestFlag'] = '0'\r\n              executeOperationalPreservation(data).then(res => {\r\n                this.notifySuccess('success')\r\n              })\r\n            }).catch(() => {\r\n              data['productTestFlag'] = '1'\r\n              executeOperationalPreservation(data).then(res => {\r\n                this.notifySuccess('success')\r\n              })\r\n            })\r\n          } else {\r\n            executeOperationalPreservation(data).then(res => {\r\n              this.notifySuccess('success')\r\n            })\r\n          }\r\n        })\r\n      },\r\n      executeOperationalUnderwriting() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        getLeftTaskCount(data).then(res => {\r\n          let count = res.data\r\n          if (count == 1) {\r\n            this.confirmWarning('是否进入测试流程？').then(() => {\r\n              data['productTestFlag'] = '0'\r\n              executeOperationalUnderwriting(data).then(res => {\r\n                this.notifySuccess('success')\r\n              })\r\n            }).catch(() => {\r\n              data['productTestFlag'] = '1'\r\n              executeOperationalUnderwriting(data).then(res => {\r\n                this.notifySuccess('success')\r\n              })\r\n            })\r\n          } else {\r\n            executeOperationalUnderwriting(data).then(res => {\r\n              this.notifySuccess('success')\r\n            })\r\n          }\r\n        })\r\n      },\r\n      executeOperationalRenewal() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        getLeftTaskCount(data).then(res => {\r\n          let count = res.data\r\n          if (count == 1) {\r\n            this.confirmWarning('是否进入测试流程？').then(() => {\r\n              data['productTestFlag'] = '0'\r\n              executeOperationalRenewal(data).then(res => {\r\n                this.notifySuccess('success')\r\n              })\r\n            }).catch(() => {\r\n              data['productTestFlag'] = '1'\r\n              executeOperationalRenewal(data).then(res => {\r\n                this.notifySuccess('success')\r\n              })\r\n            })\r\n          } else {\r\n            executeOperationalRenewal(data).then(res => {\r\n              this.notifySuccess('success')\r\n            })\r\n          }\r\n        })\r\n      },\r\n      executeOperationalCover() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        getLeftTaskCount(data).then(res => {\r\n          let count = res.data\r\n          if (count == 1) {\r\n            this.confirmWarning('是否进入测试流程？').then(() => {\r\n              data['productTestFlag'] = '0'\r\n              executeOperationalCover(data).then(res => {\r\n                this.notifySuccess('success')\r\n              })\r\n            }).catch(() => {\r\n              data['productTestFlag'] = '1'\r\n              executeOperationalCover(data).then(res => {\r\n                this.notifySuccess('success')\r\n              })\r\n            })\r\n          } else {\r\n            executeOperationalCover(data).then(res => {\r\n              this.notifySuccess('success')\r\n            })\r\n          }\r\n        })\r\n      },\r\n      executeOperationalHePei() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        getLeftTaskCount(data).then(res => {\r\n          let count = res.data\r\n          if (count == 1) {\r\n            this.confirmWarning('是否进入测试流程？').then(() => {\r\n              data['productTestFlag'] = '0'\r\n              executeOperationalHePei(data).then(res => {\r\n                this.notifySuccess('success')\r\n              })\r\n            }).catch(() => {\r\n              data['productTestFlag'] = '1'\r\n              executeOperationalHePei(data).then(res => {\r\n                this.notifySuccess('success')\r\n              })\r\n            })\r\n          } else {\r\n            executeOperationalHePei(data).then(res => {\r\n              this.notifySuccess('success')\r\n            })\r\n          }\r\n        })\r\n      },\r\n      interrupTestSignal() {\r\n        if (this.form.interrupCheckList.length === 0) {\r\n          this.messageError('请选择回退上一个流程')\r\n        } else {\r\n          let data = {\r\n            'variables': this.form.interrupCheckList,\r\n            'processInstanceId': this.form.processInstanceId\r\n          }\r\n          interrupTestSignal(data).then(res => {\r\n            this.notifySuccess('success')\r\n          })\r\n\r\n        }\r\n      }\r\n      , passNewOrderTest() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        passNewOrderTest(data).then(res => {\r\n          this.notifySuccess('success')\r\n        })\r\n      }, passRenewalRenewalTest() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        passRenewalRenewalTest(data).then(res => {\r\n          this.notifySuccess('success')\r\n        })\r\n      }, passPreservationTest() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        passPreservationTest(data).then(res => {\r\n          this.notifySuccess('success')\r\n        })\r\n      }, passClaimsTest() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        passClaimsTest(data).then(res => {\r\n          this.notifySuccess('success')\r\n        })\r\n      }, passRuleTest() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        passRuleTest(data).then(res => {\r\n          this.notifySuccess('success')\r\n        })\r\n      }, productAudit(flag) {\r\n        if (flag == '0') { //审核不通过\r\n          if (this.form.auditCheckList.length === 0) {\r\n            this.messageError('请选择回退上一个流程')\r\n            return\r\n          } else {\r\n            let data = {\r\n              'productAuditFlag': flag,\r\n              'variables': this.form.auditCheckList,\r\n              'processInstanceId': this.form.processInstanceId\r\n            }\r\n            productAudit(data).then(res => {\r\n              this.notifySuccess('success')\r\n            })\r\n          }\r\n        } else {\r\n          let data = {\r\n            'productAuditFlag': flag,\r\n            'processInstanceId': this.form.processInstanceId\r\n          }\r\n          productAudit(data).then(res => {\r\n            this.notifySuccess('success')\r\n          })\r\n        }\r\n\r\n      }, productRelease() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        productRelease(data).then(res => {\r\n          this.notifySuccess('success')\r\n        })\r\n      }, rollbackAudit() {\r\n        let data = {\r\n          'processInstanceId': this.form.processInstanceId\r\n        }\r\n        rollbackAudit(data).then(res => {\r\n          this.notifySuccess('success')\r\n        })\r\n      }, assignTask(taskId) {\r\n        if (this.form.userCode === '') {\r\n          this.messageError('认领人为空')\r\n          return\r\n        } else {\r\n          let data = {\r\n            'userCode': this.form.userCode,\r\n            'taskId': taskId\r\n          }\r\n          assignTask(data).then(res => {\r\n            this.$refs.page.reload()\r\n            this.notifySuccess('认领完成')\r\n          })\r\n        }\r\n      },\r\n      handleSearch() {\r\n        this.$refs.page.reload()\r\n      }, handleSearch2() {\r\n        this.$refs.page2.reload()\r\n      },\r\n      filterHandler(value, row, column) {\r\n        const property = column['property']\r\n        return row[property] === value\r\n      },\r\n      destroyed() {\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  .box_fixed {\r\n    width: 800px;\r\n    height: 40px;\r\n    border-radius: 20px;\r\n    line-height: 40px;\r\n    background: #eee;\r\n  }\r\n\r\n  .is_fixed {\r\n    position: fixed;\r\n    top: 0;\r\n    z-index: 999;\r\n  }\r\n</style>\r\n"]}]}