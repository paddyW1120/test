{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\workflow\\deploy\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\workflow\\deploy\\index.vue","mtime":1609847107226},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1706753193796},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgewogIGRlcGxveSxnZXRBbGxUZW5hbnQKfSBmcm9tICdAL2FwaS93b3JrZmxvdy93b3JrZmxvdycKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnd29ya2Zsb3cnLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBmaWxlTGlzdDogW10sCiAgICAgIHJ1bGVzOiB7CiAgICAgICAgdGVuYW50SWQ6IFsKICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6IHRoaXMuJHQoJ3dvcmtmbG93LnNlbGVjdFRlbmFudCcpLCB0cmlnZ2VyOiAnY2hhbmdlJyB9CiAgICAgICAgXQogICAgICB9LAogICAgICBmb3JtOiB7CiAgICAgICAgdGVuYW50SWQ6ICcnCiAgICAgIH0sCiAgICAgIHRlbmFudE9wdGlvbnM6IFtdCiAgICB9CiAgfSwKICBjcmVhdGVkKCkgewogICAgdGhpcy5pbml0VGVuYW50TGlzdHMoKQogIH0sCiAgbW91bnRlZCgpIHsKICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZUNoYW5nZShmaWxlLCBmaWxlTGlzdCkgewogICAgICAvL+WIpOaWreaWh+S7tuWkp+WwjwogICAgICBpZiAodGhpcy5oYW5kbGVCZWZvcmUoZmlsZSxmaWxlTGlzdCkpewogICAgICAgIHRoaXMuZmlsZUxpc3QgPSBmaWxlTGlzdAogICAgICB9ZWxzZSB7CiAgICAgICAgdGhpcy5maWxlTGlzdCA9IFtdCiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CiAgICB9LAogICAgaGFuZGxlQmVmb3JlKGZpbGUsIGZpbGVMaXN0KSB7CiAgICAgIGNvbnN0IGlzQnBtbiA9IGZpbGUubmFtZS5pbmRleE9mKCcuYnBtbicpID4gMAogICAgICBjb25zdCBpc0x0NU0gPSBmaWxlLnNpemUgLyAxMDI0IC8gMTAyNCA8PSA1CiAgICAgIGlmICghaXNCcG1uKSB7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign5Y+q6IO95pivIGJwbW4g5qC85byPIScpCiAgICAgIH0KICAgICAgaWYgKCFpc0x0NU0pIHsKICAgICAgICB0aGlzLiRtZXNzYWdlLmVycm9yKCfkuIrkvKDmlofku7bkuI3og73otoXov4cgMTBNQiEnKQogICAgICB9CiAgICAgIHJldHVybiBpc0JwbW4gJiYgaXNMdDVNCiAgICB9LCBoYW5kbGVSZW1vdmUoZmlsZSwgZmlsZUxpc3QpIHsKICAgICAgdGhpcy5maWxlTGlzdCA9IGZpbGVMaXN0CiAgICB9LAogICAgaW5pdFRlbmFudExpc3RzKCkgewogICAgICBnZXRBbGxUZW5hbnQoKS50aGVuKHJlcyA9PiB7CiAgICAgICAgdGhpcy50ZW5hbnRPcHRpb25zID0gW10KICAgICAgICBsZXQgdGVuYW50TGlzdCA9IHJlcy5kYXRhCiAgICAgICAgdGVuYW50TGlzdC5mb3JFYWNoKGRhdGEgPT4gewogICAgICAgICAgdGhpcy50ZW5hbnRPcHRpb25zLnB1c2goeyAndmFsdWUnOiBkYXRhLmlkLCAnbGFiZWwnOiBkYXRhLm5hbWUgfSkKICAgICAgICB9KQogICAgICB9KQogICAgfSwKICAgIGRvRGVwbG95KCkgewogICAgICBpZiAodGhpcy5maWxlTGlzdC5sZW5ndGggPT09IDApIHsKICAgICAgICB0aGlzLm5vdGlmeUVycm9yKHRoaXMuJHQoJ3BkdGVtcFBkQ3YucGxlYXNlU2VsZWN0RmlsZScpKQogICAgICB9IGVsc2UgewoKICAgICAgICB0aGlzLiRyZWZzWydkYXRhRm9ybSddLnZhbGlkYXRlKHZhbGlkID0+IHsKICAgICAgICAgIGlmICh2YWxpZCkgewogICAgICAgICAgICBsZXQgZmlsZURhdGEgPSB0aGlzLnVwbG9hZFV0aWwodGhpcy5maWxlTGlzdCkKICAgICAgICAgICAgZGVwbG95KHRoaXMuZm9ybS50ZW5hbnRJZCwgZmlsZURhdGEpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgICB0aGlzLiRyZWZzLnVwbG9hZC5jbGVhckZpbGVzKCkKICAgICAgICAgICAgICB0aGlzLmZpbGVMaXN0ID0gW10KICAgICAgICAgICAgICB0aGlzLm5vdGlmeVN1Y2Nlc3MoJ+WPkeW4g+aIkOWKnycpCiAgICAgICAgICAgIH0pCiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgfQoKICAgIH0KICB9Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/workflow/deploy","sourcesContent":["<template>\r\n  <div class=\"box\">\r\n    <el-divider content-position=\"left\">{{$t('workflow.pageTitle')}}</el-divider>\r\n    <div style=\"margin-left:30px\">\r\n      <el-form ref=\"dataForm\" :model=\"form\" style=\"margin-top: 20px\" label-width=\"auto\" :rules=\"rules\">\r\n        <el-form-item :label=\"$t('workflow.fileUpload')\" required >\r\n          <el-upload v-model=\"form.fileName\" ref=\"upload\" action=\"#\" style=\"width: 400px\" :on-change=\"handleChange\" :limit=\"1\" :auto-upload=\"false\" drag :on-remove=\"handleRemove\"\r\n                     :file-list=\"fileList\">\r\n            <i class=\"el-icon-upload\"></i>\r\n            <div class=\"el-upload__text\">{{$t('workflow.fileTip')}}<em>{{$t('workflow.clickTip')}}</em></div>\r\n            <div class=\"el-upload__tip\" slot=\"tip\">{{$t('workflow.fileOnly')}}</div>\r\n          </el-upload>\r\n        </el-form-item>\r\n        <cus-row>\r\n            <cus-col :span=\"6\">\r\n              <el-form-item :label=\"$t('workflow.tenant')\" prop=\"tenantId\">\r\n                <el-select v-model=\"form.tenantId\" class=\"filter-item\" clearable filterable\r\n                           :placeholder=\"$t('i18nView.selectPlaceholder')\">\r\n                  <el-option v-for=\"item in tenantOptions\" :key=\"item.value\" :label=\"item.label\"\r\n                             :value=\"item.value\"></el-option>\r\n                </el-select>\r\n              </el-form-item>\r\n            </cus-col>\r\n        </cus-row>\r\n        <el-button  size=\"small\" v-auth=\"'workflow:deploy'\" type=\"primary\" @click=\"doDeploy\">{{ $t('workflow.deploy') }}</el-button>\r\n      </el-form>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\n  import {\r\n    deploy,getAllTenant\r\n  } from '@/api/workflow/workflow'\r\n\r\n  export default {\r\n    name: 'workflow',\r\n    data() {\r\n      return {\r\n        fileList: [],\r\n        rules: {\r\n          tenantId: [\r\n            { required: true, message: this.$t('workflow.selectTenant'), trigger: 'change' }\r\n          ]\r\n        },\r\n        form: {\r\n          tenantId: ''\r\n        },\r\n        tenantOptions: []\r\n      }\r\n    },\r\n    created() {\r\n      this.initTenantLists()\r\n    },\r\n    mounted() {\r\n    },\r\n    methods: {\r\n      handleChange(file, fileList) {\r\n        //判断文件大小\r\n        if (this.handleBefore(file,fileList)){\r\n          this.fileList = fileList\r\n        }else {\r\n          this.fileList = []\r\n          return false;\r\n        }\r\n      },\r\n      handleBefore(file, fileList) {\r\n        const isBpmn = file.name.indexOf('.bpmn') > 0\r\n        const isLt5M = file.size / 1024 / 1024 <= 5\r\n        if (!isBpmn) {\r\n          this.$message.error('只能是 bpmn 格式!')\r\n        }\r\n        if (!isLt5M) {\r\n          this.$message.error('上传文件不能超过 10MB!')\r\n        }\r\n        return isBpmn && isLt5M\r\n      }, handleRemove(file, fileList) {\r\n        this.fileList = fileList\r\n      },\r\n      initTenantLists() {\r\n        getAllTenant().then(res => {\r\n          this.tenantOptions = []\r\n          let tenantList = res.data\r\n          tenantList.forEach(data => {\r\n            this.tenantOptions.push({ 'value': data.id, 'label': data.name })\r\n          })\r\n        })\r\n      },\r\n      doDeploy() {\r\n        if (this.fileList.length === 0) {\r\n          this.notifyError(this.$t('pdtempPdCv.pleaseSelectFile'))\r\n        } else {\r\n\r\n          this.$refs['dataForm'].validate(valid => {\r\n            if (valid) {\r\n              let fileData = this.uploadUtil(this.fileList)\r\n              deploy(this.form.tenantId, fileData).then(res => {\r\n                this.$refs.upload.clearFiles()\r\n                this.fileList = []\r\n                this.notifySuccess('发布成功')\r\n              })\r\n            }\r\n          })\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n"]}]}