{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\customComponents\\CodeCascader\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\customComponents\\CodeCascader\\index.vue","mtime":1609847106329},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\babel-loader\\lib\\index.js","mtime":1706753193796},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQoNCmltcG9ydCB7bWFwR2V0dGVyc30gZnJvbSAndnVleCcNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAnQ2FzY2FkZXInLA0KICBwcm9wczogew0KICAgIHNob3dBbGxMZXZlbHM6IHsNCiAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICByZXF1aXJlZDogZmFsc2UsDQogICAgICBkZWZhdWx0OiBmYWxzZQ0KICAgIH0sDQogICAgY29kZXR5cGU6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIHJlcXVpcmVkOiB0cnVlDQogICAgfSwNCiAgICBpc19tdWx0aXBsZTogew0KICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwNCiAgICAgIGRlZmF1bHQ6IGZhbHNlDQogICAgfSwNCiAgICBmaWx0ZXI6IHsNCiAgICAgIHR5cGU6IFN0cmluZywNCiAgICAgIHJlcXVpcmVkOiBmYWxzZQ0KICAgIH0sDQogICAgZGlzYWJsZWQ6IHsNCiAgICAgIHR5cGU6IEJvb2xlYW4sDQogICAgICByZXF1aXJlZDogZmFsc2UNCiAgICB9LA0KICAgIHZhbHVlOiB7DQogICAgICB0eXBlOiBBcnJheQ0KICAgIH0sDQogICAgZGlzYWJsZWRDb2RlQXJyYXlfZmlyc3Q6IHsNCiAgICAgIHR5cGU6IEFycmF5LA0KICAgICAgcmVxdWlyZWQ6IGZhbHNlLA0KICAgICAgZGVmYXVsdDogKCkgPT4gew0KICAgICAgICByZXR1cm4gW10NCiAgICAgIH0NCiAgICB9LA0KICAgIGRpc2FibGVkQ29kZUFycmF5X3NlY29uZDogew0KICAgICAgdHlwZTogQXJyYXksDQogICAgICByZXF1aXJlZDogZmFsc2UsDQogICAgICBkZWZhdWx0OiAoKSA9PiB7DQogICAgICAgIHJldHVybiBbXQ0KICAgICAgfQ0KICAgIH0NCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICBsZXQgZmlyc3RPcHRpb25zID0gdGhpcy5sZGNvZGVzW3RoaXMuY29kZXR5cGVdDQogICAgdGhpcy5idWlsZENhc0NhZGVyT3B0aW9ucyhmaXJzdE9wdGlvbnMpDQogICAgaWYgKHRoaXMuaXNfbXVsdGlwbGUpIHsNCiAgICAgIHRoaXMuc2V0dGluZ3MgPSB7J211bHRpcGxlJzogdHJ1ZX0NCiAgICB9DQogICAgdGhpcy5zZWxlY3RWYWx1ZSA9IHRoaXMudmFsdWUNCiAgICBpZiAodGhpcy5kaXNhYmxlZCkgew0KICAgICAgdGhpcy5pc0Rpc2FibGVkID0gdGhpcy5kaXNhYmxlZA0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGRvQ2hhbmdlKHZhbCkgew0KICAgICAgdGhpcy4kZW1pdCgnY2hhbmdlJywgdmFsKQ0KICAgIH0sDQogICAgYnVpbGRDYXNDYWRlck9wdGlvbnMoZmlyc3RPcHRpb25zKSB7DQogICAgICBsZXQgc2Vjb25kS2V5QXJyYXlfZGlzYWJsZWQgPSBbXQ0KICAgICAgZm9yIChjb25zdCBpdGVtIG9mIHRoaXMuZGlzYWJsZWRDb2RlQXJyYXlfc2Vjb25kKSB7DQogICAgICAgIGlmIChpdGVtLnNwbGl0KCctJykubGVuZ3RoIDwgMikgew0KICAgICAgICAgIGNvbnRpbnVlDQogICAgICAgIH0NCiAgICAgICAgbGV0IGZpcnN0RGF0YURpc2FibGVkS2V5ID0gdGhpcy5jb2RldHlwZSArICcuJyArIGl0ZW0uc3BsaXQoJy0nKVswXSArICcuJyArIGl0ZW0uc3BsaXQoJy0nKVsxXQ0KICAgICAgICBpZiAoIXRoaXMuXy5pbmNsdWRlcyhzZWNvbmRLZXlBcnJheV9kaXNhYmxlZCwgZmlyc3REYXRhRGlzYWJsZWRLZXkpKSB7DQogICAgICAgICAgc2Vjb25kS2V5QXJyYXlfZGlzYWJsZWQucHVzaChmaXJzdERhdGFEaXNhYmxlZEtleSkNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBmaXJzdE9wdGlvbnMubGVuZ3RoOyBpKyspIHsNCiAgICAgICAgbGV0IGZpcnN0RGF0YSA9IGZpcnN0T3B0aW9uc1tpXQ0KICAgICAgICBsZXQgZmlyc3RMZXZlbCA9IHsNCiAgICAgICAgICAndmFsdWUnOiBmaXJzdERhdGEuY29kZSwNCiAgICAgICAgICAnbGFiZWwnOiBmaXJzdERhdGEuY29kZSArICc6JyArIGZpcnN0RGF0YS5jb2RlbmFtZSwNCiAgICAgICAgICAnY2hpbGRyZW4nOiBbXSwNCiAgICAgICAgICAnZGlzYWJsZWQnOiB0aGlzLl8uaW5jbHVkZXModGhpcy5kaXNhYmxlZENvZGVBcnJheV9maXJzdCwgZmlyc3REYXRhLmNvZGUpDQogICAgICAgIH0NCiAgICAgICAgbGV0IHNlY29uZEtleSA9IHRoaXMuY29kZXR5cGUgKyAnLicgKyBmaXJzdERhdGEuY29kZQ0KICAgICAgICBsZXQgc2Vjb25kT3B0aW9ucyA9IHRoaXMubGRjb2Rlc1tzZWNvbmRLZXldDQogICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgc2Vjb25kT3B0aW9ucy5sZW5ndGg7IGorKykgew0KICAgICAgICAgIGxldCBzZWNvbmREYXRhID0gc2Vjb25kT3B0aW9uc1tqXQ0KICAgICAgICAgIGxldCBzZWNvbmRMZXZlbCA9IHsNCiAgICAgICAgICAgICd2YWx1ZSc6IHNlY29uZERhdGEuY29kZSwNCiAgICAgICAgICAgICdsYWJlbCc6IHNlY29uZERhdGEuY29kZSArICI6IiArIHNlY29uZERhdGEuY29kZW5hbWUsDQogICAgICAgICAgICAnZGlzYWJsZWQnOiB0aGlzLl8uaW5jbHVkZXMoc2Vjb25kS2V5QXJyYXlfZGlzYWJsZWQsIHNlY29uZEtleSArICcuJyArIHNlY29uZERhdGEuY29kZSkNCiAgICAgICAgICB9DQogICAgICAgICAgZmlyc3RMZXZlbC5jaGlsZHJlbi5wdXNoKHNlY29uZExldmVsKQ0KICAgICAgICB9DQogICAgICAgIHRoaXMub3B0aW9ucy5wdXNoKGZpcnN0TGV2ZWwpDQogICAgICB9DQogICAgfQ0KICB9LA0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBvcHRpb25zOiBbXSwNCiAgICAgIHNlbGVjdFZhbHVlOiBbXSwNCiAgICAgIHNldHRpbmdzOiB7fSwNCiAgICAgIGlzRGlzYWJsZWQ6IGZhbHNlDQogICAgfQ0KICB9LA0KICB3YXRjaDogew0KICAgIHZhbHVlKHZhbCwgb2xkVmFsKSB7DQogICAgICB0aGlzLnNlbGVjdFZhbHVlID0gdmFsDQogICAgfSwNCiAgICBzZWxlY3RWYWx1ZSh2YWwsIG9sZFZhbCkgew0KICAgICAgaWYgKHZhbCAhPSBvbGRWYWwpIHsNCiAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCB0aGlzLnNlbGVjdFZhbHVlKQ0KICAgICAgfQ0KICAgIH0sDQogICAgZGlzYWJsZWQodmFsLCBvbGRWYWwpIHsNCiAgICAgIGlmICh2YWwgIT0gb2xkVmFsKSB7DQogICAgICAgIHRoaXMuaXNEaXNhYmxlZCA9IHZhbA0KICAgICAgfQ0KICAgIH0sDQogICAgZmlsdGVyKHZhbCwgb2xkVmFsKSB7DQogICAgICBpZiAodmFsICE9IG9sZFZhbCkgew0KICAgICAgICB0aGlzLnNlbGVjdFZhbHVlID0gJycNCiAgICAgICAgdGhpcy5vcHRpb25zID0gdGhpcy5sZGNvZGVzW3RoaXMuY29kZXR5cGVdDQogICAgICAgIGxldCBmaWx0ZXJPcHRpb25zID0gdGhpcy5maWx0ZXJPcHRpb25zKHZhbCwgdGhpcy5vcHRpb25zKQ0KICAgICAgICB0aGlzLmJ1aWxkQ2FzQ2FkZXJPcHRpb25zKGZpbHRlck9wdGlvbnMpDQogICAgICB9DQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcEdldHRlcnMoWw0KICAgICAgJ2xkY29kZXMnDQogICAgXSkNCiAgfQ0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAefile":"index.vue","sourceRoot":"src/customComponents/CodeCascader","sourcesContent":["<template>\r\n  <el-cascader\r\n    v-model=\"selectValue\"\r\n    :disabled=\"isDisabled\"\r\n    :options=\"options\"\r\n    :placeholder=\"$t('i18nView.selectPlaceholder')\"\r\n    :props=\"settings\"\r\n    :show-all-levels=\"showAllLevels\"\r\n    class=\"filter-item\"\r\n    clearable\r\n    @change=\"doChange\"></el-cascader>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {mapGetters} from 'vuex'\r\n\r\nexport default {\r\n  name: 'Cascader',\r\n  props: {\r\n    showAllLevels: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    codetype: {\r\n      type: String,\r\n      required: true\r\n    },\r\n    is_multiple: {\r\n      type: Boolean,\r\n      required: false,\r\n      default: false\r\n    },\r\n    filter: {\r\n      type: String,\r\n      required: false\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      required: false\r\n    },\r\n    value: {\r\n      type: Array\r\n    },\r\n    disabledCodeArray_first: {\r\n      type: Array,\r\n      required: false,\r\n      default: () => {\r\n        return []\r\n      }\r\n    },\r\n    disabledCodeArray_second: {\r\n      type: Array,\r\n      required: false,\r\n      default: () => {\r\n        return []\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    let firstOptions = this.ldcodes[this.codetype]\r\n    this.buildCasCaderOptions(firstOptions)\r\n    if (this.is_multiple) {\r\n      this.settings = {'multiple': true}\r\n    }\r\n    this.selectValue = this.value\r\n    if (this.disabled) {\r\n      this.isDisabled = this.disabled\r\n    }\r\n  },\r\n  methods: {\r\n    doChange(val) {\r\n      this.$emit('change', val)\r\n    },\r\n    buildCasCaderOptions(firstOptions) {\r\n      let secondKeyArray_disabled = []\r\n      for (const item of this.disabledCodeArray_second) {\r\n        if (item.split('-').length < 2) {\r\n          continue\r\n        }\r\n        let firstDataDisabledKey = this.codetype + '.' + item.split('-')[0] + '.' + item.split('-')[1]\r\n        if (!this._.includes(secondKeyArray_disabled, firstDataDisabledKey)) {\r\n          secondKeyArray_disabled.push(firstDataDisabledKey)\r\n        }\r\n      }\r\n      for (let i = 0; i < firstOptions.length; i++) {\r\n        let firstData = firstOptions[i]\r\n        let firstLevel = {\r\n          'value': firstData.code,\r\n          'label': firstData.code + ':' + firstData.codename,\r\n          'children': [],\r\n          'disabled': this._.includes(this.disabledCodeArray_first, firstData.code)\r\n        }\r\n        let secondKey = this.codetype + '.' + firstData.code\r\n        let secondOptions = this.ldcodes[secondKey]\r\n        for (let j = 0; j < secondOptions.length; j++) {\r\n          let secondData = secondOptions[j]\r\n          let secondLevel = {\r\n            'value': secondData.code,\r\n            'label': secondData.code + \":\" + secondData.codename,\r\n            'disabled': this._.includes(secondKeyArray_disabled, secondKey + '.' + secondData.code)\r\n          }\r\n          firstLevel.children.push(secondLevel)\r\n        }\r\n        this.options.push(firstLevel)\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      options: [],\r\n      selectValue: [],\r\n      settings: {},\r\n      isDisabled: false\r\n    }\r\n  },\r\n  watch: {\r\n    value(val, oldVal) {\r\n      this.selectValue = val\r\n    },\r\n    selectValue(val, oldVal) {\r\n      if (val != oldVal) {\r\n        this.$emit('input', this.selectValue)\r\n      }\r\n    },\r\n    disabled(val, oldVal) {\r\n      if (val != oldVal) {\r\n        this.isDisabled = val\r\n      }\r\n    },\r\n    filter(val, oldVal) {\r\n      if (val != oldVal) {\r\n        this.selectValue = ''\r\n        this.options = this.ldcodes[this.codetype]\r\n        let filterOptions = this.filterOptions(val, this.options)\r\n        this.buildCasCaderOptions(filterOptions)\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters([\r\n      'ldcodes'\r\n    ])\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}