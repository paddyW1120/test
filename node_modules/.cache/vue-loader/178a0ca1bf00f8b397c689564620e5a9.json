{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\layout\\components\\TagsView\\index.vue?vue&type=style&index=0&id=fac8ca64&lang=scss&scoped=true&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\layout\\components\\TagsView\\index.vue","mtime":1609847106465},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":1706753188288},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1706753191924},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\postcss-loader\\src\\index.js","mtime":1706753189537},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1706753187424},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudGFncy12aWV3LWNvbnRhaW5lciB7DQogIGhlaWdodDogMzRweDsNCiAgd2lkdGg6IDEwMCU7DQogIGJhY2tncm91bmQ6ICNmZmY7DQogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZDhkY2U1Ow0KICBib3gtc2hhZG93OiAwIDFweCAzcHggMCByZ2JhKDAsIDAsIDAsIC4xMiksIDAgMCAzcHggMCByZ2JhKDAsIDAsIDAsIC4wNCk7DQoNCiAgLnRhZ3Mtdmlldy13cmFwcGVyIHsNCiAgICAudGFncy12aWV3LWl0ZW0gew0KICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgICAgY3Vyc29yOiBwb2ludGVyOw0KICAgICAgaGVpZ2h0OiAyNnB4Ow0KICAgICAgbGluZS1oZWlnaHQ6IDI2cHg7DQogICAgICBib3JkZXI6IDFweCBzb2xpZCAjZDhkY2U1Ow0KICAgICAgY29sb3I6ICM0OTUwNjA7DQogICAgICBiYWNrZ3JvdW5kOiAjZmZmOw0KICAgICAgcGFkZGluZzogMCA4cHg7DQogICAgICBmb250LXNpemU6IDEycHg7DQogICAgICBtYXJnaW4tbGVmdDogNXB4Ow0KICAgICAgbWFyZ2luLXRvcDogNHB4Ow0KDQogICAgICAmOmZpcnN0LW9mLXR5cGUgew0KICAgICAgICBtYXJnaW4tbGVmdDogMTVweDsNCiAgICAgIH0NCg0KICAgICAgJjpsYXN0LW9mLXR5cGUgew0KICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7DQogICAgICB9DQoNCiAgICAgICYuYWN0aXZlIHsNCiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzI3Mzc5MzsNCiAgICAgICAgY29sb3I6ICNmZmY7DQogICAgICAgIGJvcmRlci1jb2xvcjogI0Q5RDlEOTsNCiAgICAgICAgZm9udC1jb2xvcjogIzI3Mzg5MTsNCg0KICAgICAgICAmOjpiZWZvcmUgew0KICAgICAgICAgIGNvbnRlbnQ6ICcnOw0KICAgICAgICAgIGJhY2tncm91bmQ6ICNmZmY7DQogICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICAgICAgICAgIHdpZHRoOiA4cHg7DQogICAgICAgICAgaGVpZ2h0OiA4cHg7DQogICAgICAgICAgYm9yZGVyLXJhZGl1czogNTAlOw0KICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDJweDsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0NCiAgfQ0KDQogIC5jb250ZXh0bWVudSB7DQogICAgbWFyZ2luOiAwOw0KICAgIGJhY2tncm91bmQ6ICNmZmY7DQogICAgei1pbmRleDogMzAwMDsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgbGlzdC1zdHlsZS10eXBlOiBub25lOw0KICAgIHBhZGRpbmc6IDVweCAwOw0KICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICBmb250LXNpemU6IDEycHg7DQogICAgZm9udC13ZWlnaHQ6IDQwMDsNCiAgICBjb2xvcjogIzMzMzsNCiAgICBib3gtc2hhZG93OiAycHggMnB4IDNweCAwIHJnYmEoMCwgMCwgMCwgLjMpOw0KDQogICAgbGkgew0KICAgICAgbWFyZ2luOiAwOw0KICAgICAgcGFkZGluZzogN3B4IDE2cHg7DQogICAgICBjdXJzb3I6IHBvaW50ZXI7DQoNCiAgICAgICY6aG92ZXIgew0KICAgICAgICBiYWNrZ3JvdW5kOiAjZWVlOw0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0SA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/layout/components/TagsView","sourcesContent":["<template>\r\n  <div class=\"tags-view-container\" id=\"tags-view-container\">\r\n    <scroll-pane class=\"tags-view-wrapper\" ref=\"scrollPane\">\r\n      <router-link\r\n        :class=\"isActive(tag)?'active':''\"\r\n        :key=\"tag.path\"\r\n        :to=\"{ path: tag.path, query: tag.query, fullPath: tag.fullPath }\"\r\n        @click.middle.native=\"!isAffix(tag)?closeSelectedTag(tag):''\"\r\n        @contextmenu.prevent.native=\"openMenu(tag,$event)\"\r\n        class=\"tags-view-item\"\r\n        ref=\"tag\"\r\n        tag=\"span\"\r\n        v-for=\"tag in visitedViews\"\r\n      >\r\n        {{ generateTitle(tag.title) }}\r\n        <span @click.prevent.stop=\"closeSelectedTag(tag)\" class=\"el-icon-close\" v-if=\"!isAffix(tag)\"/>\r\n      </router-link>\r\n    </scroll-pane>\r\n    <ul :style=\"{left:left+'px',top:top+'px'}\" class=\"contextmenu\" v-show=\"visible\">\r\n      <li @click=\"refreshSelectedTag(selectedTag)\">{{ $t('tagsView.refresh') }}</li>\r\n      <li @click=\"closeSelectedTag(selectedTag)\" v-if=\"!isAffix(selectedTag)\">{{ $t('tagsView.close') }}</li>\r\n      <li @click=\"closeOthersTags\">{{ $t('tagsView.closeOthers') }}</li>\r\n      <li @click=\"closeAllTags(selectedTag)\">{{ $t('tagsView.closeAll') }}</li>\r\n      <li @click=\"saveMenu(selectedTag)\">{{ $t('tagsView.saveMenu') }}</li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ScrollPane from './ScrollPane'\r\nimport { generateTitle } from '@/utils/i18n'\r\nimport path from 'path'\r\nimport Fuse from 'fuse.js'\r\nimport i18n from '@/lang'\r\n\r\nexport default {\r\n  components: { ScrollPane },\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      top: 0,\r\n      left: 0,\r\n      selectedTag: {},\r\n      affixTags: [],\r\n      searchPool: [],\r\n      fuse: [],\r\n    }\r\n  },\r\n  computed: {\r\n    visitedViews() {\r\n      return this.$store.state.tagsView.visitedViews\r\n    },\r\n    routes() {\r\n      return this.$store.state.permission.routes\r\n    }\r\n  },\r\n  watch: {\r\n    $route() {\r\n      this.addTags()\r\n      this.moveToCurrentTag()\r\n    },\r\n    visible(value) {\r\n      if (value) {\r\n        document.body.addEventListener('click', this.closeMenu)\r\n      } else {\r\n        document.body.removeEventListener('click', this.closeMenu)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initTags()\r\n    this.addTags()\r\n    this.searchPool = this.generateRoutes(this.routes)\r\n    this.initFuse(this.searchPool)\r\n  },\r\n  methods: {\r\n    generateTitle, // generateTitle by vue-i18n\r\n    isActive(route) {\r\n      if (route.path === this.$route.path){\r\n        let params = route.params\r\n        if (JSON.stringify(params) !== '{}'){\r\n          this.cachePdData(route.path,params)\r\n        }\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n    isAffix(tag) {\r\n      return tag.meta && tag.meta.affix\r\n    },\r\n    filterAffixTags(routes, basePath = '/') {\r\n      let tags = []\r\n      routes.forEach(route => {\r\n        if (route.meta && route.meta.affix) {\r\n          const tagPath = path.resolve(basePath, route.path)\r\n          tags.push({\r\n            fullPath: tagPath,\r\n            path: tagPath,\r\n            name: route.name,\r\n            meta: { ...route.meta }\r\n          })\r\n        }\r\n        if (route.children) {\r\n          const tempTags = this.filterAffixTags(route.children, route.path)\r\n          if (tempTags.length >= 1) {\r\n            tags = [...tags, ...tempTags]\r\n          }\r\n        }\r\n      })\r\n      return tags\r\n    },\r\n    initTags() {\r\n      const affixTags = this.affixTags = this.filterAffixTags(this.routes)\r\n      for (const tag of affixTags) {\r\n        // Must have tag name\r\n        if (tag.name) {\r\n          this.$store.dispatch('tagsView/addVisitedView', tag)\r\n        }\r\n      }\r\n    },\r\n    addTags() {\r\n      const { name } = this.$route\r\n      if (name) {\r\n        this.$store.dispatch('tagsView/addView', this.$route)\r\n      }\r\n      return false\r\n    },\r\n    moveToCurrentTag() {\r\n      const tags = this.$refs.tag\r\n      this.$nextTick(() => {\r\n        for (const tag of tags) {\r\n          if (tag.to.path === this.$route.path) {\r\n            this.$refs.scrollPane.moveToTarget(tag)\r\n            // when query is different then update\r\n            if (tag.to.fullPath !== this.$route.fullPath) {\r\n              this.$store.dispatch('tagsView/updateVisitedView', this.$route)\r\n            }\r\n            break\r\n          }\r\n        }\r\n      })\r\n    },\r\n    refreshSelectedTag(view) {\r\n      this.$store.dispatch('tagsView/delCachedView', view).then(() => {\r\n        const { fullPath } = view\r\n        this.$nextTick(() => {\r\n          this.$router.replace({\r\n            path: '/redirect' + fullPath\r\n          })\r\n        })\r\n      })\r\n    },\r\n    closeSelectedTag(view) {\r\n      this.$store.dispatch('tagsView/delView', view).then(({ visitedViews }) => {\r\n        if (this.isActive(view)) {\r\n          this.toLastView(visitedViews, view)\r\n        }\r\n      })\r\n    },\r\n    closeOthersTags() {\r\n      this.$router.push(this.selectedTag).catch(() => {\r\n      })\r\n      this.$store.dispatch('tagsView/delOthersViews', this.selectedTag).then(() => {\r\n        this.moveToCurrentTag()\r\n      })\r\n    },\r\n    closeAllTags(view) {\r\n      this.$store.dispatch('tagsView/delAllViews').then(({ visitedViews }) => {\r\n        if (this.affixTags.some(tag => tag.path === view.path)) {\r\n          this.$router.push('/')\r\n          return\r\n        }\r\n        this.toLastView(visitedViews, view)\r\n      })\r\n    },\r\n    saveMenu(view) {\r\n      let fullPath = view.fullPath\r\n      let hidden = view.meta.hidden\r\n      if (hidden !== 'true') {\r\n        let res = this.fuse.search(fullPath)\r\n        let path =  res[0].path\r\n        let title =  res[0].title.join('>')\r\n        let shortcutMenu =  sessionStorage.getItem(\"shortcutMenu\")\r\n        if (shortcutMenu){\r\n            let smenus =  JSON.parse(shortcutMenu)\r\n            if (!smenus.some(tag => tag.path === path)) {\r\n              smenus.push({'path':path,'title':title})\r\n              sessionStorage.setItem(\"shortcutMenu\",JSON.stringify(smenus))\r\n            }\r\n            this.$message({\r\n              message: this.$t('successMessage.save'),\r\n              type: 'success'\r\n            })\r\n        }else {\r\n           let smenus = [{'path':path,'title':title}]\r\n           sessionStorage.setItem(\"shortcutMenu\",JSON.stringify(smenus))\r\n        }\r\n      }else {\r\n        this.$message({\r\n          message: this.$t('tagsView.msgTip2'),\r\n          type: 'warning'\r\n        })\r\n      }\r\n    },\r\n    toLastView(visitedViews, view) {\r\n      const latestView = visitedViews.slice(-1)[0]\r\n      if (latestView) {\r\n        this.$router.push(latestView.fullPath)\r\n      } else {\r\n        // now the default is to redirect to the home page if there is no tags-view,\r\n        // you can adjust it according to your needs.\r\n        if (view.name === 'Dashboard') {\r\n          // to reload home page\r\n          this.$router.replace({ path: '/redirect' + view.fullPath })\r\n        } else {\r\n          this.$router.push('/')\r\n        }\r\n      }\r\n    },\r\n    openMenu(tag, e) {\r\n      const menuMinWidth = 105\r\n      const offsetLeft = this.$el.getBoundingClientRect().left // container margin left\r\n      const offsetWidth = this.$el.offsetWidth // container width\r\n      const maxLeft = offsetWidth - menuMinWidth // left boundary\r\n      const left = e.clientX - offsetLeft + 15 // 15: margin right\r\n\r\n      if (left > maxLeft) {\r\n        this.left = maxLeft\r\n      } else {\r\n        this.left = left\r\n      }\r\n\r\n      this.top = e.clientY\r\n      this.visible = true\r\n      this.selectedTag = tag\r\n    },\r\n    closeMenu() {\r\n      this.visible = false\r\n    },\r\n    initFuse(list) {\r\n      this.fuse = new Fuse(list, {\r\n        shouldSort: true,\r\n        threshold: 0.4,\r\n        location: 0,\r\n        distance: 100,\r\n        maxPatternLength: 32,\r\n        minMatchCharLength: 1,\r\n        keys: [{\r\n          name: 'title',\r\n          weight: 0.3\r\n        }, {\r\n          name: 'path',\r\n          weight: 0.7\r\n        }]\r\n      })\r\n    },\r\n    generateRoutes(routes, basePath = '/', prefixTitle = []) {\r\n      let res = []\r\n\r\n      for (const router of routes) {\r\n        // skip hidden router\r\n        if (router.hidden) {\r\n          continue\r\n        }\r\n\r\n        const data = {\r\n          path: path.resolve(basePath, router.path),\r\n          title: [...prefixTitle]\r\n        }\r\n\r\n        if (router.meta && router.meta.title) {\r\n          // generate internationalized title\r\n          const i18ntitle = i18n.t(`route.${router.meta.title}`)\r\n\r\n          data.title = [...data.title, i18ntitle]\r\n\r\n          if (router.redirect !== 'noRedirect') {\r\n            // only push the routes with title\r\n            // special case: need to exclude parent router without redirect\r\n            res.push(data)\r\n          }\r\n        }\r\n\r\n        // recursive child routes\r\n        if (router.children) {\r\n          const tempRoutes = this.generateRoutes(router.children, data.path, data.title)\r\n          if (tempRoutes.length >= 1) {\r\n            res = [...res, ...tempRoutes]\r\n          }\r\n        }\r\n      }\r\n      return res\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.tags-view-container {\r\n  height: 34px;\r\n  width: 100%;\r\n  background: #fff;\r\n  border-bottom: 1px solid #d8dce5;\r\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, .12), 0 0 3px 0 rgba(0, 0, 0, .04);\r\n\r\n  .tags-view-wrapper {\r\n    .tags-view-item {\r\n      display: inline-block;\r\n      position: relative;\r\n      cursor: pointer;\r\n      height: 26px;\r\n      line-height: 26px;\r\n      border: 1px solid #d8dce5;\r\n      color: #495060;\r\n      background: #fff;\r\n      padding: 0 8px;\r\n      font-size: 12px;\r\n      margin-left: 5px;\r\n      margin-top: 4px;\r\n\r\n      &:first-of-type {\r\n        margin-left: 15px;\r\n      }\r\n\r\n      &:last-of-type {\r\n        margin-right: 15px;\r\n      }\r\n\r\n      &.active {\r\n        background-color: #273793;\r\n        color: #fff;\r\n        border-color: #D9D9D9;\r\n        font-color: #273891;\r\n\r\n        &::before {\r\n          content: '';\r\n          background: #fff;\r\n          display: inline-block;\r\n          width: 8px;\r\n          height: 8px;\r\n          border-radius: 50%;\r\n          position: relative;\r\n          margin-right: 2px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .contextmenu {\r\n    margin: 0;\r\n    background: #fff;\r\n    z-index: 3000;\r\n    position: absolute;\r\n    list-style-type: none;\r\n    padding: 5px 0;\r\n    border-radius: 4px;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    color: #333;\r\n    box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, .3);\r\n\r\n    li {\r\n      margin: 0;\r\n      padding: 7px 16px;\r\n      cursor: pointer;\r\n\r\n      &:hover {\r\n        background: #eee;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n//reset element css of el-icon-close\r\n.tags-view-wrapper {\r\n  .tags-view-item {\r\n    .el-icon-close {\r\n      width: 16px;\r\n      height: 16px;\r\n      vertical-align: 2px;\r\n      border-radius: 50%;\r\n      text-align: center;\r\n      transition: all .3s cubic-bezier(.645, .045, .355, 1);\r\n      transform-origin: 100% 50%;\r\n\r\n      &:before {\r\n        transform: scale(.6);\r\n        display: inline-block;\r\n        vertical-align: -3px;\r\n      }\r\n\r\n      &:hover {\r\n        background-color: #b4bccc;\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}