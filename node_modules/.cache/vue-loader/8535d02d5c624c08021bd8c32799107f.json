{"remainingRequest":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\ibrms\\ruleManagement\\ruleTestParam\\index.vue?vue&type=style&index=0&id=24dc7048&lang=scss&scoped=true&","dependencies":[{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\src\\views\\ibrms\\ruleManagement\\ruleTestParam\\index.vue","mtime":1609847106796},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\css-loader\\dist\\cjs.js","mtime":1706753188288},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1706753191924},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\postcss-loader\\src\\index.js","mtime":1706753189537},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1706753187424},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1706753187435},{"path":"D:\\86181\\Desktop\\product\\pcs-product-view\\node_modules\\vue-loader\\lib\\index.js","mtime":1706753190941}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5wYW5lLWhlaWdodCB7DQogIGhlaWdodDogNDUwcHg7DQogIG92ZXJmbG93LXk6IGF1dG87DQogIG92ZXJmbG93LXg6IGhpZGRlbjsNCn0NCi5ib3ggew0KICBtYXJnaW4tcmlnaHQ6IDEwJTsNCn0NCi5ibnRDbGFzcyB7DQp9DQoucnVsZVRlc3Qgew0KICBoZWlnaHQ6IDY1MHB4Ow0KfQ0KLmVsLXBhZ2UtaGVhZGVyX19jb250ZW50ew0KICAgICAgZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7DQp9DQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/ibrms/ruleManagement/ruleTestParam","sourcesContent":["<template>\r\n <cus-wraper>\r\n   <div class=\"ruleTest\">\r\n    <template v-if=\"menu\">\r\n      <cus-page-title-back @backTo=\"goBackRule\"  :label=\"$t('ruleTestParam.currentRule')+':'+ruleCode\"/>\r\n    </template>\r\n    <template v-if=\"!menu\">\r\n        <cus-page-title :label=\"$t('ruleTestParam.currentRule')+':'+ruleCode\"></cus-page-title>\r\n    </template>\r\n    <el-tabs\r\n      type=\"border-card\"\r\n      @tab-click=\"tabClick\"\r\n      v-model=\"activeTabName\"\r\n      style=\"margin-top: 30px; height: 85%;  overflow: auto;\"\r\n    >\r\n    <el-tab-pane :label=\"$t('ruleTestParam.ruleInfo')\" name=\"ruleInfo\">\r\n      <rule-description v-if=\"isDesc\" :description=\"ruleDesc\" :ruleCode=\"code\" :type=\"ruleType\" />\r\n    </el-tab-pane>\r\n    <el-tab-pane :label=\"$t('ruleTestParam.param')\" name=\"prepareData\">\r\n      <el-tabs\r\n        tab-position=\"left\"\r\n        v-model=\"activeTab\"\r\n        type=\"border-card\"\r\n        @tab-click=\"clickSwatch\"\r\n      >\r\n      <el-tab-pane\r\n        class=\"pane-height\"\r\n        :label=\"it.bom.cnName\"\r\n        :name=\"it.bom.name\"\r\n        v-for=\"(it, index) in dynamicDataList\"\r\n      >\r\n            <template slot-scope=\"scope\">\r\n              <div v-if=\"!it.isArray\">\r\n                <dynamic-form :dForm=\"it\" />\r\n              </div>\r\n              <div v-else-if=\"it.isArray\">\r\n                <dynamic-table-dialog :dData=\"it\" :dId=\"it.id\" />\r\n              </div>\r\n            </template>\r\n          </el-tab-pane>\r\n        </el-tabs>\r\n        <div class=\"bntClass\" style=\"float: right;margin-right: 5px;margin-top: 2%;\">\r\n          <el-button  size=\"mini\"\r\n            type=\"primary\"\r\n             class=\"filter-button\"\r\n            @click=\"submitForm('0')\"\r\n          ><svg-icon icon-class=\"autotest\"/>\r\n          {{ $t('ruleTestParam.ruleTest') }}</el-button>\r\n         <el-button v-if=\"ruleType == '2'\" size=\"mini\"\r\n            type=\"primary\"\r\n             class=\"filter-button\"\r\n            @click=\"submitForm('1')\"\r\n          ><svg-icon icon-class=\"autotest\"/>\r\n          {{ $t('ruleTestParam.conditions') }}</el-button>\r\n        </div>\r\n      </el-tab-pane>\r\n      <el-tab-pane :label=\"$t('ruleTestParam.ruleTestResult')\" name=\"testResult\">\r\n        <dynamic-result v-if=\"isResult\" :resultData=\"ruleResult\" :ruleType=\"ruleType\" :isConditions='isConditions' />\r\n        <br />\r\n        <br />\r\n        <template>\r\n          <el-form :inline=\"true\" label-width=\"100px\" ref=\"form\">\r\n            <el-row>\r\n              <el-col :span=\"10\">\r\n                <el-form-item :label=\"$t('ruleTestParam.testResults')\" prop=\"code\">\r\n                  <el-radio-group v-model=\"ruleState\" @change=\"changeState()\">\r\n                    <el-radio label=\"1\">{{$t('ruleTestParam.testPass')}}</el-radio>\r\n                    <el-radio label=\"2\">{{$t('ruleTestParam.testNotThrough')}}</el-radio>\r\n                  </el-radio-group>\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n          </el-form>\r\n        </template>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n    </div>\r\n  </cus-wraper>\r\n</template>\r\n\r\n<script>\r\nimport { getRuleTestBase, doRuleTest } from \"@/api/ibrms/ruleTest\";\r\nimport dynamicForm from \"@/views/ibrms/ruleManagement/dynamicForm\";\r\nimport ruleDescription from \"@/views/ibrms/ruleManagement/ruleDescription\";\r\nimport dynamicTableDialog from \"@/views/ibrms/ruleManagement/dynamicTableDialog\";\r\nimport dynamicResult from \"@/views/ibrms/ruleManagement/dynamicResult\";\r\nimport { mapGetters } from \"vuex\";\r\nimport { closeVisitTag } from \"@/utils/tagsView\";\r\n\r\nexport default {\r\n  name: \"ruleTestParam\",\r\n  components: {\r\n    dynamicForm,\r\n    dynamicTableDialog,\r\n    dynamicResult,\r\n    ruleDescription\r\n  },\r\n  data() {\r\n    return {\r\n      code: \"\",\r\n      isDesc: false,\r\n      isResult: false,\r\n      stateArray: [],\r\n      businessArray: [],\r\n      classArray: [],\r\n      validArray: [],\r\n      activeTab: \"\",\r\n      ruleTypeArray: [],\r\n      bomArray: [],\r\n      submitData: {},\r\n      ruleDesc: {},\r\n      ruleResult: [],\r\n      useData: {},\r\n      dynamicDataList: [],\r\n      voList: [],\r\n      stepTitle: \"\",\r\n      activeTabName: \"ruleInfo\",\r\n      ruleType: \"\",\r\n      ruleFlag: \"1\",\r\n      ruleQuery: true,\r\n      ruleState: \"\",\r\n      menu:false,\r\n      isConditions:'0'\r\n    };\r\n  },\r\n  created() {\r\n    this.code = this.ruleCode;\r\n    this.ruleType = this.type;\r\n    this.init();\r\n  },\r\n  props: [\"ruleCode\", \"type\", \"testTab\", \"nextState\",\"menuPage\"],\r\n  watch: {\r\n    testTab: function() {\r\n      // 监听父组件的变化\r\n      this.activeTabName = this.testTab;\r\n    }\r\n  },\r\n  methods: {\r\n    init() {\r\n      this.isResult = false;\r\n      this.active = 0;\r\n      this.activeTabName = this.testTab;\r\n      this.dynamicDataList = [];\r\n      this.ruleDesc = {};\r\n      this.voList = [];\r\n      this.submitData = {};\r\n      this.ruleState = this.nextState;\r\n      this.menu = this.menuPage\r\n      getRuleTestBase(this.code).then(response => {\r\n        this.voList = response.data.ruleDatas;\r\n        this.ruleDesc = response.data.ruleDesc;\r\n        this.$nextTick(() => {\r\n          this.isDesc = true;\r\n        });\r\n        this.buildDynamicData();\r\n      });\r\n    },\r\n    buildDynamicData() {\r\n      for (let i = 0; i < this.voList.length; i++) {\r\n            let baseVo = this.voList[i];\r\n            this.dynamicDataList.push(this.buildDynamicRecursive(baseVo));\r\n          }\r\n          this.activeTab = this.dynamicDataList[this.active].bom.name;\r\n    },\r\n    buildDynamicRecursive(vo) {\r\n      let dynamicData = {};\r\n      dynamicData.id = vo.name;\r\n      dynamicData.isArray = vo.isArray;\r\n      dynamicData.bom = {\r\n        id: vo.id,\r\n        cnName: vo.cnName,\r\n        name: vo.name,\r\n        level: vo.level\r\n      };\r\n      dynamicData.bomItem = vo.items;\r\n      dynamicData.bomItemData = [];\r\n      dynamicData.child = [];\r\n      if (vo.children.length > 0) {\r\n        for (let j = 0; j < vo.children.length; j++) {\r\n          dynamicData.child.push(this.buildDynamicRecursive(vo.children[j]));\r\n        }\r\n      }\r\n      return dynamicData;\r\n    },\r\n    nextStep() {\r\n      let tabCount = this.active;\r\n      if (tabCount > this.dynamicDataList.length - 1) {\r\n        this.activeTab = \"result\";\r\n        return;\r\n      } else {\r\n        this.active++;\r\n      }\r\n    },\r\n    previousStep() {\r\n      let tabCount = this.active;\r\n      if (tabCount <= 0) {\r\n        this.activeTab = \"description\";\r\n        return;\r\n      } else {\r\n        this.active--;\r\n        this.activeTab = this.dynamicDataList[this.active].bom.name;\r\n      }\r\n    },\r\n    finalStep() {\r\n      let tabCount = this.dynamicDataList.length - 1;\r\n      this.active = tabCount;\r\n      this.activeTabName = \"testResult\";\r\n      this.tabClick();\r\n    },\r\n    //点击标签页进行页面切换时进行续的操作\r\n    clickSwatch(tab) {\r\n      let name = tab.name;\r\n      this.dynamicDataList.forEach((bom, index) => {\r\n        if (name === \"description\") {\r\n          this.active = 0;\r\n        }\r\n        if (name === \"result\") {\r\n          this.active = this.dynamicDataList.length;\r\n        }\r\n        if (bom.bom.name === name) {\r\n          this.active = index;\r\n        }\r\n      });\r\n    },\r\n    submitForm(type) {\r\n      this.submitData = {};\r\n      this.isResult = false;\r\n      this.ruleResult = [];\r\n      let executeVo = {};\r\n      executeVo.ruleCode = this.code;\r\n      executeVo.type = type;\r\n      this.isConditions = type;\r\n      for (let i = 0; i < this.dynamicDataList.length; i++) {\r\n        this.buildVo(this.dynamicDataList[i]);\r\n      }\r\n      executeVo.form = this.submitData;\r\n      doRuleTest(executeVo)\r\n        .then(response => {\r\n          this.ruleResult = response.data;\r\n          this.$nextTick(() => {\r\n            this.isResult = true;\r\n          });\r\n          this.finalStep();\r\n        })\r\n        .catch(error => {});\r\n    },\r\n    buildVo(dynamicData) {\r\n      if (dynamicData.isArray) {\r\n        if (dynamicData.child.length > 0) {\r\n          for (let i = 0; i < dynamicData.child.length; i++) {\r\n              this.buildVo(dynamicData.child[i]);\r\n          }\r\n        }\r\n        let form = {};\r\n        form.bomId = dynamicData.bom.id;\r\n        form.bomName = dynamicData.bom.name;\r\n        form.isArray = dynamicData.isArray;\r\n        form.bomDatas = [];\r\n        //存在多条数据\r\n        for(let j = 0; j < dynamicData.bomItemData.length; j++){\r\n            let o= this.buildBomObjects(\r\n              dynamicData.bomItem,\r\n              dynamicData.bomItemData[j]\r\n            );\r\n          form.bomDatas.push(o);\r\n        }\r\n        this.submitData[dynamicData.bom.name] = form;\r\n      } else {\r\n        let form = {};\r\n        form.bomId = dynamicData.bom.id;\r\n        form.bomName = dynamicData.bom.name;\r\n        form.isArray = dynamicData.isArray;\r\n        form.bomDatas = [];\r\n        let o = this.buildBomObject(\r\n          dynamicData.bomItem,\r\n          dynamicData.bomItemData\r\n        );\r\n        form.bomDatas.push(o);\r\n        this.submitData[dynamicData.bom.name] = form;\r\n      }\r\n    },\r\n    buildBomObject(items, data) {\r\n      let targetObject = {};\r\n      for (let i = 0; i < items.length; i++) {\r\n        if (data[i]) {\r\n             targetObject[items[i].name] = {data:data[i],commandType:items[i].commandType};\r\n        } else if (items[i].isUsed) {\r\n          targetObject[items[i].name] ={data:null,commandType:null};\r\n        }\r\n      }\r\n      return targetObject;\r\n    },\r\n     buildBomObjects(items, data) {\r\n      let targetObject = {};\r\n      for (let i = 0; i < items.length; i++) {\r\n        if (data[items[i].name]) {\r\n          targetObject[items[i].name] = {data:data[items[i].name],commandType:items[i].commandType};\r\n        }else if (items[i].isUsed) {\r\n          targetObject[items[i].name] = {data:null,commandType:null};;\r\n        }\r\n      }\r\n      targetObject[\"id\"] = {data:data[\"id\"],commandType:\"String\"};\r\n      return targetObject;\r\n    },\r\n    backToList() {\r\n      ;\r\n      this.$router.go(-1);\r\n    },\r\n    tabClick() {\r\n      this.$emit(\"getChildActiveTab\", this.activeTabName);\r\n    },\r\n    changeState() {\r\n      this.$parent.$parent.setNextState(this.ruleState);\r\n    },\r\n    goBackRule(){\r\n      //跳转到父页面\r\n       closeVisitTag();\r\n       this.$router.push({name:\"规则测试\"});\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.pane-height {\r\n  height: 450px;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n}\r\n.box {\r\n  margin-right: 10%;\r\n}\r\n.bntClass {\r\n}\r\n.ruleTest {\r\n  height: 650px;\r\n}\r\n.el-page-header__content{\r\n      font-size: 12px !important;\r\n}\r\n</style>\r\n"]}]}